

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Nov 15 15:12:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289                           
   290                           	psect	strings
   291  0003                     __pstrings:	
   292  0003                     stringtab:	
   293  0003                     __stringtab:	
   294  0003                     stringcode:	
   295                           ;	String table - string pointers are 1 byte each
   296                           
   297  0003                     stringdir:	
   298  0003  3000               	movlw	high stringdir
   299  0004  008A               	movwf	10
   300  0005  0804               	movf	4,w
   301  0006  0A84               	incf	4,f
   302  0007  0782               	addwf	2,f
   303  0008                     __stringbase:	
   304  0008  3400               	retlw	0
   305  0009                     __end_of__stringtab:	
   306  0009                     setCursorPos@ln4:	
   307  0009  34D8               	retlw	216
   308  000A  3400               	retlw	0
   309  000B                     __end_ofsetCursorPos@ln4:	
   310  000B                     setCursorPos@ln3:	
   311  000B  34C8               	retlw	200
   312  000C  3400               	retlw	0
   313  000D                     __end_ofsetCursorPos@ln3:	
   314  000D                     setCursorPos@ln2:	
   315  000D  34D0               	retlw	208
   316  000E  3400               	retlw	0
   317  000F                     __end_ofsetCursorPos@ln2:	
   318  000F                     setCursorPos@ln1:	
   319  000F  34C0               	retlw	192
   320  0010  3400               	retlw	0
   321  0011                     __end_ofsetCursorPos@ln1:	
   322  0008                     _PORTD	set	8
   323  002B                     _RA3	set	43
   324  002C                     _RA4	set	44
   325  002D                     _RA5	set	45
   326  002A                     _RA2	set	42
   327  0087                     _TRISC	set	135
   328  0088                     _TRISD	set	136
   329  0085                     _TRISA	set	133
   330  009F                     _ADCON1	set	159
   331                           
   332                           ; #config settings
   333  0000                     
   334                           	psect	cinit
   335  07FC                     start_initialization:	
   336  07FC                     __initialization:	
   337  07FC                     end_of_initialization:	
   338                           ;End of C runtime variable initialization code
   339                           
   340  07FC                     __end_of__initialization:	
   341  07FC  0183               	clrf	3
   342  07FD  120A  118A  2FB0   	ljmp	_main	;jump to C main() function
   343                           
   344                           	psect	cstackCOMMON
   345  0070                     __pcstackCOMMON:	
   346  0070                     ?_lcd_init:	
   347  0070                     ?_writechar:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_delay:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_init:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ??_init:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_main:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_writecmd:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     delay@t:	
   366                           ; 1 bytes @ 0x0
   367                           
   368                           
   369                           ; 2 bytes @ 0x0
   370  0070                     	ds	2
   371  0072                     ??_delay:	
   372                           
   373                           ; 1 bytes @ 0x2
   374  0072                     	ds	1
   375  0073                     delay@i:	
   376                           
   377                           ; 2 bytes @ 0x3
   378  0073                     	ds	2
   379  0075                     ??_writechar:	
   380  0075                     ??_writecmd:	
   381                           ; 1 bytes @ 0x5
   382                           
   383  0075                     writecmd@command:	
   384                           ; 1 bytes @ 0x5
   385                           
   386  0075                     writechar@character:	
   387                           ; 1 bytes @ 0x5
   388                           
   389                           
   390                           ; 1 bytes @ 0x5
   391  0075                     	ds	1
   392  0076                     ??_lcd_init:	
   393  0076                     ??_main:	
   394                           ; 1 bytes @ 0x6
   395                           
   396                           
   397                           	psect	maintext
   398  07B0                     __pmaintext:	
   399                           ; 1 bytes @ 0x6
   400 ;;
   401 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   402 ;;
   403 ;; *************** function _main *****************
   404 ;; Defined at:
   405 ;;		line 36 in file "main.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2, status,0, pclath, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : B00/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   419 ;;      Params:         0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0
   421 ;;      Temps:          0       0       0       0       0
   422 ;;      Totals:         0       0       0       0       0
   423 ;;Total ram usage:        0 bytes
   424 ;; Hardware stack levels required when called:    3
   425 ;; This function calls:
   426 ;;		_init
   427 ;;		_lcd_init
   428 ;;		_writechar
   429 ;; This function is called by:
   430 ;;		Startup code after reset
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           
   435                           ;psect for function _main
   436  07B0                     _main:	
   437                           
   438                           ;main.c: 38:  init();
   439                           
   440                           ;incstack = 0
   441                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   442  07B0  120A  118A  2794  120A  118A  	fcall	_init
   443                           
   444                           ;main.c: 40:  lcd_init();
   445  07B5  120A  118A  279F  120A  118A  	fcall	_lcd_init
   446                           
   447                           ;main.c: 41:  writechar('c');
   448  07BA  3063               	movlw	99
   449  07BB  120A  118A  27D4  120A  118A  	fcall	_writechar
   450  07C0                     l22:	
   451                           ;main.c: 42:     while (1) {
   452                           
   453                           
   454                           ;main.c: 48:     }
   455  07C0  2FC0               	goto	l22
   456  07C1                     __end_of_main:	
   457                           
   458                           	psect	text1
   459  07D4                     __ptext1:	
   460 ;; *************** function _writechar *****************
   461 ;; Defined at:
   462 ;;		line 17 in file "lcd_driver.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;  character       1    wreg     unsigned char 
   465 ;; Auto vars:     Size  Location     Type
   466 ;;  character       1    5[COMMON] unsigned char 
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, status,2, status,0, pclath, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         1       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0
   479 ;;      Totals:         1       0       0       0       0
   480 ;;Total ram usage:        1 bytes
   481 ;; Hardware stack levels used:    1
   482 ;; Hardware stack levels required when called:    1
   483 ;; This function calls:
   484 ;;		_delay
   485 ;; This function is called by:
   486 ;;		_main
   487 ;;		_writeInt
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           
   492                           ;psect for function _writechar
   493  07D4                     _writechar:	
   494                           
   495                           ;incstack = 0
   496                           ; Regs used in _writechar: [wreg+status,2+status,0+pclath+cstack]
   497                           ;writechar@character stored from wreg
   498  07D4  00F5               	movwf	writechar@character
   499                           
   500                           ;lcd_driver.c: 18:  RA5 = 1;
   501  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   502  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   503  07D7  1685               	bsf	5,5	;volatile
   504                           
   505                           ;lcd_driver.c: 19:  RA4 = 0;
   506  07D8  1205               	bcf	5,4	;volatile
   507                           
   508                           ;lcd_driver.c: 20:  PORTD = character;
   509  07D9  0875               	movf	writechar@character,w
   510  07DA  0088               	movwf	8	;volatile
   511                           
   512                           ;lcd_driver.c: 21:  RA3 = 0;
   513  07DB  1185               	bcf	5,3	;volatile
   514                           
   515                           ;lcd_driver.c: 22:  delay(60);
   516  07DC  303C               	movlw	60
   517  07DD  00F0               	movwf	delay@t
   518  07DE  3000               	movlw	0
   519  07DF  00F1               	movwf	delay@t+1
   520  07E0  120A  118A  27E7   	fcall	_delay
   521                           
   522                           ;lcd_driver.c: 23:  RA3 = 1;
   523  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   524  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   525  07E5  1585               	bsf	5,3	;volatile
   526  07E6  0008               	return
   527  07E7                     __end_of_writechar:	
   528                           
   529                           	psect	text2
   530  079F                     __ptext2:	
   531 ;; *************** function _lcd_init *****************
   532 ;; Defined at:
   533 ;;		line 59 in file "lcd_driver.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0, pclath, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   547 ;;      Params:         0       0       0       0       0
   548 ;;      Locals:         0       0       0       0       0
   549 ;;      Temps:          0       0       0       0       0
   550 ;;      Totals:         0       0       0       0       0
   551 ;;Total ram usage:        0 bytes
   552 ;; Hardware stack levels used:    1
   553 ;; Hardware stack levels required when called:    2
   554 ;; This function calls:
   555 ;;		_writecmd
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           
   562                           ;psect for function _lcd_init
   563  079F                     _lcd_init:	
   564                           
   565                           ;lcd_driver.c: 60:  writecmd(0x0F);
   566                           
   567                           ;incstack = 0
   568                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   569  079F  300F               	movlw	15
   570  07A0  120A  118A  27C1  120A  118A  	fcall	_writecmd
   571                           
   572                           ;lcd_driver.c: 61:  writecmd(0x38);
   573  07A5  3038               	movlw	56
   574  07A6  120A  118A  27C1  120A  118A  	fcall	_writecmd
   575                           
   576                           ;lcd_driver.c: 62:  writecmd(0x01);
   577  07AB  3001               	movlw	1
   578  07AC  120A  118A  27C1   	fcall	_writecmd
   579  07AF  0008               	return
   580  07B0                     __end_of_lcd_init:	
   581                           
   582                           	psect	text3
   583  07C1                     __ptext3:	
   584 ;; *************** function _writecmd *****************
   585 ;; Defined at:
   586 ;;		line 8 in file "lcd_driver.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;  command         1    wreg     unsigned char 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  command         1    5[COMMON] unsigned char 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0, pclath, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         1       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0
   603 ;;      Totals:         1       0       0       0       0
   604 ;;Total ram usage:        1 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    1
   607 ;; This function calls:
   608 ;;		_delay
   609 ;; This function is called by:
   610 ;;		_lcd_init
   611 ;;		_setCursorPos
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           
   616                           ;psect for function _writecmd
   617  07C1                     _writecmd:	
   618                           
   619                           ;incstack = 0
   620                           ; Regs used in _writecmd: [wreg+status,2+status,0+pclath+cstack]
   621                           ;writecmd@command stored from wreg
   622  07C1  00F5               	movwf	writecmd@command
   623                           
   624                           ;lcd_driver.c: 9:  RA5 = 0;
   625  07C2  1283               	bcf	3,5	;RP0=0, select bank0
   626  07C3  1303               	bcf	3,6	;RP1=0, select bank0
   627  07C4  1285               	bcf	5,5	;volatile
   628                           
   629                           ;lcd_driver.c: 10:  RA4 = 0;
   630  07C5  1205               	bcf	5,4	;volatile
   631                           
   632                           ;lcd_driver.c: 11:  PORTD = command;
   633  07C6  0875               	movf	writecmd@command,w
   634  07C7  0088               	movwf	8	;volatile
   635                           
   636                           ;lcd_driver.c: 12:  RA3 = 0;
   637  07C8  1185               	bcf	5,3	;volatile
   638                           
   639                           ;lcd_driver.c: 13:  delay(60);
   640  07C9  303C               	movlw	60
   641  07CA  00F0               	movwf	delay@t
   642  07CB  3000               	movlw	0
   643  07CC  00F1               	movwf	delay@t+1
   644  07CD  120A  118A  27E7   	fcall	_delay
   645                           
   646                           ;lcd_driver.c: 14:  RA3 = 1;
   647  07D0  1283               	bcf	3,5	;RP0=0, select bank0
   648  07D1  1303               	bcf	3,6	;RP1=0, select bank0
   649  07D2  1585               	bsf	5,3	;volatile
   650  07D3  0008               	return
   651  07D4                     __end_of_writecmd:	
   652                           
   653                           	psect	text4
   654  07E7                     __ptext4:	
   655 ;; *************** function _delay *****************
   656 ;; Defined at:
   657 ;;		line 3 in file "Utils.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  t               2    0[COMMON] int 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  i               2    3[COMMON] int 
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   671 ;;      Params:         2       0       0       0       0
   672 ;;      Locals:         2       0       0       0       0
   673 ;;      Temps:          1       0       0       0       0
   674 ;;      Totals:         5       0       0       0       0
   675 ;;Total ram usage:        5 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; This function calls:
   678 ;;		Nothing
   679 ;; This function is called by:
   680 ;;		_writecmd
   681 ;;		_writechar
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           
   686                           ;psect for function _delay
   687  07E7                     _delay:	
   688                           
   689                           ;Utils.c: 4:  for (int i = 0; i < t; i++);
   690                           
   691                           ;incstack = 0
   692                           ; Regs used in _delay: [wreg+status,2]
   693  07E7  01F3               	clrf	delay@i
   694  07E8  01F4               	clrf	delay@i+1
   695  07E9                     l68:	
   696  07E9  0874               	movf	delay@i+1,w
   697  07EA  3A80               	xorlw	128
   698  07EB  00F2               	movwf	??_delay
   699  07EC  0871               	movf	delay@t+1,w
   700  07ED  3A80               	xorlw	128
   701  07EE  0272               	subwf	??_delay,w
   702  07EF  1D03               	skipz
   703  07F0  2FF3               	goto	u85
   704  07F1  0870               	movf	delay@t,w
   705  07F2  0273               	subwf	delay@i,w
   706  07F3                     u85:	
   707  07F3  1803               	btfsc	3,0
   708  07F4  0008               	return
   709  07F5  3001               	movlw	1
   710  07F6  07F3               	addwf	delay@i,f
   711  07F7  1803               	skipnc
   712  07F8  0AF4               	incf	delay@i+1,f
   713  07F9  3000               	movlw	0
   714  07FA  07F4               	addwf	delay@i+1,f
   715  07FB  2FE9               	goto	l68
   716  07FC                     __end_of_delay:	
   717                           
   718                           	psect	text5
   719  0794                     __ptext5:	
   720 ;; *************** function _init *****************
   721 ;; Defined at:
   722 ;;		line 28 in file "main.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0
   739 ;;      Totals:         0       0       0       0       0
   740 ;;Total ram usage:        0 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _init
   751  0794                     _init:	
   752                           
   753                           ;main.c: 29:  ADCON1 = 0X07;
   754                           
   755                           ;incstack = 0
   756                           ; Regs used in _init: [wreg+status,2]
   757  0794  3007               	movlw	7
   758  0795  1683               	bsf	3,5	;RP0=1, select bank1
   759  0796  1303               	bcf	3,6	;RP1=0, select bank1
   760  0797  009F               	movwf	31	;volatile
   761                           
   762                           ;main.c: 30:  TRISA = 0X00;
   763  0798  0185               	clrf	5	;volatile
   764                           
   765                           ;main.c: 31:  TRISD = 0X00;
   766  0799  0188               	clrf	8	;volatile
   767                           
   768                           ;main.c: 32:  TRISC = 0x00;
   769  079A  0187               	clrf	7	;volatile
   770                           
   771                           ;main.c: 33:  RA2 = 1;
   772  079B  1283               	bcf	3,5	;RP0=0, select bank0
   773  079C  1303               	bcf	3,6	;RP1=0, select bank0
   774  079D  1505               	bsf	5,2	;volatile
   775  079E  0008               	return
   776  079F                     __end_of_init:	
   777  007E                     btemp	set	126	;btemp
   778  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    8
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_writechar
    _writechar->_delay
    _lcd_init->_writecmd
    _writecmd->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     440
                               _init
                           _lcd_init
                          _writechar
 ---------------------------------------------------------------------------------
 (1) _writechar                                            1     1      0     220
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     220
                           _writecmd
 ---------------------------------------------------------------------------------
 (2) _writecmd                                             1     1      0     220
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2     198
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _lcd_init
     _writecmd
       _delay
   _writechar
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Nov 15 15:12:11 2019

                      pc 0002                       l22 07C0                       l68 07E9  
                     u85 07F3                       fsr 0004                      _RA2 002A  
                    _RA3 002B                      _RA4 002C                      _RA5 002D  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     _main 07B0  
                   _init 0794                     btemp 007E                     start 0000  
                  ?_main 0070                    ?_init 0070            __CFG_WDTE$OFF 0000  
                  _PORTD 0008                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088            __CFG_PWRTE$ON 0000                    _delay 07E7  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07C1  
           __end_of_init 079F                   ??_main 0076                   ??_init 0070  
                 ?_delay 0070                   _ADCON1 009F         __end_of_lcd_init 07B0  
        writecmd@command 0075                   delay@i 0073                   delay@t 0070  
       __end_of_writecmd 07D4  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_delay 07FC                  ??_delay 0072               __pmaintext 07B0  
              ?_lcd_init 0070               __stringtab 0003       __size_of_writechar 0013  
                __ptext1 07D4                  __ptext2 079F                  __ptext3 07C1  
                __ptext4 07E7                  __ptext5 0794                ?_writecmd 0070  
             ??_lcd_init 0076     end_of_initialization 07FC               ??_writecmd 0075  
      __end_of_writechar 07E7      start_initialization 07FC                ___latbits 0002  
      __size_of_lcd_init 0011          setCursorPos@ln1 000F          setCursorPos@ln2 000D  
        setCursorPos@ln3 000B          setCursorPos@ln4 0009                __pstrings 0003  
     writechar@character 0075        __size_of_writecmd 0013           __size_of_delay 0015  
            __stringbase 0008                _writechar 07D4  __end_ofsetCursorPos@ln1 0011  
__end_ofsetCursorPos@ln2 000F  __end_ofsetCursorPos@ln3 000D  __end_ofsetCursorPos@ln4 000B  
     __end_of__stringtab 0009               ?_writechar 0070                 _lcd_init 079F  
          __size_of_main 0011            __size_of_init 000B                 _writecmd 07C1  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
            ??_writechar 0075  
