

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov 17 20:48:27 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0098                     	;# 
   337  0099                     	;# 
   338  009C                     	;# 
   339  009D                     	;# 
   340  009E                     	;# 
   341  009F                     	;# 
   342  010C                     	;# 
   343  010D                     	;# 
   344  010E                     	;# 
   345  010F                     	;# 
   346  018C                     	;# 
   347  018D                     	;# 
   348                           
   349                           	psect	strings
   350  0003                     __pstrings:	
   351  0003                     stringtab:	
   352  0003                     __stringtab:	
   353  0003                     stringcode:	
   354                           ;	String table - string pointers are 1 byte each
   355                           
   356  0003                     stringdir:	
   357  0003  3000               	movlw	high stringdir
   358  0004  008A               	movwf	10
   359  0005  0804               	movf	4,w
   360  0006  0A84               	incf	4,f
   361  0007  0782               	addwf	2,f
   362  0008                     __stringbase:	
   363  0008  3400               	retlw	0
   364  0009                     __end_of__stringtab:	
   365  0009                     setCursorPos@ln4:	
   366  0009  34D8               	retlw	216
   367  000A  3400               	retlw	0
   368  000B                     __end_ofsetCursorPos@ln4:	
   369  000B                     setCursorPos@ln3:	
   370  000B  34C8               	retlw	200
   371  000C  3400               	retlw	0
   372  000D                     __end_ofsetCursorPos@ln3:	
   373  000D                     setCursorPos@ln2:	
   374  000D  34D0               	retlw	208
   375  000E  3400               	retlw	0
   376  000F                     __end_ofsetCursorPos@ln2:	
   377  000F                     setCursorPos@ln1:	
   378  000F  34C0               	retlw	192
   379  0010  3400               	retlw	0
   380  0011                     __end_ofsetCursorPos@ln1:	
   381  0008                     _PORTD	set	8
   382  002B                     _RA3	set	43
   383  002C                     _RA4	set	44
   384  002D                     _RA5	set	45
   385  0049                     _RE1	set	73
   386  002A                     _RA2	set	42
   387  0087                     _TRISC	set	135
   388  0088                     _TRISD	set	136
   389  0085                     _TRISA	set	133
   390  009F                     _ADCON1	set	159
   391  0449                     _TRISE1	set	1097
   392                           
   393                           ; #config settings
   394  0000                     
   395                           	psect	cinit
   396  07F8                     start_initialization:	
   397  07F8                     __initialization:	
   398                           
   399                           ; Clear objects allocated to BANK0
   400  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   401  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   402  07FA  01A0               	clrf	__pbssBANK0& (0+127)
   403  07FB  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   404  07FC                     end_of_initialization:	
   405                           ;End of C runtime variable initialization code
   406                           
   407  07FC                     __end_of__initialization:	
   408  07FC  0183               	clrf	3
   409  07FD  120A  118A  2F8D   	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	bssBANK0
   412  0020                     __pbssBANK0:	
   413  0020                     convert_bcd_to_string@F865:	
   414  0020                     	ds	2
   415                           
   416                           	psect	cstackCOMMON
   417  0070                     __pcstackCOMMON:	
   418  0070                     ?_buzzer_init:	
   419  0070                     ??_buzzer_init:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_buzzer_sound:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_init:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ??_init:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_main:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     buzzer_sound@bT:	
   435                           ; 1 bytes @ 0x0
   436                           
   437                           
   438                           ; 2 bytes @ 0x0
   439  0070                     	ds	2
   440  0072                     buzzer_sound@pT:	
   441                           
   442                           ; 2 bytes @ 0x2
   443  0072                     	ds	2
   444  0074                     buzzer_sound@reps:	
   445                           
   446                           ; 2 bytes @ 0x4
   447  0074                     	ds	2
   448  0076                     ??_buzzer_sound:	
   449                           
   450                           ; 1 bytes @ 0x6
   451  0076                     	ds	1
   452  0077                     buzzer_sound@i:	
   453                           
   454                           ; 2 bytes @ 0x7
   455  0077                     	ds	2
   456  0079                     buzzer_sound@j:	
   457                           
   458                           ; 2 bytes @ 0x9
   459  0079                     	ds	2
   460  007B                     buzzer_sound@j_54:	
   461                           
   462                           ; 2 bytes @ 0xB
   463  007B                     	ds	2
   464  007D                     ??_main:	
   465                           
   466                           	psect	maintext
   467  078D                     __pmaintext:	
   468                           ; 1 bytes @ 0xD
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 29 in file "main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0, pclath, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : B00/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   488 ;;      Params:         0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0
   491 ;;      Totals:         0       0       0       0       0
   492 ;;Total ram usage:        0 bytes
   493 ;; Hardware stack levels required when called:    1
   494 ;; This function calls:
   495 ;;		_buzzer_init
   496 ;;		_buzzer_sound
   497 ;;		_init
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           
   504                           ;psect for function _main
   505  078D                     _main:	
   506  078D                     l834:	
   507                           ;incstack = 0
   508                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   509                           
   510                           
   511                           ;main.c: 31:  init();
   512  078D  120A  118A  2782  120A  118A  	fcall	_init
   513  0792                     l836:	
   514                           
   515                           ;main.c: 33:     buzzer_init();
   516  0792  120A  118A  277B  120A  118A  	fcall	_buzzer_init
   517  0797                     l838:	
   518                           
   519                           ;main.c: 38:         buzzer_sound(12500, 5000, 1);
   520  0797  30D4               	movlw	212
   521  0798  00F0               	movwf	buzzer_sound@bT
   522  0799  3030               	movlw	48
   523  079A  00F1               	movwf	buzzer_sound@bT+1
   524  079B  3088               	movlw	136
   525  079C  00F2               	movwf	buzzer_sound@pT
   526  079D  3013               	movlw	19
   527  079E  00F3               	movwf	buzzer_sound@pT+1
   528  079F  3001               	movlw	1
   529  07A0  00F4               	movwf	buzzer_sound@reps
   530  07A1  3000               	movlw	0
   531  07A2  00F5               	movwf	buzzer_sound@reps+1
   532  07A3  120A  118A  27AC  120A  118A  	fcall	_buzzer_sound
   533  07A8  2F97               	goto	l838
   534  07A9  120A  118A  2800   	ljmp	start
   535  07AC                     __end_of_main:	
   536                           
   537                           	psect	text1
   538  0782                     __ptext1:	
   539 ;; *************** function _init *****************
   540 ;; Defined at:
   541 ;;		line 21 in file "main.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, status,2
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0
   558 ;;      Totals:         0       0       0       0       0
   559 ;;Total ram usage:        0 bytes
   560 ;; Hardware stack levels used:    1
   561 ;; This function calls:
   562 ;;		Nothing
   563 ;; This function is called by:
   564 ;;		_main
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           
   569                           ;psect for function _init
   570  0782                     _init:	
   571  0782                     l708:	
   572                           ;incstack = 0
   573                           ; Regs used in _init: [wreg+status,2]
   574                           
   575                           
   576                           ;main.c: 22:  ADCON1 = 0X07;
   577  0782  3007               	movlw	7
   578  0783  1683               	bsf	3,5	;RP0=1, select bank1
   579  0784  1303               	bcf	3,6	;RP1=0, select bank1
   580  0785  009F               	movwf	31	;volatile
   581  0786                     l710:	
   582                           
   583                           ;main.c: 23:  TRISA = 0X00;
   584  0786  0185               	clrf	5	;volatile
   585  0787                     l712:	
   586                           
   587                           ;main.c: 24:  TRISD = 0X00;
   588  0787  0188               	clrf	8	;volatile
   589  0788                     l714:	
   590                           
   591                           ;main.c: 25:  TRISC = 0x00;
   592  0788  0187               	clrf	7	;volatile
   593  0789                     l716:	
   594                           
   595                           ;main.c: 26:  RA2 = 1;
   596  0789  1283               	bcf	3,5	;RP0=0, select bank0
   597  078A  1303               	bcf	3,6	;RP1=0, select bank0
   598  078B  1505               	bsf	5,2	;volatile
   599  078C                     l17:	
   600  078C  0008               	return
   601  078D                     __end_of_init:	
   602                           
   603                           	psect	text2
   604  07AC                     __ptext2:	
   605 ;; *************** function _buzzer_sound *****************
   606 ;; Defined at:
   607 ;;		line 17 in file "buzzer_driver.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;  bT              2    0[COMMON] int 
   610 ;;  pT              2    2[COMMON] int 
   611 ;;  reps            2    4[COMMON] int 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  j               2   11[COMMON] int 
   614 ;;  j               2    9[COMMON] int 
   615 ;;  i               2    7[COMMON] int 
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, status,2
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   625 ;;      Params:         6       0       0       0       0
   626 ;;      Locals:         6       0       0       0       0
   627 ;;      Temps:          1       0       0       0       0
   628 ;;      Totals:        13       0       0       0       0
   629 ;;Total ram usage:       13 bytes
   630 ;; Hardware stack levels used:    1
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           
   639                           ;psect for function _buzzer_sound
   640  07AC                     _buzzer_sound:	
   641  07AC                     l822:	
   642                           ;incstack = 0
   643                           ; Regs used in _buzzer_sound: [wreg+status,2]
   644                           
   645                           
   646                           ;buzzer_driver.c: 22:     for (int i = 0; i < reps; ++i) {
   647  07AC  01F7               	clrf	buzzer_sound@i
   648  07AD  01F8               	clrf	buzzer_sound@i+1
   649  07AE  2FE9               	goto	l35
   650  07AF                     l36:	
   651                           
   652                           ;buzzer_driver.c: 23:         RE1 = 1;
   653  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   654  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   655  07B1  1489               	bsf	9,1	;volatile
   656  07B2                     l824:	
   657                           
   658                           ;buzzer_driver.c: 24:         for (int j = 0; j < bT; ++j);
   659  07B2  01F9               	clrf	buzzer_sound@j
   660  07B3  01FA               	clrf	buzzer_sound@j+1
   661  07B4  2FBB               	goto	l37
   662  07B5                     l826:	
   663  07B5  3001               	movlw	1
   664  07B6  07F9               	addwf	buzzer_sound@j,f
   665  07B7  1803               	skipnc
   666  07B8  0AFA               	incf	buzzer_sound@j+1,f
   667  07B9  3000               	movlw	0
   668  07BA  07FA               	addwf	buzzer_sound@j+1,f
   669  07BB                     l37:	
   670  07BB  087A               	movf	buzzer_sound@j+1,w
   671  07BC  3A80               	xorlw	128
   672  07BD  00F6               	movwf	??_buzzer_sound
   673  07BE  0871               	movf	buzzer_sound@bT+1,w
   674  07BF  3A80               	xorlw	128
   675  07C0  0276               	subwf	??_buzzer_sound,w
   676  07C1  1D03               	skipz
   677  07C2  2FC5               	goto	u145
   678  07C3  0870               	movf	buzzer_sound@bT,w
   679  07C4  0279               	subwf	buzzer_sound@j,w
   680  07C5                     u145:	
   681  07C5  1C03               	skipc
   682  07C6  2FC8               	goto	u141
   683  07C7  2FC9               	goto	u140
   684  07C8                     u141:	
   685  07C8  2FB5               	goto	l826
   686  07C9                     u140:	
   687  07C9                     l39:	
   688                           
   689                           ;buzzer_driver.c: 25:         RE1 = 0;;
   690  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   691  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   692  07CB  1089               	bcf	9,1	;volatile
   693  07CC                     l828:	
   694                           
   695                           ;buzzer_driver.c: 26:         for (int j = 0; j < pT; ++j);
   696  07CC  01FB               	clrf	buzzer_sound@j_54
   697  07CD  01FC               	clrf	buzzer_sound@j_54+1
   698  07CE  2FD5               	goto	l40
   699  07CF                     l830:	
   700  07CF  3001               	movlw	1
   701  07D0  07FB               	addwf	buzzer_sound@j_54,f
   702  07D1  1803               	skipnc
   703  07D2  0AFC               	incf	buzzer_sound@j_54+1,f
   704  07D3  3000               	movlw	0
   705  07D4  07FC               	addwf	buzzer_sound@j_54+1,f
   706  07D5                     l40:	
   707  07D5  087C               	movf	buzzer_sound@j_54+1,w
   708  07D6  3A80               	xorlw	128
   709  07D7  00F6               	movwf	??_buzzer_sound
   710  07D8  0873               	movf	buzzer_sound@pT+1,w
   711  07D9  3A80               	xorlw	128
   712  07DA  0276               	subwf	??_buzzer_sound,w
   713  07DB  1D03               	skipz
   714  07DC  2FDF               	goto	u155
   715  07DD  0872               	movf	buzzer_sound@pT,w
   716  07DE  027B               	subwf	buzzer_sound@j_54,w
   717  07DF                     u155:	
   718  07DF  1C03               	skipc
   719  07E0  2FE2               	goto	u151
   720  07E1  2FE3               	goto	u150
   721  07E2                     u151:	
   722  07E2  2FCF               	goto	l830
   723  07E3                     u150:	
   724  07E3                     l832:	
   725                           
   726                           ;buzzer_driver.c: 27:     }
   727  07E3  3001               	movlw	1
   728  07E4  07F7               	addwf	buzzer_sound@i,f
   729  07E5  1803               	skipnc
   730  07E6  0AF8               	incf	buzzer_sound@i+1,f
   731  07E7  3000               	movlw	0
   732  07E8  07F8               	addwf	buzzer_sound@i+1,f
   733  07E9                     l35:	
   734  07E9  0878               	movf	buzzer_sound@i+1,w
   735  07EA  3A80               	xorlw	128
   736  07EB  00F6               	movwf	??_buzzer_sound
   737  07EC  0875               	movf	buzzer_sound@reps+1,w
   738  07ED  3A80               	xorlw	128
   739  07EE  0276               	subwf	??_buzzer_sound,w
   740  07EF  1D03               	skipz
   741  07F0  2FF3               	goto	u165
   742  07F1  0874               	movf	buzzer_sound@reps,w
   743  07F2  0277               	subwf	buzzer_sound@i,w
   744  07F3                     u165:	
   745  07F3  1C03               	skipc
   746  07F4  2FF6               	goto	u161
   747  07F5  2FF7               	goto	u160
   748  07F6                     u161:	
   749  07F6  2FAF               	goto	l36
   750  07F7                     u160:	
   751  07F7                     l44:	
   752  07F7  0008               	return
   753  07F8                     __end_of_buzzer_sound:	
   754                           
   755                           	psect	text3
   756  077B                     __ptext3:	
   757 ;; *************** function _buzzer_init *****************
   758 ;; Defined at:
   759 ;;		line 11 in file "buzzer_driver.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		None
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   773 ;;      Params:         0       0       0       0       0
   774 ;;      Locals:         0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0
   776 ;;      Totals:         0       0       0       0       0
   777 ;;Total ram usage:        0 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; This function calls:
   780 ;;		Nothing
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           
   787                           ;psect for function _buzzer_init
   788  077B                     _buzzer_init:	
   789  077B                     l718:	
   790                           ;incstack = 0
   791                           ; Regs used in _buzzer_init: []
   792                           
   793                           
   794                           ;buzzer_driver.c: 12:     TRISE1 = 0;
   795  077B  1683               	bsf	3,5	;RP0=1, select bank1
   796  077C  1303               	bcf	3,6	;RP1=0, select bank1
   797  077D  1089               	bcf	9,1	;volatile
   798                           
   799                           ;buzzer_driver.c: 13:     RE1 = 0;;
   800  077E  1283               	bcf	3,5	;RP0=0, select bank0
   801  077F  1303               	bcf	3,6	;RP1=0, select bank0
   802  0780  1089               	bcf	9,1	;volatile
   803  0781                     l32:	
   804  0781  0008               	return
   805  0782                     __end_of_buzzer_init:	
   806  007E                     btemp	set	126	;btemp
   807  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    8
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__convert_bcd_to_string	PTR unsigned char  size(1) Largest target is 2
		 -> convert_bcd_to_string@num(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_buzzer_sound

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     366
                        _buzzer_init
                       _buzzer_sound
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buzzer_sound                                        13     7      6     366
                                              0 COMMON    13     7      6
 ---------------------------------------------------------------------------------
 (1) _buzzer_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buzzer_init
   _buzzer_sound
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov 17 20:48:27 2019

                        pc 0002                         l32 0781                         l40 07D5  
                       l17 078C                         l35 07E9                         l44 07F7  
                       l36 07AF                         l37 07BB                         l39 07C9  
                       fsr 0004                        l710 0786                        l712 0787  
                      l714 0788                        l716 0789                        l708 0782  
                      l718 077B                        l830 07CF                        l822 07AC  
                      l832 07E3                        l824 07B2                        l826 07B5  
                      l834 078D                        l828 07CC                        l836 0792  
                      l838 0797                        _RA2 002A                        _RA3 002B  
                      _RA4 002C                        _RA5 002D                        _RE1 0049  
                      u140 07C9                        u141 07C8                        u150 07E3  
                      u151 07E2                        u160 07F7                        u161 07F6  
                      u145 07C5                        u155 07DF                        u165 07F3  
             __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000                       _main 078D  
                     _init 0782                       btemp 007E                       start 0000  
                    ?_main 0070                      ?_init 0070              __CFG_WDTE$OFF 0000  
                    _PORTD 0008                      _TRISA 0085                      _TRISC 0087  
                    _TRISD 0088              __CFG_PWRTE$ON 0000             __CFG_BOREN$OFF 0000  
                    pclath 000A                      status 0003                      wtemp0 007E  
             ?_buzzer_init 0070            __initialization 07F8               __end_of_main 07AC  
             __end_of_init 078D                     ??_main 007D                     ??_init 0070  
            buzzer_sound@i 0077              buzzer_sound@j 0079                     _ADCON1 009F  
                   _TRISE1 0449    __end_of__initialization 07FC              ?_buzzer_sound 0070  
           __pcstackCOMMON 0070                 __pbssBANK0 0020           buzzer_sound@j_54 007B  
           ??_buzzer_sound 0076           buzzer_sound@reps 0074             buzzer_sound@bT 0070  
           buzzer_sound@pT 0072                 __pmaintext 078D       __size_of_buzzer_init 0007  
               __stringtab 0003                    __ptext1 0782                    __ptext2 07AC  
                  __ptext3 077B       end_of_initialization 07FC       __end_of_buzzer_sound 07F8  
      start_initialization 07F8                  ___latbits 0002              ??_buzzer_init 0070  
          setCursorPos@ln1 000F            setCursorPos@ln2 000D            setCursorPos@ln3 000B  
          setCursorPos@ln4 0009      __size_of_buzzer_sound 004C                  __pstrings 0003  
             _buzzer_sound 07AC        __end_of_buzzer_init 0782                __stringbase 0008  
convert_bcd_to_string@F865 0020    __end_ofsetCursorPos@ln1 0011    __end_ofsetCursorPos@ln2 000F  
  __end_ofsetCursorPos@ln3 000D    __end_ofsetCursorPos@ln4 000B         __end_of__stringtab 0009  
            __size_of_main 001F              __size_of_init 000B                _buzzer_init 077B  
                stringcode 0003                   stringdir 0003                   stringtab 0003  
