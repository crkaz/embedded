

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Nov 18 17:26:59 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.05
    34                           ; Generated 20/12/2018 GMT
    35                           ; 
    36                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F877A Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0098                     	;# 
   176  0099                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0008                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000D                     	;# 
   201  000E                     	;# 
   202  000E                     	;# 
   203  000F                     	;# 
   204  0010                     	;# 
   205  0011                     	;# 
   206  0012                     	;# 
   207  0013                     	;# 
   208  0014                     	;# 
   209  0015                     	;# 
   210  0015                     	;# 
   211  0016                     	;# 
   212  0017                     	;# 
   213  0018                     	;# 
   214  0019                     	;# 
   215  001A                     	;# 
   216  001B                     	;# 
   217  001B                     	;# 
   218  001C                     	;# 
   219  001D                     	;# 
   220  001E                     	;# 
   221  001F                     	;# 
   222  0081                     	;# 
   223  0085                     	;# 
   224  0086                     	;# 
   225  0087                     	;# 
   226  0088                     	;# 
   227  0089                     	;# 
   228  008C                     	;# 
   229  008D                     	;# 
   230  008E                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0094                     	;# 
   235  0098                     	;# 
   236  0099                     	;# 
   237  009C                     	;# 
   238  009D                     	;# 
   239  009E                     	;# 
   240  009F                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  018C                     	;# 
   246  018D                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000D                     	;# 
   261  000E                     	;# 
   262  000E                     	;# 
   263  000F                     	;# 
   264  0010                     	;# 
   265  0011                     	;# 
   266  0012                     	;# 
   267  0013                     	;# 
   268  0014                     	;# 
   269  0015                     	;# 
   270  0015                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001B                     	;# 
   278  001C                     	;# 
   279  001D                     	;# 
   280  001E                     	;# 
   281  001F                     	;# 
   282  0081                     	;# 
   283  0085                     	;# 
   284  0086                     	;# 
   285  0087                     	;# 
   286  0088                     	;# 
   287  0089                     	;# 
   288  008C                     	;# 
   289  008D                     	;# 
   290  008E                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0094                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009C                     	;# 
   298  009D                     	;# 
   299  009E                     	;# 
   300  009F                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367                           
   368                           	psect	idataBANK0
   369  0494                     __pidataBANK0:	
   370                           
   371                           ;initializer for _table
   372  0494  34C0               	retlw	192
   373  0495  34F9               	retlw	249
   374  0496  34A4               	retlw	164
   375  0497  34B0               	retlw	176
   376  0498  3499               	retlw	153
   377  0499  3492               	retlw	146
   378  049A  3482               	retlw	130
   379  049B  34F8               	retlw	248
   380  049C  3480               	retlw	128
   381  049D  3490               	retlw	144
   382                           
   383                           ;initializer for _tUKus
   384  049E  3401               	retlw	1
   385  049F  3400               	retlw	0
   386  04A0  3446               	retlw	70
   387  04A1  3400               	retlw	0
   388                           
   389                           ;initializer for _t63us
   390  04A2  3402               	retlw	2
   391  04A3  3400               	retlw	0
   392  04A4  3407               	retlw	7
   393  04A5  3400               	retlw	0
   394                           
   395                           ;initializer for _t70us
   396  04A6  3402               	retlw	2
   397  04A7  3400               	retlw	0
   398  04A8  3408               	retlw	8
   399  04A9  3400               	retlw	0
   400                           
   401                           ;initializer for _t430us
   402  04AA  3402               	retlw	2
   403  04AB  3400               	retlw	0
   404  04AC  343C               	retlw	60
   405  04AD  3400               	retlw	0
   406                           
   407                           ;initializer for _t503us
   408  04AE  3402               	retlw	2
   409  04AF  3400               	retlw	0
   410  04B0  3446               	retlw	70
   411  04B1  3400               	retlw	0
   412                           
   413                           	psect	strings
   414  0003                     __pstrings:	
   415  0003                     stringtab:	
   416  0003                     __stringtab:	
   417  0003                     stringcode:	
   418                           ;	String table - string pointers are 1 byte each
   419                           
   420  0003                     stringdir:	
   421  0003  3000               	movlw	high stringdir
   422  0004  008A               	movwf	10
   423  0005  0804               	movf	4,w
   424  0006  0A84               	incf	4,f
   425  0007  0782               	addwf	2,f
   426  0008                     __stringbase:	
   427  0008  3400               	retlw	0
   428  0009                     __end_of__stringtab:	
   429  0009                     setCursorPos@ln4:	
   430  0009  34D8               	retlw	216
   431  000A  3400               	retlw	0
   432  000B                     __end_ofsetCursorPos@ln4:	
   433  000B                     setCursorPos@ln3:	
   434  000B  34C8               	retlw	200
   435  000C  3400               	retlw	0
   436  000D                     __end_ofsetCursorPos@ln3:	
   437  000D                     setCursorPos@ln2:	
   438  000D  34D0               	retlw	208
   439  000E  3400               	retlw	0
   440  000F                     __end_ofsetCursorPos@ln2:	
   441  000F                     setCursorPos@ln1:	
   442  000F  34C0               	retlw	192
   443  0010  3400               	retlw	0
   444  0011                     __end_ofsetCursorPos@ln1:	
   445  0008                     _PORTD	set	8
   446  0048                     _RE0	set	72
   447  002B                     _RA3	set	43
   448  002C                     _RA4	set	44
   449  002D                     _RA5	set	45
   450  002A                     _RA2	set	42
   451  0087                     _TRISC	set	135
   452  0088                     _TRISD	set	136
   453  0085                     _TRISA	set	133
   454  009F                     _ADCON1	set	159
   455  0448                     _TRISE0	set	1096
   456                           
   457                           ; #config settings
   458  0000                     
   459                           	psect	cinit
   460  07E5                     start_initialization:	
   461  07E5                     __initialization:	
   462                           
   463                           ; Initialize objects allocated to BANK0
   464  07E5  1383               	bcf	3,7	;select IRP bank0
   465  07E6  303E               	movlw	low (__pdataBANK0+30)
   466  07E7  00FD               	movwf	btemp+-1
   467  07E8  3004               	movlw	high __pidataBANK0
   468  07E9  00FE               	movwf	btemp
   469  07EA  3094               	movlw	low __pidataBANK0
   470  07EB  00FF               	movwf	btemp+1
   471  07EC  3020               	movlw	low __pdataBANK0
   472  07ED  0084               	movwf	4
   473  07EE  120A  118A  2418   	fcall	init_ram0
   474                           
   475                           ; Clear objects allocated to BANK0
   476  07F1  01BE               	clrf	__pbssBANK0& (0+127)
   477  07F2  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   478  07F3  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   479  07F4  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   480  07F5  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   481  07F6  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   482  07F7  01C4               	clrf	(__pbssBANK0+6)& (0+127)
   483  07F8  01C5               	clrf	(__pbssBANK0+7)& (0+127)
   484  07F9  01C6               	clrf	(__pbssBANK0+8)& (0+127)
   485  07FA  01C7               	clrf	(__pbssBANK0+9)& (0+127)
   486  07FB  01C8               	clrf	(__pbssBANK0+10)& (0+127)
   487  07FC                     end_of_initialization:	
   488                           ;End of C runtime variable initialization code
   489                           
   490  07FC                     __end_of__initialization:	
   491  07FC  0183               	clrf	3
   492  07FD  120A  118A  2D9F   	ljmp	_main	;jump to C main() function
   493                           
   494                           	psect	bssBANK0
   495  003E                     __pbssBANK0:	
   496  003E                     read_byte@j:	
   497  003E                     	ds	1
   498  003F                     _THV:	
   499  003F                     	ds	1
   500  0040                     _TLV:	
   501  0040                     	ds	1
   502  0041                     _temperature:	
   503  0041                     	ds	8
   504                           
   505                           	psect	dataBANK0
   506  0020                     __pdataBANK0:	
   507  0020                     _table:	
   508  0020                     	ds	10
   509  002A                     _tUKus:	
   510  002A                     	ds	4
   511  002E                     _t63us:	
   512  002E                     	ds	4
   513  0032                     _t70us:	
   514  0032                     	ds	4
   515  0036                     _t430us:	
   516  0036                     	ds	4
   517  003A                     _t503us:	
   518  003A                     	ds	4
   519                           
   520                           	psect	inittext
   521  0414                     init_fetch0:	
   522                           ;	Called with low address in FSR and high address in W
   523                           
   524  0414  087E               	movf	126,w
   525  0415  008A               	movwf	10
   526  0416  087F               	movf	127,w
   527  0417  0082               	movwf	2
   528  0418                     init_ram0:	
   529                           ;Called with:
   530                           ;	high address of idata address in btemp 
   531                           ;	low address of idata address in btemp+1 
   532                           ;	low address of data in FSR
   533                           ;	high address + 1 of data in btemp-1
   534                           
   535  0418  2414  120A  118A   	fcall	init_fetch0
   536  041B  0080               	movwf	0
   537  041C  0A84               	incf	4,f
   538  041D  0804               	movf	4,w
   539  041E  067D               	xorwf	125,w
   540  041F  1903               	btfsc	3,2
   541  0420  3400               	retlw	0
   542  0421  0AFF               	incf	127,f
   543  0422  1903               	btfsc	3,2
   544  0423  0AFE               	incf	126,f
   545  0424  2C18               	goto	init_ram0
   546                           
   547                           	psect	cstackCOMMON
   548  0070                     __pcstackCOMMON:	
   549  0070                     ?_lcd_init:	
   550  0070                     ?_delay:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_writeIntArray:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_writechar:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_delay2:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ??_delay2:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_resetThermometer:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_init:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ??_init:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_main:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_writecmd:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_write_byte:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_read_byte:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_strlen:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?___awdiv:	
   590                           ; 2 bytes @ 0x0
   591                           
   592  0070                     ?___awmod:	
   593                           ; 2 bytes @ 0x0
   594                           
   595  0070                     ?___lwmod:	
   596                           ; 2 bytes @ 0x0
   597                           
   598  0070                     delay@t:	
   599                           ; 2 bytes @ 0x0
   600                           
   601  0070                     ___awdiv@divisor:	
   602                           ; 2 bytes @ 0x0
   603                           
   604  0070                     ___awmod@divisor:	
   605                           ; 2 bytes @ 0x0
   606                           
   607  0070                     ___lwmod@divisor:	
   608                           ; 2 bytes @ 0x0
   609                           
   610                           
   611                           ; 2 bytes @ 0x0
   612  0070                     	ds	1
   613  0071                     delay2@x:	
   614                           
   615                           ; 1 bytes @ 0x1
   616  0071                     	ds	1
   617  0072                     ??_delay:	
   618  0072                     ??_strlen:	
   619                           ; 1 bytes @ 0x2
   620                           
   621  0072                     delay2@y:	
   622                           ; 1 bytes @ 0x2
   623                           
   624  0072                     ___awdiv@dividend:	
   625                           ; 1 bytes @ 0x2
   626                           
   627  0072                     ___awmod@dividend:	
   628                           ; 2 bytes @ 0x2
   629                           
   630  0072                     ___lwmod@dividend:	
   631                           ; 2 bytes @ 0x2
   632                           
   633                           
   634                           ; 2 bytes @ 0x2
   635  0072                     	ds	1
   636  0073                     delay2@z:	
   637  0073                     strlen@a:	
   638                           ; 1 bytes @ 0x3
   639                           
   640  0073                     delay@i:	
   641                           ; 1 bytes @ 0x3
   642                           
   643                           
   644                           ; 2 bytes @ 0x3
   645  0073                     	ds	1
   646  0074                     ??___awdiv:	
   647  0074                     ??___awmod:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0074                     ??___lwmod:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0074                     delay2@t:	
   654                           ; 1 bytes @ 0x4
   655                           
   656  0074                     strlen@len:	
   657                           ; 1 bytes @ 0x4
   658                           
   659                           
   660                           ; 2 bytes @ 0x4
   661  0074                     	ds	1
   662  0075                     ??_writechar:	
   663  0075                     ??_resetThermometer:	
   664                           ; 1 bytes @ 0x5
   665                           
   666  0075                     ??_writecmd:	
   667                           ; 1 bytes @ 0x5
   668                           
   669  0075                     ??_write_byte:	
   670                           ; 1 bytes @ 0x5
   671                           
   672  0075                     ??_read_byte:	
   673                           ; 1 bytes @ 0x5
   674                           
   675  0075                     writecmd@command:	
   676                           ; 1 bytes @ 0x5
   677                           
   678  0075                     writechar@character:	
   679                           ; 1 bytes @ 0x5
   680                           
   681  0075                     resetThermometer@presence:	
   682                           ; 1 bytes @ 0x5
   683                           
   684  0075                     ___awdiv@counter:	
   685                           ; 1 bytes @ 0x5
   686                           
   687  0075                     ___awmod@counter:	
   688                           ; 1 bytes @ 0x5
   689                           
   690  0075                     ___lwmod@counter:	
   691                           ; 1 bytes @ 0x5
   692                           
   693                           
   694                           ; 1 bytes @ 0x5
   695  0075                     	ds	1
   696  0076                     ??_lcd_init:	
   697  0076                     ?_writeInt:	
   698                           ; 1 bytes @ 0x6
   699                           
   700  0076                     ?___lwdiv:	
   701                           ; 1 bytes @ 0x6
   702                           
   703  0076                     read_byte@value:	
   704                           ; 2 bytes @ 0x6
   705                           
   706  0076                     ___awdiv@sign:	
   707                           ; 1 bytes @ 0x6
   708                           
   709  0076                     ___awmod@sign:	
   710                           ; 1 bytes @ 0x6
   711                           
   712  0076                     writeInt@i:	
   713                           ; 1 bytes @ 0x6
   714                           
   715  0076                     ___lwdiv@divisor:	
   716                           ; 2 bytes @ 0x6
   717                           
   718                           
   719                           ; 2 bytes @ 0x6
   720  0076                     	ds	1
   721  0077                     write_byte@temp:	
   722  0077                     read_byte@i:	
   723                           ; 1 bytes @ 0x7
   724                           
   725  0077                     ___awdiv@quotient:	
   726                           ; 1 bytes @ 0x7
   727                           
   728                           
   729                           ; 2 bytes @ 0x7
   730  0077                     	ds	1
   731  0078                     ??_writeIntArray:	
   732  0078                     ??_writeInt:	
   733                           ; 1 bytes @ 0x8
   734                           
   735  0078                     write_byte@val:	
   736                           ; 1 bytes @ 0x8
   737                           
   738  0078                     ___lwdiv@dividend:	
   739                           ; 1 bytes @ 0x8
   740                           
   741                           
   742                           ; 2 bytes @ 0x8
   743  0078                     	ds	1
   744  0079                     write_byte@i:	
   745                           
   746                           ; 1 bytes @ 0x9
   747  0079                     	ds	1
   748  007A                     ??___lwdiv:	
   749  007A                     ?_get_temp:	
   750                           ; 1 bytes @ 0xA
   751                           
   752                           
   753                           ; 2 bytes @ 0xA
   754  007A                     	ds	1
   755  007B                     writeIntArray@i:	
   756  007B                     ___lwdiv@quotient:	
   757                           ; 2 bytes @ 0xB
   758                           
   759                           
   760                           ; 2 bytes @ 0xB
   761  007B                     	ds	2
   762  007D                     writeIntArray@ints:	
   763  007D                     ___lwdiv@counter:	
   764                           ; 1 bytes @ 0xD
   765                           
   766                           
   767                           ; 1 bytes @ 0xD
   768  007D                     	ds	1
   769                           
   770                           	psect	cstackBANK0
   771  0049                     __pcstackBANK0:	
   772  0049                     ??_get_temp:	
   773  0049                     ?_calculate_temp:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0049                     calculate_temp@TZ:	
   777                           ; 1 bytes @ 0x0
   778                           
   779                           
   780                           ; 2 bytes @ 0x0
   781  0049                     	ds	2
   782  004B                     ??_calculate_temp:	
   783                           
   784                           ; 1 bytes @ 0x2
   785  004B                     	ds	2
   786  004D                     calculate_temp@TX:	
   787                           
   788                           ; 1 bytes @ 0x4
   789  004D                     	ds	1
   790  004E                     calculate_temp@wd:	
   791                           
   792                           ; 2 bytes @ 0x5
   793  004E                     	ds	2
   794  0050                     ??_main:	
   795                           
   796                           ; 1 bytes @ 0x7
   797  0050                     	ds	1
   798  0051                     main@temp:	
   799                           
   800                           ; 2 bytes @ 0x8
   801  0051                     	ds	2
   802  0053                     main@tempa:	
   803                           
   804                           ; 1 bytes @ 0xA
   805  0053                     	ds	1
   806                           
   807                           	psect	maintext
   808  059F                     __pmaintext:	
   809 ;;
   810 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   811 ;;
   812 ;; *************** function _main *****************
   813 ;; Defined at:
   814 ;;		line 30 in file "main.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  temp            2    8[BANK0 ] int 
   819 ;;  tempa           1   10[BANK0 ] PTR unsigned char 
   820 ;;		 -> temperature(8), 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : B00/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         0       0       0       0       0
   831 ;;      Locals:         0       3       0       0       0
   832 ;;      Temps:          0       1       0       0       0
   833 ;;      Totals:         0       4       0       0       0
   834 ;;Total ram usage:        4 bytes
   835 ;; Hardware stack levels required when called:    4
   836 ;; This function calls:
   837 ;;		_calculate_temp
   838 ;;		_delay
   839 ;;		_get_temp
   840 ;;		_init
   841 ;;		_lcd_init
   842 ;;		_writeIntArray
   843 ;;		_writechar
   844 ;; This function is called by:
   845 ;;		Startup code after reset
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           
   850                           ;psect for function _main
   851  059F                     _main:	
   852                           
   853                           ;main.c: 32:  init();
   854                           
   855                           ;incstack = 0
   856                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   857  059F  120A  118A  23E8  120A  118A  	fcall	_init
   858                           
   859                           ;main.c: 34:  lcd_init();
   860  05A4  120A  118A  2403  120A  118A  	fcall	_lcd_init
   861  05A9                     L1:	
   862                           
   863                           ;main.c: 36:  delay(10000);
   864  05A9  3010               	movlw	16
   865  05AA  00F0               	movwf	delay@t
   866  05AB  3027               	movlw	39
   867  05AC  00F1               	movwf	delay@t+1
   868  05AD  120A  118A  244B  120A  118A  	fcall	_delay
   869                           
   870                           ;main.c: 38:   int temp = get_temp();
   871  05B2  120A  118A  26B8  120A  118A  	fcall	_get_temp
   872  05B7  087B               	movf	?_get_temp+1,w
   873  05B8  1283               	bcf	3,5	;RP0=0, select bank0
   874  05B9  1303               	bcf	3,6	;RP1=0, select bank0
   875  05BA  00D2               	movwf	main@temp+1
   876  05BB  087A               	movf	?_get_temp,w
   877  05BC  00D1               	movwf	main@temp
   878                           
   879                           ;main.c: 39:   char* tempa = calculate_temp(temp);
   880  05BD  0852               	movf	main@temp+1,w
   881  05BE  00CA               	movwf	calculate_temp@TZ+1
   882  05BF  0851               	movf	main@temp,w
   883  05C0  00C9               	movwf	calculate_temp@TZ
   884  05C1  120A  118A  271B  120A  118A  	fcall	_calculate_temp
   885  05C6  1283               	bcf	3,5	;RP0=0, select bank0
   886  05C7  1303               	bcf	3,6	;RP1=0, select bank0
   887  05C8  00D0               	movwf	??_main
   888  05C9  0850               	movf	??_main,w
   889  05CA  00D3               	movwf	main@tempa
   890                           
   891                           ;main.c: 40:   writeIntArray(tempa);
   892  05CB  0853               	movf	main@tempa,w
   893  05CC  120A  118A  24DB  120A  118A  	fcall	_writeIntArray
   894                           
   895                           ;main.c: 41:   writechar(' ');
   896  05D1  3020               	movlw	32
   897  05D2  120A  118A  2438  120A  118A  	fcall	_writechar
   898  05D7  2DA9               	goto	L1
   899  05D8                     __end_of_main:	
   900                           ;main.c: 42:   delay(10000);
   901                           
   902                           
   903                           	psect	text1
   904  04DB                     __ptext1:	
   905 ;; *************** function _writeIntArray *****************
   906 ;; Defined at:
   907 ;;		line 37 in file "lcd_driver.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  ints            1    wreg     PTR unsigned char 
   910 ;;		 -> temperature(8), 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  ints            1   13[COMMON] PTR unsigned char 
   913 ;;		 -> temperature(8), 
   914 ;;  i               2   11[COMMON] int 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   924 ;;      Params:         0       0       0       0       0
   925 ;;      Locals:         3       0       0       0       0
   926 ;;      Temps:          3       0       0       0       0
   927 ;;      Totals:         6       0       0       0       0
   928 ;;Total ram usage:        6 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; Hardware stack levels required when called:    3
   931 ;; This function calls:
   932 ;;		_strlen
   933 ;;		_writeInt
   934 ;; This function is called by:
   935 ;;		_main
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           
   940                           ;psect for function _writeIntArray
   941  04DB                     _writeIntArray:	
   942                           
   943                           ;incstack = 0
   944                           ; Regs used in _writeIntArray: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   945                           ;writeIntArray@ints stored from wreg
   946  04DB  00FD               	movwf	writeIntArray@ints
   947                           
   948                           ;lcd_driver.c: 38:  for (int i = 0; i < strlen(ints); i++) {
   949  04DC  01FB               	clrf	writeIntArray@i
   950  04DD  01FC               	clrf	writeIntArray@i+1
   951  04DE                     l1536:	
   952  04DE  087D               	movf	writeIntArray@ints,w
   953  04DF  120A  118A  2460  120A  118A  	fcall	_strlen
   954  04E4  087C               	movf	writeIntArray@i+1,w
   955  04E5  3A80               	xorlw	128
   956  04E6  00F8               	movwf	??_writeIntArray
   957  04E7  0871               	movf	?_strlen+1,w
   958  04E8  3A80               	xorlw	128
   959  04E9  0278               	subwf	??_writeIntArray,w
   960  04EA  1D03               	skipz
   961  04EB  2CEE               	goto	u1075
   962  04EC  0870               	movf	?_strlen,w
   963  04ED  027B               	subwf	writeIntArray@i,w
   964  04EE                     u1075:	
   965  04EE  1803               	btfsc	3,0
   966  04EF  0008               	return
   967                           
   968                           ;lcd_driver.c: 39:   writeInt(ints[i]);
   969  04F0  087B               	movf	writeIntArray@i,w
   970  04F1  077D               	addwf	writeIntArray@ints,w
   971  04F2  00F8               	movwf	??_writeIntArray
   972  04F3  0878               	movf	??_writeIntArray,w
   973  04F4  0084               	movwf	4
   974  04F5  1383               	bcf	3,7	;select IRP bank0
   975  04F6  0800               	movf	0,w
   976  04F7  00F9               	movwf	??_writeIntArray+1
   977  04F8  01FA               	clrf	??_writeIntArray+2
   978  04F9  0879               	movf	??_writeIntArray+1,w
   979  04FA  00F6               	movwf	writeInt@i
   980  04FB  087A               	movf	??_writeIntArray+2,w
   981  04FC  00F7               	movwf	writeInt@i+1
   982  04FD  120A  118A  23F3  120A  118A  	fcall	_writeInt
   983                           
   984                           ;lcd_driver.c: 40:  }
   985  0502  3001               	movlw	1
   986  0503  07FB               	addwf	writeIntArray@i,f
   987  0504  1803               	skipnc
   988  0505  0AFC               	incf	writeIntArray@i+1,f
   989  0506  3000               	movlw	0
   990  0507  07FC               	addwf	writeIntArray@i+1,f
   991  0508  2CDE               	goto	l1536
   992  0509                     __end_of_writeIntArray:	
   993                           
   994                           	psect	text2
   995  03F3                     __ptext2:	
   996 ;; *************** function _writeInt *****************
   997 ;; Defined at:
   998 ;;		line 24 in file "lcd_driver.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;  i               2    6[COMMON] int 
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0, pclath, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1012 ;;      Params:         2       0       0       0       0
  1013 ;;      Locals:         0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0
  1015 ;;      Totals:         2       0       0       0       0
  1016 ;;Total ram usage:        2 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; Hardware stack levels required when called:    2
  1019 ;; This function calls:
  1020 ;;		_writechar
  1021 ;; This function is called by:
  1022 ;;		_writeIntArray
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           
  1027                           ;psect for function _writeInt
  1028  03F3                     _writeInt:	
  1029                           
  1030                           ;lcd_driver.c: 25:  if (i == 46)
  1031                           
  1032                           ;incstack = 0
  1033                           ; Regs used in _writeInt: [wreg+status,2+status,0+pclath+cstack]
  1034  03F3  302E               	movlw	46
  1035  03F4  0676               	xorwf	writeInt@i,w
  1036  03F5  0477               	iorwf	writeInt@i+1,w
  1037  03F6  1D03               	btfss	3,2
  1038  03F7  2BFD               	goto	l1204
  1039                           
  1040                           ;lcd_driver.c: 26:   writechar(i);
  1041  03F8  0876               	movf	writeInt@i,w
  1042  03F9  120A  118A  2438   	fcall	_writechar
  1043  03FC  0008               	return
  1044  03FD                     l1204:	
  1045                           
  1046                           ;lcd_driver.c: 28:   writechar(i + 48);
  1047  03FD  0876               	movf	writeInt@i,w
  1048  03FE  3E30               	addlw	48
  1049  03FF  120A  118A  2438   	fcall	_writechar
  1050  0402  0008               	return
  1051  0403                     __end_of_writeInt:	
  1052                           
  1053                           	psect	text3
  1054  0438                     __ptext3:	
  1055 ;; *************** function _writechar *****************
  1056 ;; Defined at:
  1057 ;;		line 15 in file "lcd_driver.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  character       1    wreg     unsigned char 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  character       1    5[COMMON] unsigned char 
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, status,2, status,0, pclath, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1071 ;;      Params:         0       0       0       0       0
  1072 ;;      Locals:         1       0       0       0       0
  1073 ;;      Temps:          0       0       0       0       0
  1074 ;;      Totals:         1       0       0       0       0
  1075 ;;Total ram usage:        1 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; Hardware stack levels required when called:    1
  1078 ;; This function calls:
  1079 ;;		_delay
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;;		_writeInt
  1083 ;;		_writeString
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           
  1088                           ;psect for function _writechar
  1089  0438                     _writechar:	
  1090                           
  1091                           ;incstack = 0
  1092                           ; Regs used in _writechar: [wreg+status,2+status,0+pclath+cstack]
  1093                           ;writechar@character stored from wreg
  1094  0438  00F5               	movwf	writechar@character
  1095                           
  1096                           ;lcd_driver.c: 16:  RA5 = 1;
  1097  0439  1283               	bcf	3,5	;RP0=0, select bank0
  1098  043A  1303               	bcf	3,6	;RP1=0, select bank0
  1099  043B  1685               	bsf	5,5	;volatile
  1100                           
  1101                           ;lcd_driver.c: 17:  RA4 = 0;
  1102  043C  1205               	bcf	5,4	;volatile
  1103                           
  1104                           ;lcd_driver.c: 18:  PORTD = character;
  1105  043D  0875               	movf	writechar@character,w
  1106  043E  0088               	movwf	8	;volatile
  1107                           
  1108                           ;lcd_driver.c: 19:  RA3 = 0;
  1109  043F  1185               	bcf	5,3	;volatile
  1110                           
  1111                           ;lcd_driver.c: 20:  delay(60);
  1112  0440  303C               	movlw	60
  1113  0441  00F0               	movwf	delay@t
  1114  0442  3000               	movlw	0
  1115  0443  00F1               	movwf	delay@t+1
  1116  0444  120A  118A  244B   	fcall	_delay
  1117                           
  1118                           ;lcd_driver.c: 21:  RA3 = 1;
  1119  0447  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0448  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0449  1585               	bsf	5,3	;volatile
  1122  044A  0008               	return
  1123  044B                     __end_of_writechar:	
  1124                           
  1125                           	psect	text4
  1126  0460                     __ptext4:	
  1127 ;; *************** function _strlen *****************
  1128 ;; Defined at:
  1129 ;;		line 25 in file "Utils.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  a               1    wreg     PTR unsigned char 
  1132 ;;		 -> temperature(8), 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  a               1    3[COMMON] PTR unsigned char 
  1135 ;;		 -> temperature(8), 
  1136 ;;  len             2    4[COMMON] int 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  2    0[COMMON] int 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         2       0       0       0       0
  1147 ;;      Locals:         3       0       0       0       0
  1148 ;;      Temps:          1       0       0       0       0
  1149 ;;      Totals:         6       0       0       0       0
  1150 ;;Total ram usage:        6 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_writeIntArray
  1156 ;;		_writeString
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           
  1161                           ;psect for function _strlen
  1162  0460                     _strlen:	
  1163                           
  1164                           ;incstack = 0
  1165                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1166                           ;strlen@a stored from wreg
  1167  0460  00F3               	movwf	strlen@a
  1168                           
  1169                           ;Utils.c: 26:  int len = 0;
  1170  0461  01F4               	clrf	strlen@len
  1171  0462  01F5               	clrf	strlen@len+1
  1172  0463                     l1210:	
  1173                           ;Utils.c: 27:  while (a[len])
  1174                           
  1175                           
  1176                           ;Utils.c: 27:  while (a[len])
  1177  0463  0874               	movf	strlen@len,w
  1178  0464  0773               	addwf	strlen@a,w
  1179  0465  00F2               	movwf	??_strlen
  1180  0466  0872               	movf	??_strlen,w
  1181  0467  0084               	movwf	4
  1182  0468  1383               	bcf	3,7	;select IRP bank0
  1183  0469  0800               	movf	0,w
  1184  046A  1903               	btfsc	3,2
  1185  046B  2C73               	goto	l1212
  1186                           
  1187                           ;Utils.c: 28:   len++;
  1188  046C  3001               	movlw	1
  1189  046D  07F4               	addwf	strlen@len,f
  1190  046E  1803               	skipnc
  1191  046F  0AF5               	incf	strlen@len+1,f
  1192  0470  3000               	movlw	0
  1193  0471  07F5               	addwf	strlen@len+1,f
  1194  0472  2C63               	goto	l1210
  1195  0473                     l1212:	
  1196                           
  1197                           ;Utils.c: 29:  return len;
  1198  0473  0875               	movf	strlen@len+1,w
  1199  0474  00F1               	movwf	?_strlen+1
  1200  0475  0874               	movf	strlen@len,w
  1201  0476  00F0               	movwf	?_strlen
  1202  0477  0008               	return
  1203  0478                     __end_of_strlen:	
  1204                           
  1205                           	psect	text5
  1206  0403                     __ptext5:	
  1207 ;; *************** function _lcd_init *****************
  1208 ;; Defined at:
  1209 ;;		line 72 in file "lcd_driver.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0, pclath, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0
  1226 ;;      Totals:         0       0       0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    2
  1230 ;; This function calls:
  1231 ;;		_writecmd
  1232 ;; This function is called by:
  1233 ;;		_main
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           
  1238                           ;psect for function _lcd_init
  1239  0403                     _lcd_init:	
  1240                           
  1241                           ;lcd_driver.c: 73:  writecmd(0x0F);
  1242                           
  1243                           ;incstack = 0
  1244                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1245  0403  300F               	movlw	15
  1246  0404  120A  118A  2425  120A  118A  	fcall	_writecmd
  1247                           
  1248                           ;lcd_driver.c: 74:  writecmd(0x38);
  1249  0409  3038               	movlw	56
  1250  040A  120A  118A  2425  120A  118A  	fcall	_writecmd
  1251                           
  1252                           ;lcd_driver.c: 75:  writecmd(0x01);
  1253  040F  3001               	movlw	1
  1254  0410  120A  118A  2425   	fcall	_writecmd
  1255  0413  0008               	return
  1256  0414                     __end_of_lcd_init:	
  1257                           
  1258                           	psect	text6
  1259  0425                     __ptext6:	
  1260 ;; *************** function _writecmd *****************
  1261 ;; Defined at:
  1262 ;;		line 6 in file "lcd_driver.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  command         1    wreg     unsigned char 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  command         1    5[COMMON] unsigned char 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0, pclath, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1276 ;;      Params:         0       0       0       0       0
  1277 ;;      Locals:         1       0       0       0       0
  1278 ;;      Temps:          0       0       0       0       0
  1279 ;;      Totals:         1       0       0       0       0
  1280 ;;Total ram usage:        1 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    1
  1283 ;; This function calls:
  1284 ;;		_delay
  1285 ;; This function is called by:
  1286 ;;		_lcd_init
  1287 ;;		_setCursorPos
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           
  1292                           ;psect for function _writecmd
  1293  0425                     _writecmd:	
  1294                           
  1295                           ;incstack = 0
  1296                           ; Regs used in _writecmd: [wreg+status,2+status,0+pclath+cstack]
  1297                           ;writecmd@command stored from wreg
  1298  0425  00F5               	movwf	writecmd@command
  1299                           
  1300                           ;lcd_driver.c: 7:  RA5 = 0;
  1301  0426  1283               	bcf	3,5	;RP0=0, select bank0
  1302  0427  1303               	bcf	3,6	;RP1=0, select bank0
  1303  0428  1285               	bcf	5,5	;volatile
  1304                           
  1305                           ;lcd_driver.c: 8:  RA4 = 0;
  1306  0429  1205               	bcf	5,4	;volatile
  1307                           
  1308                           ;lcd_driver.c: 9:  PORTD = command;
  1309  042A  0875               	movf	writecmd@command,w
  1310  042B  0088               	movwf	8	;volatile
  1311                           
  1312                           ;lcd_driver.c: 10:  RA3 = 0;
  1313  042C  1185               	bcf	5,3	;volatile
  1314                           
  1315                           ;lcd_driver.c: 11:  delay(60);
  1316  042D  303C               	movlw	60
  1317  042E  00F0               	movwf	delay@t
  1318  042F  3000               	movlw	0
  1319  0430  00F1               	movwf	delay@t+1
  1320  0431  120A  118A  244B   	fcall	_delay
  1321                           
  1322                           ;lcd_driver.c: 12:  RA3 = 1;
  1323  0434  1283               	bcf	3,5	;RP0=0, select bank0
  1324  0435  1303               	bcf	3,6	;RP1=0, select bank0
  1325  0436  1585               	bsf	5,3	;volatile
  1326  0437  0008               	return
  1327  0438                     __end_of_writecmd:	
  1328                           
  1329                           	psect	text7
  1330  03E8                     __ptext7:	
  1331 ;; *************** function _init *****************
  1332 ;; Defined at:
  1333 ;;		line 22 in file "main.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;		None
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;		None
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		wreg, status,2
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1347 ;;      Params:         0       0       0       0       0
  1348 ;;      Locals:         0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0
  1350 ;;      Totals:         0       0       0       0       0
  1351 ;;Total ram usage:        0 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           
  1361                           ;psect for function _init
  1362  03E8                     _init:	
  1363                           
  1364                           ;main.c: 23:  ADCON1 = 0X07;
  1365                           
  1366                           ;incstack = 0
  1367                           ; Regs used in _init: [wreg+status,2]
  1368  03E8  3007               	movlw	7
  1369  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  1370  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  1371  03EB  009F               	movwf	31	;volatile
  1372                           
  1373                           ;main.c: 24:  TRISA = 0X00;
  1374  03EC  0185               	clrf	5	;volatile
  1375                           
  1376                           ;main.c: 25:  TRISD = 0X00;
  1377  03ED  0188               	clrf	8	;volatile
  1378                           
  1379                           ;main.c: 26:  TRISC = 0x00;
  1380  03EE  0187               	clrf	7	;volatile
  1381                           
  1382                           ;main.c: 27:  RA2 = 1;
  1383  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1384  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  1385  03F1  1505               	bsf	5,2	;volatile
  1386  03F2  0008               	return
  1387  03F3                     __end_of_init:	
  1388                           
  1389                           	psect	text8
  1390  06B8                     __ptext8:	
  1391 ;; *************** function _get_temp *****************
  1392 ;; Defined at:
  1393 ;;		line 71 in file "thermometer_driver.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  2   10[COMMON] int 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1407 ;;      Params:         2       0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0
  1409 ;;      Temps:          0       5       0       0       0
  1410 ;;      Totals:         2       5       0       0       0
  1411 ;;Total ram usage:        7 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    2
  1414 ;; This function calls:
  1415 ;;		_delay
  1416 ;;		_read_byte
  1417 ;;		_resetThermometer
  1418 ;;		_write_byte
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           
  1425                           ;psect for function _get_temp
  1426  06B8                     _get_temp:	
  1427                           
  1428                           ;thermometer_driver.c: 76:  TRISE0 = 1;
  1429                           
  1430                           ;incstack = 0
  1431                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1432  06B8  1683               	bsf	3,5	;RP0=1, select bank1
  1433  06B9  1303               	bcf	3,6	;RP1=0, select bank1
  1434  06BA  1409               	bsf	9,0	;volatile
  1435                           
  1436                           ;thermometer_driver.c: 77:  resetThermometer();
  1437  06BB  120A  118A  24B2  120A  118A  	fcall	_resetThermometer
  1438                           
  1439                           ;thermometer_driver.c: 78:  write_byte(0XCC);
  1440  06C0  30CC               	movlw	204
  1441  06C1  120A  118A  256C  120A  118A  	fcall	_write_byte
  1442                           
  1443                           ;thermometer_driver.c: 79:  write_byte(0X44);
  1444  06C6  3044               	movlw	68
  1445  06C7  120A  118A  256C  120A  118A  	fcall	_write_byte
  1446                           
  1447                           ;thermometer_driver.c: 84:  delay(20000);
  1448  06CC  3020               	movlw	32
  1449  06CD  00F0               	movwf	delay@t
  1450  06CE  304E               	movlw	78
  1451  06CF  00F1               	movwf	delay@t+1
  1452  06D0  120A  118A  244B  120A  118A  	fcall	_delay
  1453                           
  1454                           ;thermometer_driver.c: 86:  resetThermometer();
  1455  06D5  120A  118A  24B2  120A  118A  	fcall	_resetThermometer
  1456                           
  1457                           ;thermometer_driver.c: 87:  write_byte(0XCC);
  1458  06DA  30CC               	movlw	204
  1459  06DB  120A  118A  256C  120A  118A  	fcall	_write_byte
  1460                           
  1461                           ;thermometer_driver.c: 88:  write_byte(0XBE);
  1462  06E0  30BE               	movlw	190
  1463  06E1  120A  118A  256C  120A  118A  	fcall	_write_byte
  1464                           
  1465                           ;thermometer_driver.c: 89:  TLV = read_byte();
  1466  06E6  120A  118A  2509  120A  118A  	fcall	_read_byte
  1467  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1468  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1469  06ED  00C9               	movwf	??_get_temp
  1470  06EE  0849               	movf	??_get_temp,w
  1471  06EF  00C0               	movwf	_TLV
  1472                           
  1473                           ;thermometer_driver.c: 90:  THV = read_byte();
  1474  06F0  120A  118A  2509  120A  118A  	fcall	_read_byte
  1475  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1476  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1477  06F7  00C9               	movwf	??_get_temp
  1478  06F8  0849               	movf	??_get_temp,w
  1479  06F9  00BF               	movwf	_THV
  1480                           
  1481                           ;thermometer_driver.c: 91:  TRISE0 = 1;
  1482  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  1483  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  1484  06FC  1409               	bsf	9,0	;volatile
  1485                           
  1486                           ;thermometer_driver.c: 92:  return (TLV >> 4) | ((THV << 4) & 0X3f);
  1487  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1488  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1489  06FF  083F               	movf	_THV,w
  1490  0700  00C9               	movwf	??_get_temp
  1491  0701  3004               	movlw	4
  1492  0702                     u1005:	
  1493  0702  1003               	clrc
  1494  0703  0DC9               	rlf	??_get_temp,f
  1495  0704  3EFF               	addlw	-1
  1496  0705  1D03               	skipz
  1497  0706  2F02               	goto	u1005
  1498  0707  303F               	movlw	63
  1499  0708  0549               	andwf	??_get_temp,w
  1500  0709  00CA               	movwf	??_get_temp+1
  1501  070A  0840               	movf	_TLV,w
  1502  070B  00CB               	movwf	??_get_temp+2
  1503  070C  3004               	movlw	4
  1504  070D                     u1015:	
  1505  070D  1003               	clrc
  1506  070E  0CCB               	rrf	??_get_temp+2,f
  1507  070F  3EFF               	addlw	-1
  1508  0710  1D03               	skipz
  1509  0711  2F0D               	goto	u1015
  1510  0712  084B               	movf	??_get_temp+2,w
  1511  0713  044A               	iorwf	??_get_temp+1,w
  1512  0714  00CC               	movwf	??_get_temp+3
  1513  0715  01CD               	clrf	??_get_temp+4
  1514  0716  084C               	movf	??_get_temp+3,w
  1515  0717  00FA               	movwf	?_get_temp
  1516  0718  084D               	movf	??_get_temp+4,w
  1517  0719  00FB               	movwf	?_get_temp+1
  1518  071A  0008               	return
  1519  071B                     __end_of_get_temp:	
  1520                           
  1521                           	psect	text9
  1522  056C                     __ptext9:	
  1523 ;; *************** function _write_byte *****************
  1524 ;; Defined at:
  1525 ;;		line 19 in file "thermometer_driver.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  val             1    wreg     unsigned char 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  val             1    8[COMMON] unsigned char 
  1530 ;;  i               1    9[COMMON] unsigned char 
  1531 ;;  temp            1    7[COMMON] unsigned char 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      void 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1541 ;;      Params:         0       0       0       0       0
  1542 ;;      Locals:         3       0       0       0       0
  1543 ;;      Temps:          2       0       0       0       0
  1544 ;;      Totals:         5       0       0       0       0
  1545 ;;Total ram usage:        5 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; Hardware stack levels required when called:    1
  1548 ;; This function calls:
  1549 ;;		_delay2
  1550 ;; This function is called by:
  1551 ;;		_get_temp
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           
  1556                           ;psect for function _write_byte
  1557  056C                     _write_byte:	
  1558                           
  1559                           ;incstack = 0
  1560                           ; Regs used in _write_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1561                           ;write_byte@val stored from wreg
  1562  056C  00F8               	movwf	write_byte@val
  1563                           
  1564                           ;thermometer_driver.c: 20:  unsigned char i;;thermometer_driver.c: 21:  unsigned char te
      +                          mp;;thermometer_driver.c: 24:  for (i = 8; i > 0; i--) {
  1565  056D  3008               	movlw	8
  1566  056E  00F5               	movwf	??_write_byte
  1567  056F  0875               	movf	??_write_byte,w
  1568  0570  00F9               	movwf	write_byte@i
  1569  0571                     l1222:	
  1570                           
  1571                           ;thermometer_driver.c: 25:   temp = val & 0x01;
  1572  0571  0878               	movf	write_byte@val,w
  1573  0572  3901               	andlw	1
  1574  0573  00F5               	movwf	??_write_byte
  1575  0574  0875               	movf	??_write_byte,w
  1576  0575  00F7               	movwf	write_byte@temp
  1577                           
  1578                           ;thermometer_driver.c: 26:   RE0 = 0; TRISE0 = 0;
  1579  0576  1283               	bcf	3,5	;RP0=0, select bank0
  1580  0577  1303               	bcf	3,6	;RP1=0, select bank0
  1581  0578  1009               	bcf	9,0	;volatile
  1582  0579  1683               	bsf	3,5	;RP0=1, select bank1
  1583  057A  1303               	bcf	3,6	;RP1=0, select bank1
  1584  057B  1009               	bcf	9,0	;volatile
  1585                           
  1586                           ;thermometer_driver.c: 27:   __nop();
  1587  057C  0000               	nop
  1588                           
  1589                           ;thermometer_driver.c: 28:   __nop();
  1590  057D  0000               	nop
  1591                           
  1592                           ;thermometer_driver.c: 29:   __nop();
  1593  057E  0000               	nop
  1594                           
  1595                           ;thermometer_driver.c: 30:   __nop();
  1596  057F  0000               	nop
  1597                           
  1598                           ;thermometer_driver.c: 31:   __nop();
  1599  0580  0000               	nop
  1600                           
  1601                           ;thermometer_driver.c: 33:   if (temp == 1) {
  1602  0581  0377               	decf	write_byte@temp,w
  1603  0582  1D03               	btfss	3,2
  1604  0583  2D87               	goto	l1242
  1605                           
  1606                           ;thermometer_driver.c: 34:    TRISE0 = 1;
  1607  0584  1683               	bsf	3,5	;RP0=1, select bank1
  1608  0585  1303               	bcf	3,6	;RP1=0, select bank1
  1609  0586  1409               	bsf	9,0	;volatile
  1610  0587                     l1242:	
  1611                           
  1612                           ;thermometer_driver.c: 36:   delay2(t63us);
  1613  0587  302E               	movlw	(low (_t63us| 0))& (0+255)
  1614  0588  120A  118A  2478  120A  118A  	fcall	_delay2
  1615                           
  1616                           ;thermometer_driver.c: 37:   TRISE0 = 1;
  1617  058D  1683               	bsf	3,5	;RP0=1, select bank1
  1618  058E  1303               	bcf	3,6	;RP1=0, select bank1
  1619  058F  1409               	bsf	9,0	;volatile
  1620                           
  1621                           ;thermometer_driver.c: 38:   __nop();
  1622  0590  0000               	nop
  1623                           
  1624                           ;thermometer_driver.c: 39:   __nop();
  1625  0591  0000               	nop
  1626                           
  1627                           ;thermometer_driver.c: 40:   val = val >> 1;
  1628  0592  0878               	movf	write_byte@val,w
  1629  0593  00F5               	movwf	??_write_byte
  1630  0594  1003               	clrc
  1631  0595  0C75               	rrf	??_write_byte,w
  1632  0596  00F6               	movwf	??_write_byte+1
  1633  0597  0876               	movf	??_write_byte+1,w
  1634  0598  00F8               	movwf	write_byte@val
  1635                           
  1636                           ;thermometer_driver.c: 41:  }
  1637  0599  3001               	movlw	1
  1638  059A  02F9               	subwf	write_byte@i,f
  1639  059B  0879               	movf	write_byte@i,w
  1640  059C  1903               	btfsc	3,2
  1641  059D  0008               	return
  1642  059E  2D71               	goto	l1222
  1643  059F                     __end_of_write_byte:	
  1644                           
  1645                           	psect	text10
  1646  04B2                     __ptext10:	
  1647 ;; *************** function _resetThermometer *****************
  1648 ;; Defined at:
  1649 ;;		line 95 in file "thermometer_driver.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  presence        1    5[COMMON] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1663 ;;      Params:         0       0       0       0       0
  1664 ;;      Locals:         1       0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0
  1666 ;;      Totals:         1       0       0       0       0
  1667 ;;Total ram usage:        1 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    1
  1670 ;; This function calls:
  1671 ;;		_delay2
  1672 ;; This function is called by:
  1673 ;;		_get_temp
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           
  1678                           ;psect for function _resetThermometer
  1679  04B2                     _resetThermometer:	
  1680                           
  1681                           ;thermometer_driver.c: 96:  char presence = 1;
  1682                           
  1683                           ;incstack = 0
  1684                           ; Regs used in _resetThermometer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1685  04B2  01F5               	clrf	resetThermometer@presence
  1686  04B3  0AF5               	incf	resetThermometer@presence,f
  1687  04B4                     l1324:	
  1688                           ;thermometer_driver.c: 97:  while (presence) {
  1689                           
  1690                           
  1691                           ;thermometer_driver.c: 97:  while (presence) {
  1692  04B4  0875               	movf	resetThermometer@presence,w
  1693  04B5  1903               	btfsc	3,2
  1694  04B6  0008               	return
  1695                           
  1696                           ;thermometer_driver.c: 98:   RE0 = 0; TRISE0 = 0;
  1697  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1698  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1699  04B9  1009               	bcf	9,0	;volatile
  1700  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  1701  04BB  1303               	bcf	3,6	;RP1=0, select bank1
  1702  04BC  1009               	bcf	9,0	;volatile
  1703                           
  1704                           ;thermometer_driver.c: 99:   delay2(t503us);
  1705  04BD  303A               	movlw	(low (_t503us| 0))& (0+255)
  1706  04BE  120A  118A  2478  120A  118A  	fcall	_delay2
  1707                           
  1708                           ;thermometer_driver.c: 100:   TRISE0 = 1;
  1709  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  1710  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  1711  04C5  1409               	bsf	9,0	;volatile
  1712                           
  1713                           ;thermometer_driver.c: 101:   delay2(t70us);
  1714  04C6  3032               	movlw	(low (_t70us| 0))& (0+255)
  1715  04C7  120A  118A  2478  120A  118A  	fcall	_delay2
  1716                           
  1717                           ;thermometer_driver.c: 102:   if (RE0 == 1)
  1718  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1719  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1720  04CE  1C09               	btfss	9,0	;volatile
  1721  04CF  2CD3               	goto	l1320
  1722                           
  1723                           ;thermometer_driver.c: 103:    presence = 1;
  1724  04D0  01F5               	clrf	resetThermometer@presence
  1725  04D1  0AF5               	incf	resetThermometer@presence,f
  1726  04D2  2CD4               	goto	l1322
  1727  04D3                     l1320:	
  1728                           
  1729                           ;thermometer_driver.c: 105:    presence = 0;
  1730  04D3  01F5               	clrf	resetThermometer@presence
  1731  04D4                     l1322:	
  1732                           
  1733                           ;thermometer_driver.c: 107:   delay2(t430us);
  1734  04D4  3036               	movlw	(low (_t430us| 0))& (0+255)
  1735  04D5  120A  118A  2478  120A  118A  	fcall	_delay2
  1736  04DA  2CB4               	goto	l1324
  1737  04DB                     __end_of_resetThermometer:	
  1738                           
  1739                           	psect	text11
  1740  0509                     __ptext11:	
  1741 ;; *************** function _read_byte *****************
  1742 ;; Defined at:
  1743 ;;		line 44 in file "thermometer_driver.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  i               1    7[COMMON] unsigned char 
  1748 ;;  value           1    6[COMMON] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      unsigned char 
  1751 ;; Registers used:
  1752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1758 ;;      Params:         0       0       0       0       0
  1759 ;;      Locals:         2       0       0       0       0
  1760 ;;      Temps:          1       0       0       0       0
  1761 ;;      Totals:         3       0       0       0       0
  1762 ;;Total ram usage:        3 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    1
  1765 ;; This function calls:
  1766 ;;		_delay2
  1767 ;; This function is called by:
  1768 ;;		_get_temp
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function _read_byte
  1774  0509                     _read_byte:	
  1775                           
  1776                           ;thermometer_driver.c: 45:  unsigned char i;;thermometer_driver.c: 46:  unsigned char va
      +                          lue = 0;
  1777                           
  1778                           ;incstack = 0
  1779                           ; Regs used in _read_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1780  0509  01F6               	clrf	read_byte@value
  1781                           
  1782                           ;thermometer_driver.c: 47:  static char j;;thermometer_driver.c: 49:  for (i = 8; i > 0;
      +                           i--) {
  1783  050A  3008               	movlw	8
  1784  050B  00F5               	movwf	??_read_byte
  1785  050C  0875               	movf	??_read_byte,w
  1786  050D  00F7               	movwf	read_byte@i
  1787  050E                     l1264:	
  1788                           
  1789                           ;thermometer_driver.c: 50:   value >>= 1;
  1790  050E  1003               	clrc
  1791  050F  0CF6               	rrf	read_byte@value,f
  1792                           
  1793                           ;thermometer_driver.c: 51:   RE0 = 0; TRISE0 = 0;
  1794  0510  1283               	bcf	3,5	;RP0=0, select bank0
  1795  0511  1303               	bcf	3,6	;RP1=0, select bank0
  1796  0512  1009               	bcf	9,0	;volatile
  1797  0513  1683               	bsf	3,5	;RP0=1, select bank1
  1798  0514  1303               	bcf	3,6	;RP1=0, select bank1
  1799  0515  1009               	bcf	9,0	;volatile
  1800                           
  1801                           ;thermometer_driver.c: 52:   __nop();
  1802  0516  0000               	nop
  1803                           
  1804                           ;thermometer_driver.c: 53:   __nop();
  1805  0517  0000               	nop
  1806                           
  1807                           ;thermometer_driver.c: 54:   __nop();
  1808  0518  0000               	nop
  1809                           
  1810                           ;thermometer_driver.c: 55:   __nop();
  1811  0519  0000               	nop
  1812                           
  1813                           ;thermometer_driver.c: 56:   __nop();
  1814  051A  0000               	nop
  1815                           
  1816                           ;thermometer_driver.c: 57:   __nop();
  1817  051B  0000               	nop
  1818                           
  1819                           ;thermometer_driver.c: 58:   TRISE0 = 1;
  1820  051C  1683               	bsf	3,5	;RP0=1, select bank1
  1821  051D  1303               	bcf	3,6	;RP1=0, select bank1
  1822  051E  1409               	bsf	9,0	;volatile
  1823                           
  1824                           ;thermometer_driver.c: 59:   __nop();
  1825  051F  0000               	nop
  1826                           
  1827                           ;thermometer_driver.c: 60:   __nop();
  1828  0520  0000               	nop
  1829                           
  1830                           ;thermometer_driver.c: 61:   __nop();
  1831  0521  0000               	nop
  1832                           
  1833                           ;thermometer_driver.c: 62:   __nop();
  1834  0522  0000               	nop
  1835                           
  1836                           ;thermometer_driver.c: 63:   __nop();
  1837  0523  0000               	nop
  1838                           
  1839                           ;thermometer_driver.c: 64:   j = RE0;
  1840  0524  3000               	movlw	0
  1841  0525  1283               	bcf	3,5	;RP0=0, select bank0
  1842  0526  1303               	bcf	3,6	;RP1=0, select bank0
  1843  0527  1809               	btfsc	9,0	;volatile
  1844  0528  3001               	movlw	1
  1845  0529  00BE               	movwf	read_byte@j
  1846                           
  1847                           ;thermometer_driver.c: 65:   if (j) value |= 0x80;
  1848  052A  083E               	movf	read_byte@j,w
  1849  052B  1D03               	btfss	3,2
  1850  052C  17F6               	bsf	read_byte@value,7
  1851                           
  1852                           ;thermometer_driver.c: 66:   delay2(t63us);
  1853  052D  302E               	movlw	(low (_t63us| 0))& (0+255)
  1854  052E  120A  118A  2478  120A  118A  	fcall	_delay2
  1855                           
  1856                           ;thermometer_driver.c: 67:  }
  1857  0533  3001               	movlw	1
  1858  0534  02F7               	subwf	read_byte@i,f
  1859  0535  0877               	movf	read_byte@i,w
  1860  0536  1D03               	btfss	3,2
  1861  0537  2D0E               	goto	l1264
  1862                           
  1863                           ;thermometer_driver.c: 68:  return (value);
  1864  0538  0876               	movf	read_byte@value,w
  1865  0539  0008               	return
  1866  053A                     __end_of_read_byte:	
  1867                           
  1868                           	psect	text12
  1869  0478                     __ptext12:	
  1870 ;; *************** function _delay2 *****************
  1871 ;; Defined at:
  1872 ;;		line 12 in file "Utils.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  t               1    wreg     PTR int 
  1875 ;;		 -> t430us(4), t70us(4), t503us(4), t63us(4), 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  t               1    4[COMMON] PTR int 
  1878 ;;		 -> t430us(4), t70us(4), t503us(4), t63us(4), 
  1879 ;;  z               1    3[COMMON] unsigned char 
  1880 ;;  y               1    2[COMMON] unsigned char 
  1881 ;;  x               1    1[COMMON] unsigned char 
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1891 ;;      Params:         0       0       0       0       0
  1892 ;;      Locals:         4       0       0       0       0
  1893 ;;      Temps:          1       0       0       0       0
  1894 ;;      Totals:         5       0       0       0       0
  1895 ;;Total ram usage:        5 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_write_byte
  1901 ;;		_read_byte
  1902 ;;		_resetThermometer
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           
  1907                           ;psect for function _delay2
  1908  0478                     _delay2:	
  1909                           
  1910                           ;incstack = 0
  1911                           ; Regs used in _delay2: [wreg-fsr0h+status,2+status,0]
  1912                           ;delay2@t stored from wreg
  1913  0478  00F4               	movwf	delay2@t
  1914                           
  1915                           ;Utils.c: 13:  char x = t[0];
  1916  0479  0874               	movf	delay2@t,w
  1917  047A  0084               	movwf	4
  1918  047B  1383               	bcf	3,7	;select IRP bank0
  1919  047C  0800               	movf	0,w
  1920  047D  00F0               	movwf	??_delay2
  1921  047E  0870               	movf	??_delay2,w
  1922  047F  00F1               	movwf	delay2@x
  1923                           
  1924                           ;Utils.c: 14:  char y = t[1];
  1925  0480  0874               	movf	delay2@t,w
  1926  0481  3E02               	addlw	2
  1927  0482  0084               	movwf	4
  1928  0483  0800               	movf	0,w
  1929  0484  00F0               	movwf	??_delay2
  1930  0485  0870               	movf	??_delay2,w
  1931  0486  00F2               	movwf	delay2@y
  1932  0487                     l1186:	
  1933                           
  1934                           ;Utils.c: 18:   z = y;
  1935  0487  0872               	movf	delay2@y,w
  1936  0488  00F0               	movwf	??_delay2
  1937  0489  0870               	movf	??_delay2,w
  1938  048A  00F3               	movwf	delay2@z
  1939  048B                     l161:	
  1940                           ;Utils.c: 19:   do {
  1941                           
  1942                           
  1943                           ;Utils.c: 21:   } while (--z);
  1944  048B  3001               	movlw	1
  1945  048C  02F3               	subwf	delay2@z,f
  1946  048D  1D03               	btfss	3,2
  1947  048E  2C8B               	goto	l161
  1948                           
  1949                           ;Utils.c: 22:  } while (--x);
  1950  048F  3001               	movlw	1
  1951  0490  02F1               	subwf	delay2@x,f
  1952  0491  1903               	btfsc	3,2
  1953  0492  0008               	return
  1954  0493  2C87               	goto	l1186
  1955  0494                     __end_of_delay2:	
  1956                           
  1957                           	psect	text13
  1958  044B                     __ptext13:	
  1959 ;; *************** function _delay *****************
  1960 ;; Defined at:
  1961 ;;		line 8 in file "Utils.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  t               2    0[COMMON] int 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  i               2    3[COMMON] int 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1975 ;;      Params:         2       0       0       0       0
  1976 ;;      Locals:         2       0       0       0       0
  1977 ;;      Temps:          1       0       0       0       0
  1978 ;;      Totals:         5       0       0       0       0
  1979 ;;Total ram usage:        5 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;;		_writecmd
  1986 ;;		_writechar
  1987 ;;		_get_temp
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           
  1992                           ;psect for function _delay
  1993  044B                     _delay:	
  1994                           
  1995                           ;Utils.c: 9:  for (int i = 0; i < t; i++);
  1996                           
  1997                           ;incstack = 0
  1998                           ; Regs used in _delay: [wreg+status,2]
  1999  044B  01F3               	clrf	delay@i
  2000  044C  01F4               	clrf	delay@i+1
  2001  044D                     l154:	
  2002  044D  0874               	movf	delay@i+1,w
  2003  044E  3A80               	xorlw	128
  2004  044F  00F2               	movwf	??_delay
  2005  0450  0871               	movf	delay@t+1,w
  2006  0451  3A80               	xorlw	128
  2007  0452  0272               	subwf	??_delay,w
  2008  0453  1D03               	skipz
  2009  0454  2C57               	goto	u575
  2010  0455  0870               	movf	delay@t,w
  2011  0456  0273               	subwf	delay@i,w
  2012  0457                     u575:	
  2013  0457  1803               	btfsc	3,0
  2014  0458  0008               	return
  2015  0459  3001               	movlw	1
  2016  045A  07F3               	addwf	delay@i,f
  2017  045B  1803               	skipnc
  2018  045C  0AF4               	incf	delay@i+1,f
  2019  045D  3000               	movlw	0
  2020  045E  07F4               	addwf	delay@i+1,f
  2021  045F  2C4D               	goto	l154
  2022  0460                     __end_of_delay:	
  2023                           
  2024                           	psect	text14
  2025  071B                     __ptext14:	
  2026 ;; *************** function _calculate_temp *****************
  2027 ;; Defined at:
  2028 ;;		line 111 in file "thermometer_driver.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;  TZ              2    0[BANK0 ] int 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  wd              2    5[BANK0 ] unsigned int 
  2033 ;;  TX              1    4[BANK0 ] unsigned char 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      PTR unsigned char 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0, pclath, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2043 ;;      Params:         0       2       0       0       0
  2044 ;;      Locals:         0       3       0       0       0
  2045 ;;      Temps:          0       2       0       0       0
  2046 ;;      Totals:         0       7       0       0       0
  2047 ;;Total ram usage:        7 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    1
  2050 ;; This function calls:
  2051 ;;		___awdiv
  2052 ;;		___awmod
  2053 ;;		___lwdiv
  2054 ;;		___lwmod
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           
  2061                           ;psect for function _calculate_temp
  2062  071B                     _calculate_temp:	
  2063                           
  2064                           ;thermometer_driver.c: 112:  unsigned int wd = 0;
  2065                           
  2066                           ;incstack = 0
  2067                           ; Regs used in _calculate_temp: [wreg+status,2+status,0+pclath+cstack]
  2068  071B  1283               	bcf	3,5	;RP0=0, select bank0
  2069  071C  1303               	bcf	3,6	;RP1=0, select bank0
  2070  071D  01CE               	clrf	calculate_temp@wd
  2071  071E  01CF               	clrf	calculate_temp@wd+1
  2072                           
  2073                           ;thermometer_driver.c: 113:  unsigned char TX = TLV << 4;
  2074  071F  0840               	movf	_TLV,w
  2075  0720  00CB               	movwf	??_calculate_temp
  2076  0721  3003               	movlw	3
  2077  0722                     u1025:	
  2078  0722  1003               	clrc
  2079  0723  0DCB               	rlf	??_calculate_temp,f
  2080  0724  3EFF               	addlw	-1
  2081  0725  1D03               	skipz
  2082  0726  2F22               	goto	u1025
  2083  0727  1003               	clrc
  2084  0728  0D4B               	rlf	??_calculate_temp,w
  2085  0729  00CC               	movwf	??_calculate_temp+1
  2086  072A  084C               	movf	??_calculate_temp+1,w
  2087  072B  00CD               	movwf	calculate_temp@TX
  2088                           
  2089                           ;thermometer_driver.c: 116:  temperature[0] = TZ / 10;
  2090  072C  300A               	movlw	10
  2091  072D  00F0               	movwf	___awdiv@divisor
  2092  072E  3000               	movlw	0
  2093  072F  00F1               	movwf	___awdiv@divisor+1
  2094  0730  084A               	movf	calculate_temp@TZ+1,w
  2095  0731  00F3               	movwf	___awdiv@dividend+1
  2096  0732  0849               	movf	calculate_temp@TZ,w
  2097  0733  00F2               	movwf	___awdiv@dividend
  2098  0734  120A  118A  265F  120A  118A  	fcall	___awdiv
  2099  0739  0870               	movf	?___awdiv,w
  2100  073A  1283               	bcf	3,5	;RP0=0, select bank0
  2101  073B  1303               	bcf	3,6	;RP1=0, select bank0
  2102  073C  00CB               	movwf	??_calculate_temp
  2103  073D  084B               	movf	??_calculate_temp,w
  2104  073E  00C1               	movwf	_temperature
  2105                           
  2106                           ;thermometer_driver.c: 117:  temperature[1] = TZ % 10;
  2107  073F  300A               	movlw	10
  2108  0740  00F0               	movwf	___awmod@divisor
  2109  0741  3000               	movlw	0
  2110  0742  00F1               	movwf	___awmod@divisor+1
  2111  0743  084A               	movf	calculate_temp@TZ+1,w
  2112  0744  00F3               	movwf	___awmod@dividend+1
  2113  0745  0849               	movf	calculate_temp@TZ,w
  2114  0746  00F2               	movwf	___awmod@dividend
  2115  0747  120A  118A  2614  120A  118A  	fcall	___awmod
  2116  074C  0870               	movf	?___awmod,w
  2117  074D  1283               	bcf	3,5	;RP0=0, select bank0
  2118  074E  1303               	bcf	3,6	;RP1=0, select bank0
  2119  074F  00CB               	movwf	??_calculate_temp
  2120  0750  084B               	movf	??_calculate_temp,w
  2121  0751  00C2               	movwf	_temperature+1
  2122                           
  2123                           ;thermometer_driver.c: 118:  temperature[2] = '.';
  2124  0752  302E               	movlw	46
  2125  0753  00CB               	movwf	??_calculate_temp
  2126  0754  084B               	movf	??_calculate_temp,w
  2127  0755  00C3               	movwf	_temperature+2
  2128                           
  2129                           ;thermometer_driver.c: 120:  if (TX & 0x80) {
  2130  0756  1FCD               	btfss	calculate_temp@TX,7
  2131  0757  2F60               	goto	l1504
  2132                           
  2133                           ;thermometer_driver.c: 121:   wd = wd + 5000;
  2134  0758  084E               	movf	calculate_temp@wd,w
  2135  0759  3E88               	addlw	136
  2136  075A  00CE               	movwf	calculate_temp@wd
  2137  075B  084F               	movf	calculate_temp@wd+1,w
  2138  075C  1803               	skipnc
  2139  075D  3E01               	addlw	1
  2140  075E  3E13               	addlw	19
  2141  075F  00CF               	movwf	calculate_temp@wd+1
  2142  0760                     l1504:	
  2143                           
  2144                           ;thermometer_driver.c: 123:  if (TX & 0x40) {
  2145  0760  1F4D               	btfss	calculate_temp@TX,6
  2146  0761  2F6A               	goto	l1508
  2147                           
  2148                           ;thermometer_driver.c: 124:   wd = wd + 2500;
  2149  0762  084E               	movf	calculate_temp@wd,w
  2150  0763  3EC4               	addlw	196
  2151  0764  00CE               	movwf	calculate_temp@wd
  2152  0765  084F               	movf	calculate_temp@wd+1,w
  2153  0766  1803               	skipnc
  2154  0767  3E01               	addlw	1
  2155  0768  3E09               	addlw	9
  2156  0769  00CF               	movwf	calculate_temp@wd+1
  2157  076A                     l1508:	
  2158                           
  2159                           ;thermometer_driver.c: 126:  if (TX & 0x20) {
  2160  076A  1ECD               	btfss	calculate_temp@TX,5
  2161  076B  2F74               	goto	l1512
  2162                           
  2163                           ;thermometer_driver.c: 127:   wd = wd + 1250;
  2164  076C  084E               	movf	calculate_temp@wd,w
  2165  076D  3EE2               	addlw	226
  2166  076E  00CE               	movwf	calculate_temp@wd
  2167  076F  084F               	movf	calculate_temp@wd+1,w
  2168  0770  1803               	skipnc
  2169  0771  3E01               	addlw	1
  2170  0772  3E04               	addlw	4
  2171  0773  00CF               	movwf	calculate_temp@wd+1
  2172  0774                     l1512:	
  2173                           
  2174                           ;thermometer_driver.c: 129:  if (TX & 0x10) {
  2175  0774  1E4D               	btfss	calculate_temp@TX,4
  2176  0775  2F7E               	goto	l1516
  2177                           
  2178                           ;thermometer_driver.c: 130:   wd = wd + 625;
  2179  0776  084E               	movf	calculate_temp@wd,w
  2180  0777  3E71               	addlw	113
  2181  0778  00CE               	movwf	calculate_temp@wd
  2182  0779  084F               	movf	calculate_temp@wd+1,w
  2183  077A  1803               	skipnc
  2184  077B  3E01               	addlw	1
  2185  077C  3E02               	addlw	2
  2186  077D  00CF               	movwf	calculate_temp@wd+1
  2187  077E                     l1516:	
  2188                           
  2189                           ;thermometer_driver.c: 133:  temperature[3] = wd / 1000;
  2190  077E  30E8               	movlw	232
  2191  077F  00F6               	movwf	___lwdiv@divisor
  2192  0780  3003               	movlw	3
  2193  0781  00F7               	movwf	___lwdiv@divisor+1
  2194  0782  084F               	movf	calculate_temp@wd+1,w
  2195  0783  00F9               	movwf	___lwdiv@dividend+1
  2196  0784  084E               	movf	calculate_temp@wd,w
  2197  0785  00F8               	movwf	___lwdiv@dividend
  2198  0786  120A  118A  25D8  120A  118A  	fcall	___lwdiv
  2199  078B  0876               	movf	?___lwdiv,w
  2200  078C  1283               	bcf	3,5	;RP0=0, select bank0
  2201  078D  1303               	bcf	3,6	;RP1=0, select bank0
  2202  078E  00CB               	movwf	??_calculate_temp
  2203  078F  084B               	movf	??_calculate_temp,w
  2204  0790  00C4               	movwf	_temperature+3
  2205                           
  2206                           ;thermometer_driver.c: 134:  temperature[4] = (wd % 1000) / 100;
  2207  0791  3064               	movlw	100
  2208  0792  00F6               	movwf	___lwdiv@divisor
  2209  0793  3000               	movlw	0
  2210  0794  00F7               	movwf	___lwdiv@divisor+1
  2211  0795  084F               	movf	calculate_temp@wd+1,w
  2212  0796  00F3               	movwf	___lwmod@dividend+1
  2213  0797  084E               	movf	calculate_temp@wd,w
  2214  0798  00F2               	movwf	___lwmod@dividend
  2215  0799  30E8               	movlw	232
  2216  079A  00F0               	movwf	___lwmod@divisor
  2217  079B  3003               	movlw	3
  2218  079C  00F1               	movwf	___lwmod@divisor+1
  2219  079D  120A  118A  253A  120A  118A  	fcall	___lwmod
  2220  07A2  0871               	movf	?___lwmod+1,w
  2221  07A3  00F9               	movwf	___lwdiv@dividend+1
  2222  07A4  0870               	movf	?___lwmod,w
  2223  07A5  00F8               	movwf	___lwdiv@dividend
  2224  07A6  120A  118A  25D8  120A  118A  	fcall	___lwdiv
  2225  07AB  0876               	movf	?___lwdiv,w
  2226  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  2227  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  2228  07AE  00CB               	movwf	??_calculate_temp
  2229  07AF  084B               	movf	??_calculate_temp,w
  2230  07B0  00C5               	movwf	_temperature+4
  2231                           
  2232                           ;thermometer_driver.c: 135:  temperature[5] = (wd % 100) / 10;
  2233  07B1  300A               	movlw	10
  2234  07B2  00F6               	movwf	___lwdiv@divisor
  2235  07B3  3000               	movlw	0
  2236  07B4  00F7               	movwf	___lwdiv@divisor+1
  2237  07B5  084F               	movf	calculate_temp@wd+1,w
  2238  07B6  00F3               	movwf	___lwmod@dividend+1
  2239  07B7  084E               	movf	calculate_temp@wd,w
  2240  07B8  00F2               	movwf	___lwmod@dividend
  2241  07B9  3064               	movlw	100
  2242  07BA  00F0               	movwf	___lwmod@divisor
  2243  07BB  3000               	movlw	0
  2244  07BC  00F1               	movwf	___lwmod@divisor+1
  2245  07BD  120A  118A  253A  120A  118A  	fcall	___lwmod
  2246  07C2  0871               	movf	?___lwmod+1,w
  2247  07C3  00F9               	movwf	___lwdiv@dividend+1
  2248  07C4  0870               	movf	?___lwmod,w
  2249  07C5  00F8               	movwf	___lwdiv@dividend
  2250  07C6  120A  118A  25D8  120A  118A  	fcall	___lwdiv
  2251  07CB  0876               	movf	?___lwdiv,w
  2252  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  2253  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  2254  07CE  00CB               	movwf	??_calculate_temp
  2255  07CF  084B               	movf	??_calculate_temp,w
  2256  07D0  00C6               	movwf	_temperature+5
  2257                           
  2258                           ;thermometer_driver.c: 136:  temperature[6] = wd % 10;
  2259  07D1  300A               	movlw	10
  2260  07D2  00F0               	movwf	___lwmod@divisor
  2261  07D3  3000               	movlw	0
  2262  07D4  00F1               	movwf	___lwmod@divisor+1
  2263  07D5  084F               	movf	calculate_temp@wd+1,w
  2264  07D6  00F3               	movwf	___lwmod@dividend+1
  2265  07D7  084E               	movf	calculate_temp@wd,w
  2266  07D8  00F2               	movwf	___lwmod@dividend
  2267  07D9  120A  118A  253A   	fcall	___lwmod
  2268  07DC  0870               	movf	?___lwmod,w
  2269  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  2270  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  2271  07DF  00CB               	movwf	??_calculate_temp
  2272  07E0  084B               	movf	??_calculate_temp,w
  2273  07E1  00C7               	movwf	_temperature+6
  2274                           
  2275                           ;thermometer_driver.c: 137:  temperature[7] = '\0';
  2276  07E2  01C8               	clrf	_temperature+7
  2277                           
  2278                           ;thermometer_driver.c: 138:  return temperature;
  2279  07E3  3041               	movlw	(low (_temperature| 0))& (0+255)
  2280  07E4  0008               	return
  2281  07E5                     __end_of_calculate_temp:	
  2282                           
  2283                           	psect	text15
  2284  053A                     __ptext15:	
  2285 ;; *************** function ___lwmod *****************
  2286 ;; Defined at:
  2287 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  divisor         2    0[COMMON] unsigned int 
  2290 ;;  dividend        2    2[COMMON] unsigned int 
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;  counter         1    5[COMMON] unsigned char 
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  2    0[COMMON] unsigned int 
  2295 ;; Registers used:
  2296 ;;		wreg, status,2, status,0
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2302 ;;      Params:         4       0       0       0       0
  2303 ;;      Locals:         1       0       0       0       0
  2304 ;;      Temps:          1       0       0       0       0
  2305 ;;      Totals:         6       0       0       0       0
  2306 ;;Total ram usage:        6 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; This function calls:
  2309 ;;		Nothing
  2310 ;; This function is called by:
  2311 ;;		_calculate_temp
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           
  2316                           ;psect for function ___lwmod
  2317  053A                     ___lwmod:	
  2318                           
  2319                           ;incstack = 0
  2320                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2321  053A  0870               	movf	___lwmod@divisor,w
  2322  053B  0471               	iorwf	___lwmod@divisor+1,w
  2323  053C  1903               	btfsc	3,2
  2324  053D  2D67               	goto	l1452
  2325  053E  01F5               	clrf	___lwmod@counter
  2326  053F  0AF5               	incf	___lwmod@counter,f
  2327  0540                     l1442:	
  2328  0540  1BF1               	btfsc	___lwmod@divisor+1,7
  2329  0541  2D4E               	goto	l1444
  2330  0542  3001               	movlw	1
  2331  0543                     u955:	
  2332  0543  1003               	clrc
  2333  0544  0DF0               	rlf	___lwmod@divisor,f
  2334  0545  0DF1               	rlf	___lwmod@divisor+1,f
  2335  0546  3EFF               	addlw	-1
  2336  0547  1D03               	skipz
  2337  0548  2D43               	goto	u955
  2338  0549  3001               	movlw	1
  2339  054A  00F4               	movwf	??___lwmod
  2340  054B  0874               	movf	??___lwmod,w
  2341  054C  07F5               	addwf	___lwmod@counter,f
  2342  054D  2D40               	goto	l1442
  2343  054E                     l1444:	
  2344  054E  0871               	movf	___lwmod@divisor+1,w
  2345  054F  0273               	subwf	___lwmod@dividend+1,w
  2346  0550  1D03               	skipz
  2347  0551  2D54               	goto	u975
  2348  0552  0870               	movf	___lwmod@divisor,w
  2349  0553  0272               	subwf	___lwmod@dividend,w
  2350  0554                     u975:	
  2351  0554  1C03               	skipc
  2352  0555  2D5C               	goto	l1448
  2353  0556  0870               	movf	___lwmod@divisor,w
  2354  0557  02F2               	subwf	___lwmod@dividend,f
  2355  0558  0871               	movf	___lwmod@divisor+1,w
  2356  0559  1C03               	skipc
  2357  055A  03F3               	decf	___lwmod@dividend+1,f
  2358  055B  02F3               	subwf	___lwmod@dividend+1,f
  2359  055C                     l1448:	
  2360  055C  3001               	movlw	1
  2361  055D                     u985:	
  2362  055D  1003               	clrc
  2363  055E  0CF1               	rrf	___lwmod@divisor+1,f
  2364  055F  0CF0               	rrf	___lwmod@divisor,f
  2365  0560  3EFF               	addlw	-1
  2366  0561  1D03               	skipz
  2367  0562  2D5D               	goto	u985
  2368  0563  3001               	movlw	1
  2369  0564  02F5               	subwf	___lwmod@counter,f
  2370  0565  1D03               	btfss	3,2
  2371  0566  2D4E               	goto	l1444
  2372  0567                     l1452:	
  2373  0567  0873               	movf	___lwmod@dividend+1,w
  2374  0568  00F1               	movwf	?___lwmod+1
  2375  0569  0872               	movf	___lwmod@dividend,w
  2376  056A  00F0               	movwf	?___lwmod
  2377  056B  0008               	return
  2378  056C                     __end_of___lwmod:	
  2379                           
  2380                           	psect	text16
  2381  05D8                     __ptext16:	
  2382 ;; *************** function ___lwdiv *****************
  2383 ;; Defined at:
  2384 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  divisor         2    6[COMMON] unsigned int 
  2387 ;;  dividend        2    8[COMMON] unsigned int 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  quotient        2   11[COMMON] unsigned int 
  2390 ;;  counter         1   13[COMMON] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  2    6[COMMON] unsigned int 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2400 ;;      Params:         4       0       0       0       0
  2401 ;;      Locals:         3       0       0       0       0
  2402 ;;      Temps:          1       0       0       0       0
  2403 ;;      Totals:         8       0       0       0       0
  2404 ;;Total ram usage:        8 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_calculate_temp
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           
  2414                           ;psect for function ___lwdiv
  2415  05D8                     ___lwdiv:	
  2416                           
  2417                           ;incstack = 0
  2418                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2419  05D8  01FB               	clrf	___lwdiv@quotient
  2420  05D9  01FC               	clrf	___lwdiv@quotient+1
  2421  05DA  0876               	movf	___lwdiv@divisor,w
  2422  05DB  0477               	iorwf	___lwdiv@divisor+1,w
  2423  05DC  1903               	btfsc	3,2
  2424  05DD  2E0F               	goto	l1430
  2425  05DE  01FD               	clrf	___lwdiv@counter
  2426  05DF  0AFD               	incf	___lwdiv@counter,f
  2427  05E0                     l1418:	
  2428  05E0  1BF7               	btfsc	___lwdiv@divisor+1,7
  2429  05E1  2DEE               	goto	l1420
  2430  05E2  3001               	movlw	1
  2431  05E3                     u885:	
  2432  05E3  1003               	clrc
  2433  05E4  0DF6               	rlf	___lwdiv@divisor,f
  2434  05E5  0DF7               	rlf	___lwdiv@divisor+1,f
  2435  05E6  3EFF               	addlw	-1
  2436  05E7  1D03               	skipz
  2437  05E8  2DE3               	goto	u885
  2438  05E9  3001               	movlw	1
  2439  05EA  00FA               	movwf	??___lwdiv
  2440  05EB  087A               	movf	??___lwdiv,w
  2441  05EC  07FD               	addwf	___lwdiv@counter,f
  2442  05ED  2DE0               	goto	l1418
  2443  05EE                     l1420:	
  2444  05EE  3001               	movlw	1
  2445  05EF                     u905:	
  2446  05EF  1003               	clrc
  2447  05F0  0DFB               	rlf	___lwdiv@quotient,f
  2448  05F1  0DFC               	rlf	___lwdiv@quotient+1,f
  2449  05F2  3EFF               	addlw	-1
  2450  05F3  1D03               	skipz
  2451  05F4  2DEF               	goto	u905
  2452  05F5  0877               	movf	___lwdiv@divisor+1,w
  2453  05F6  0279               	subwf	___lwdiv@dividend+1,w
  2454  05F7  1D03               	skipz
  2455  05F8  2DFB               	goto	u915
  2456  05F9  0876               	movf	___lwdiv@divisor,w
  2457  05FA  0278               	subwf	___lwdiv@dividend,w
  2458  05FB                     u915:	
  2459  05FB  1C03               	skipc
  2460  05FC  2E04               	goto	l1426
  2461  05FD  0876               	movf	___lwdiv@divisor,w
  2462  05FE  02F8               	subwf	___lwdiv@dividend,f
  2463  05FF  0877               	movf	___lwdiv@divisor+1,w
  2464  0600  1C03               	skipc
  2465  0601  03F9               	decf	___lwdiv@dividend+1,f
  2466  0602  02F9               	subwf	___lwdiv@dividend+1,f
  2467  0603  147B               	bsf	___lwdiv@quotient,0
  2468  0604                     l1426:	
  2469  0604  3001               	movlw	1
  2470  0605                     u925:	
  2471  0605  1003               	clrc
  2472  0606  0CF7               	rrf	___lwdiv@divisor+1,f
  2473  0607  0CF6               	rrf	___lwdiv@divisor,f
  2474  0608  3EFF               	addlw	-1
  2475  0609  1D03               	skipz
  2476  060A  2E05               	goto	u925
  2477  060B  3001               	movlw	1
  2478  060C  02FD               	subwf	___lwdiv@counter,f
  2479  060D  1D03               	btfss	3,2
  2480  060E  2DEE               	goto	l1420
  2481  060F                     l1430:	
  2482  060F  087C               	movf	___lwdiv@quotient+1,w
  2483  0610  00F7               	movwf	?___lwdiv+1
  2484  0611  087B               	movf	___lwdiv@quotient,w
  2485  0612  00F6               	movwf	?___lwdiv
  2486  0613  0008               	return
  2487  0614                     __end_of___lwdiv:	
  2488                           
  2489                           	psect	text17
  2490  0614                     __ptext17:	
  2491 ;; *************** function ___awmod *****************
  2492 ;; Defined at:
  2493 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  divisor         2    0[COMMON] int 
  2496 ;;  dividend        2    2[COMMON] int 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  sign            1    6[COMMON] unsigned char 
  2499 ;;  counter         1    5[COMMON] unsigned char 
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  2    0[COMMON] int 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2509 ;;      Params:         4       0       0       0       0
  2510 ;;      Locals:         2       0       0       0       0
  2511 ;;      Temps:          1       0       0       0       0
  2512 ;;      Totals:         7       0       0       0       0
  2513 ;;Total ram usage:        7 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_calculate_temp
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           
  2523                           ;psect for function ___awmod
  2524  0614                     ___awmod:	
  2525                           
  2526                           ;incstack = 0
  2527                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2528  0614  01F6               	clrf	___awmod@sign
  2529  0615  1FF3               	btfss	___awmod@dividend+1,7
  2530  0616  2E1E               	goto	l1378
  2531  0617  09F2               	comf	___awmod@dividend,f
  2532  0618  09F3               	comf	___awmod@dividend+1,f
  2533  0619  0AF2               	incf	___awmod@dividend,f
  2534  061A  1903               	skipnz
  2535  061B  0AF3               	incf	___awmod@dividend+1,f
  2536  061C  01F6               	clrf	___awmod@sign
  2537  061D  0AF6               	incf	___awmod@sign,f
  2538  061E                     l1378:	
  2539  061E  1FF1               	btfss	___awmod@divisor+1,7
  2540  061F  2E25               	goto	l1382
  2541  0620  09F0               	comf	___awmod@divisor,f
  2542  0621  09F1               	comf	___awmod@divisor+1,f
  2543  0622  0AF0               	incf	___awmod@divisor,f
  2544  0623  1903               	skipnz
  2545  0624  0AF1               	incf	___awmod@divisor+1,f
  2546  0625                     l1382:	
  2547  0625  0870               	movf	___awmod@divisor,w
  2548  0626  0471               	iorwf	___awmod@divisor+1,w
  2549  0627  1903               	btfsc	3,2
  2550  0628  2E52               	goto	l1400
  2551  0629  01F5               	clrf	___awmod@counter
  2552  062A  0AF5               	incf	___awmod@counter,f
  2553  062B                     l1390:	
  2554  062B  1BF1               	btfsc	___awmod@divisor+1,7
  2555  062C  2E39               	goto	l1392
  2556  062D  3001               	movlw	1
  2557  062E                     u815:	
  2558  062E  1003               	clrc
  2559  062F  0DF0               	rlf	___awmod@divisor,f
  2560  0630  0DF1               	rlf	___awmod@divisor+1,f
  2561  0631  3EFF               	addlw	-1
  2562  0632  1D03               	skipz
  2563  0633  2E2E               	goto	u815
  2564  0634  3001               	movlw	1
  2565  0635  00F4               	movwf	??___awmod
  2566  0636  0874               	movf	??___awmod,w
  2567  0637  07F5               	addwf	___awmod@counter,f
  2568  0638  2E2B               	goto	l1390
  2569  0639                     l1392:	
  2570  0639  0871               	movf	___awmod@divisor+1,w
  2571  063A  0273               	subwf	___awmod@dividend+1,w
  2572  063B  1D03               	skipz
  2573  063C  2E3F               	goto	u835
  2574  063D  0870               	movf	___awmod@divisor,w
  2575  063E  0272               	subwf	___awmod@dividend,w
  2576  063F                     u835:	
  2577  063F  1C03               	skipc
  2578  0640  2E47               	goto	l1396
  2579  0641  0870               	movf	___awmod@divisor,w
  2580  0642  02F2               	subwf	___awmod@dividend,f
  2581  0643  0871               	movf	___awmod@divisor+1,w
  2582  0644  1C03               	skipc
  2583  0645  03F3               	decf	___awmod@dividend+1,f
  2584  0646  02F3               	subwf	___awmod@dividend+1,f
  2585  0647                     l1396:	
  2586  0647  3001               	movlw	1
  2587  0648                     u845:	
  2588  0648  1003               	clrc
  2589  0649  0CF1               	rrf	___awmod@divisor+1,f
  2590  064A  0CF0               	rrf	___awmod@divisor,f
  2591  064B  3EFF               	addlw	-1
  2592  064C  1D03               	skipz
  2593  064D  2E48               	goto	u845
  2594  064E  3001               	movlw	1
  2595  064F  02F5               	subwf	___awmod@counter,f
  2596  0650  1D03               	btfss	3,2
  2597  0651  2E39               	goto	l1392
  2598  0652                     l1400:	
  2599  0652  0876               	movf	___awmod@sign,w
  2600  0653  1903               	btfsc	3,2
  2601  0654  2E5A               	goto	l1404
  2602  0655  09F2               	comf	___awmod@dividend,f
  2603  0656  09F3               	comf	___awmod@dividend+1,f
  2604  0657  0AF2               	incf	___awmod@dividend,f
  2605  0658  1903               	skipnz
  2606  0659  0AF3               	incf	___awmod@dividend+1,f
  2607  065A                     l1404:	
  2608  065A  0873               	movf	___awmod@dividend+1,w
  2609  065B  00F1               	movwf	?___awmod+1
  2610  065C  0872               	movf	___awmod@dividend,w
  2611  065D  00F0               	movwf	?___awmod
  2612  065E  0008               	return
  2613  065F                     __end_of___awmod:	
  2614                           
  2615                           	psect	text18
  2616  065F                     __ptext18:	
  2617 ;; *************** function ___awdiv *****************
  2618 ;; Defined at:
  2619 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  divisor         2    0[COMMON] int 
  2622 ;;  dividend        2    2[COMMON] int 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  quotient        2    7[COMMON] int 
  2625 ;;  sign            1    6[COMMON] unsigned char 
  2626 ;;  counter         1    5[COMMON] unsigned char 
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  2    0[COMMON] int 
  2629 ;; Registers used:
  2630 ;;		wreg, status,2, status,0
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2636 ;;      Params:         4       0       0       0       0
  2637 ;;      Locals:         4       0       0       0       0
  2638 ;;      Temps:          1       0       0       0       0
  2639 ;;      Totals:         9       0       0       0       0
  2640 ;;Total ram usage:        9 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_calculate_temp
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           
  2650                           ;psect for function ___awdiv
  2651  065F                     ___awdiv:	
  2652                           
  2653                           ;incstack = 0
  2654                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2655  065F  01F6               	clrf	___awdiv@sign
  2656  0660  1FF1               	btfss	___awdiv@divisor+1,7
  2657  0661  2E69               	goto	l1334
  2658  0662  09F0               	comf	___awdiv@divisor,f
  2659  0663  09F1               	comf	___awdiv@divisor+1,f
  2660  0664  0AF0               	incf	___awdiv@divisor,f
  2661  0665  1903               	skipnz
  2662  0666  0AF1               	incf	___awdiv@divisor+1,f
  2663  0667  01F6               	clrf	___awdiv@sign
  2664  0668  0AF6               	incf	___awdiv@sign,f
  2665  0669                     l1334:	
  2666  0669  1FF3               	btfss	___awdiv@dividend+1,7
  2667  066A  2E74               	goto	l1340
  2668  066B  09F2               	comf	___awdiv@dividend,f
  2669  066C  09F3               	comf	___awdiv@dividend+1,f
  2670  066D  0AF2               	incf	___awdiv@dividend,f
  2671  066E  1903               	skipnz
  2672  066F  0AF3               	incf	___awdiv@dividend+1,f
  2673  0670  3001               	movlw	1
  2674  0671  00F4               	movwf	??___awdiv
  2675  0672  0874               	movf	??___awdiv,w
  2676  0673  06F6               	xorwf	___awdiv@sign,f
  2677  0674                     l1340:	
  2678  0674  01F7               	clrf	___awdiv@quotient
  2679  0675  01F8               	clrf	___awdiv@quotient+1
  2680  0676  0870               	movf	___awdiv@divisor,w
  2681  0677  0471               	iorwf	___awdiv@divisor+1,w
  2682  0678  1903               	btfsc	3,2
  2683  0679  2EAB               	goto	l1362
  2684  067A  01F5               	clrf	___awdiv@counter
  2685  067B  0AF5               	incf	___awdiv@counter,f
  2686  067C                     l1350:	
  2687  067C  1BF1               	btfsc	___awdiv@divisor+1,7
  2688  067D  2E8A               	goto	l1352
  2689  067E  3001               	movlw	1
  2690  067F                     u715:	
  2691  067F  1003               	clrc
  2692  0680  0DF0               	rlf	___awdiv@divisor,f
  2693  0681  0DF1               	rlf	___awdiv@divisor+1,f
  2694  0682  3EFF               	addlw	-1
  2695  0683  1D03               	skipz
  2696  0684  2E7F               	goto	u715
  2697  0685  3001               	movlw	1
  2698  0686  00F4               	movwf	??___awdiv
  2699  0687  0874               	movf	??___awdiv,w
  2700  0688  07F5               	addwf	___awdiv@counter,f
  2701  0689  2E7C               	goto	l1350
  2702  068A                     l1352:	
  2703  068A  3001               	movlw	1
  2704  068B                     u735:	
  2705  068B  1003               	clrc
  2706  068C  0DF7               	rlf	___awdiv@quotient,f
  2707  068D  0DF8               	rlf	___awdiv@quotient+1,f
  2708  068E  3EFF               	addlw	-1
  2709  068F  1D03               	skipz
  2710  0690  2E8B               	goto	u735
  2711  0691  0871               	movf	___awdiv@divisor+1,w
  2712  0692  0273               	subwf	___awdiv@dividend+1,w
  2713  0693  1D03               	skipz
  2714  0694  2E97               	goto	u745
  2715  0695  0870               	movf	___awdiv@divisor,w
  2716  0696  0272               	subwf	___awdiv@dividend,w
  2717  0697                     u745:	
  2718  0697  1C03               	skipc
  2719  0698  2EA0               	goto	l1358
  2720  0699  0870               	movf	___awdiv@divisor,w
  2721  069A  02F2               	subwf	___awdiv@dividend,f
  2722  069B  0871               	movf	___awdiv@divisor+1,w
  2723  069C  1C03               	skipc
  2724  069D  03F3               	decf	___awdiv@dividend+1,f
  2725  069E  02F3               	subwf	___awdiv@dividend+1,f
  2726  069F  1477               	bsf	___awdiv@quotient,0
  2727  06A0                     l1358:	
  2728  06A0  3001               	movlw	1
  2729  06A1                     u755:	
  2730  06A1  1003               	clrc
  2731  06A2  0CF1               	rrf	___awdiv@divisor+1,f
  2732  06A3  0CF0               	rrf	___awdiv@divisor,f
  2733  06A4  3EFF               	addlw	-1
  2734  06A5  1D03               	skipz
  2735  06A6  2EA1               	goto	u755
  2736  06A7  3001               	movlw	1
  2737  06A8  02F5               	subwf	___awdiv@counter,f
  2738  06A9  1D03               	btfss	3,2
  2739  06AA  2E8A               	goto	l1352
  2740  06AB                     l1362:	
  2741  06AB  0876               	movf	___awdiv@sign,w
  2742  06AC  1903               	btfsc	3,2
  2743  06AD  2EB3               	goto	l1366
  2744  06AE  09F7               	comf	___awdiv@quotient,f
  2745  06AF  09F8               	comf	___awdiv@quotient+1,f
  2746  06B0  0AF7               	incf	___awdiv@quotient,f
  2747  06B1  1903               	skipnz
  2748  06B2  0AF8               	incf	___awdiv@quotient+1,f
  2749  06B3                     l1366:	
  2750  06B3  0878               	movf	___awdiv@quotient+1,w
  2751  06B4  00F1               	movwf	?___awdiv+1
  2752  06B5  0877               	movf	___awdiv@quotient,w
  2753  06B6  00F0               	movwf	?___awdiv
  2754  06B7  0008               	return
  2755  06B8                     __end_of___awdiv:	
  2756  007E                     btemp	set	126	;btemp
  2757  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    8
    Data        30
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      52
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@a	PTR unsigned char  size(1) Largest target is 8
		 -> temperature(BANK0[8]), 

    delay2@t	PTR int  size(1) Largest target is 4
		 -> t430us(BANK0[4]), t70us(BANK0[4]), t503us(BANK0[4]), t63us(BANK0[4]), 

    writeIntArray@ints	PTR unsigned char  size(1) Largest target is 8
		 -> temperature(BANK0[8]), 

    sp__calculate_temp	PTR unsigned char  size(1) Largest target is 8
		 -> temperature(BANK0[8]), 

    main@tempa	PTR unsigned char  size(1) Largest target is 8
		 -> temperature(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_writeIntArray
    _writeIntArray->_writeInt
    _writeInt->_writechar
    _writechar->_delay
    _lcd_init->_writecmd
    _writecmd->_delay
    _get_temp->_write_byte
    _write_byte->_delay2
    _resetThermometer->_delay2
    _read_byte->_delay2
    _calculate_temp->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    _main->_calculate_temp

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6208
                                              7 BANK0      4     4      0
                     _calculate_temp
                              _delay
                           _get_temp
                               _init
                           _lcd_init
                      _writeIntArray
                          _writechar
 ---------------------------------------------------------------------------------
 (1) _writeIntArray                                        6     6      0     847
                                              8 COMMON     6     6      0
                             _strlen
                           _writeInt
 ---------------------------------------------------------------------------------
 (2) _writeInt                                             2     0      2     590
                                              6 COMMON     2     0      2
                          _writechar
 ---------------------------------------------------------------------------------
 (1) _writechar                                            1     1      0     448
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     134
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     448
                           _writecmd
 ---------------------------------------------------------------------------------
 (2) _writecmd                                             1     1      0     448
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             7     5      2    1470
                                             10 COMMON     2     0      2
                                              0 BANK0      5     5      0
                              _delay
                          _read_byte
                   _resetThermometer
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     392
                                              5 COMMON     5     5      0
                             _delay2
 ---------------------------------------------------------------------------------
 (2) _resetThermometer                                     1     1      0     303
                                              5 COMMON     1     1      0
                             _delay2
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     349
                                              5 COMMON     3     3      0
                             _delay2
 ---------------------------------------------------------------------------------
 (3) _delay2                                               5     5      0     278
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2     426
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _calculate_temp                                       7     5      2    2523
                                              0 BANK0      7     5      2
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calculate_temp
     ___awdiv
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _delay
   _get_temp
     _delay
     _read_byte
       _delay2
     _resetThermometer
       _delay2
     _write_byte
       _delay2
   _init
   _lcd_init
     _writecmd
       _delay
   _writeIntArray
     _strlen
     _writeInt
       _writechar
         _delay
   _writechar
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      34       5       65.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      42      12        0.0%
ABS                  0      0      42       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Nov 18 17:26:59 2019

                        pc 0002               ___awdiv@sign 0076                         fsr 0004  
                      l161 048B                        l154 044D                        _RA2 002A  
                      _RA3 002B                        _RA4 002C                        _RA5 002D  
                      _RE0 0048                        u715 067F                        u735 068B  
                      u815 062E                        u575 0457                        u745 0697  
                      u905 05EF                        u755 06A1                        u835 063F  
                      u915 05FB                        u845 0648                        u925 0605  
                      u955 0543                        u885 05E3                        _THV 003F  
                      u975 0554                        u985 055D                        _TLV 0040  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
             __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000                       l1210 0463  
                     l1212 0473                       l1204 03FD                       l1222 0571  
                     l1400 0652                       l1320 04D3                       l1322 04D4  
                     l1242 0587                       l1340 0674                       l1404 065A  
                     l1420 05EE                       l1324 04B4                       l1350 067C  
                     l1334 0669                       l1430 060F                       l1352 068A  
                     l1512 0774                       l1504 0760                       l1264 050E  
                     l1362 06AB                       l1426 0604                       l1418 05E0  
                     l1442 0540                       l1186 0487                       l1444 054E  
                     l1452 0567                       l1516 077E                       l1508 076A  
                     l1366 06B3                       l1358 06A0                       l1390 062B  
                     l1382 0625                       l1392 0639                       l1448 055C  
                     l1536 04DE                       l1378 061E                       l1396 0647  
                     u1005 0702                       u1015 070D                       u1025 0722  
                     u1075 04EE            ?_calculate_temp 0049                       _main 059F  
                     _init 03E8                       btemp 007E              write_byte@val 0078  
                     start 0000          ?_resetThermometer 0070         ??_resetThermometer 0075  
                    ?_main 0070                      ?_init 0070            __end_of___awdiv 06B8  
            __CFG_WDTE$OFF 0000            __end_of___awmod 065F            ___awdiv@divisor 0070  
          __end_of___lwdiv 0614            __end_of___lwmod 056C            ___awdiv@counter 0075  
                    _PORTD 0008                      _TRISA 0085                      _TRISC 0087  
                    _TRISD 0088              __CFG_PWRTE$ON 0000                      _t70us 0032  
                    _t63us 002E                      _delay 044B                      _tUKus 002A  
                    _table 0020             write_byte@temp 0077             __CFG_BOREN$OFF 0000  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 07E5               __end_of_main 05D8               __end_of_init 03F3  
                   ??_main 0050                     ??_init 0070                     ?_delay 0070  
                   _ADCON1 009F           ___awdiv@dividend 0072                     _TRISE0 0448  
                   _t430us 0036                     _t503us 003A           __end_of_lcd_init 0414  
         __end_of_get_temp 071B            writecmd@command 0075                  ??___awdiv 0074  
                ??___awmod 0074                     _delay2 0478                  ??___lwdiv 007A  
                ??___lwmod 0074                     delay@i 0073                     delay@t 0070  
         ___awdiv@quotient 0077            ___awmod@divisor 0070            ___awmod@counter 0075  
                   _strlen 0460           __end_of_writeInt 0403           __end_of_writecmd 0438  
   __size_of_writeIntArray 002E    __end_of__initialization 07FC             __pcstackCOMMON 0070  
             __pidataBANK0 0494              __end_of_delay 0460           ??_calculate_temp 004B  
                  ??_delay 0072                 __pbssBANK0 003E         __size_of_read_byte 0031  
               __pmaintext 059F                    ?_delay2 0070              _writeIntArray 04DB  
                  ?_strlen 0070  __size_of_resetThermometer 0029                  ?_lcd_init 0070  
                ?_get_temp 007A                 __stringtab 0003         __size_of_writechar 0013  
                  ___awdiv 065F                    ___awmod 0614            __size_of_delay2 001C  
                  ___lwdiv 05D8                    ___lwmod 053A             ?_writeIntArray 0070  
                  __ptext1 04DB                    __ptext2 03F3                    __ptext3 0438  
                  __ptext4 0460                    __ptext5 0403                    __ptext6 0425  
                  __ptext7 03E8                    __ptext8 06B8                    __ptext9 056C  
                ?_writeInt 0076                  ?_writecmd 0070            __size_of_strlen 0018  
                  delay2@t 0074                    delay2@x 0071                    delay2@y 0072  
                  delay2@z 0073           ___awmod@dividend 0072          __end_of_read_byte 053A  
        writeIntArray@ints 007D                 ??_lcd_init 0076                 ??_get_temp 0049  
     end_of_initialization 07FC                    strlen@a 0073                 ??_writeInt 0078  
               ??_writecmd 0075   resetThermometer@presence 0075          __end_of_writechar 044B  
         calculate_temp@TX 004D           calculate_temp@TZ 0049           calculate_temp@wd 004E  
          ??_writeIntArray 0078             __end_of_delay2 0494                 _write_byte 056C  
           __end_of_strlen 0478        start_initialization 07E5           _resetThermometer 04B2  
               init_fetch0 0414                   ??_delay2 0070                __pdataBANK0 0020  
               read_byte@i 0077                 read_byte@j 003E                   ??_strlen 0072  
                ___latbits 0002              __pcstackBANK0 0049          __size_of_lcd_init 0011  
        __size_of_get_temp 0063            setCursorPos@ln1 000F            setCursorPos@ln2 000D  
          setCursorPos@ln3 000B            setCursorPos@ln4 0009           ___lwdiv@dividend 0078  
                 ?___awdiv 0070                   ?___awmod 0070                   ?___lwdiv 0076  
                 ?___lwmod 0070                ?_write_byte 0070                  __pstrings 0003  
       writechar@character 0075          __size_of_writeInt 0010          __size_of_writecmd 0013  
         ___lwdiv@quotient 007B             __size_of_delay 0015                  _read_byte 0509  
  __size_of_calculate_temp 00CA                __stringbase 0008                  main@tempa 0053  
              write_byte@i 0079                  _writechar 0438                 ?_read_byte 0070  
  __end_ofsetCursorPos@ln1 0011    __end_ofsetCursorPos@ln2 000F    __end_ofsetCursorPos@ln3 000D  
  __end_ofsetCursorPos@ln4 000B        __size_of_write_byte 0033   __end_of_resetThermometer 04DB  
         __size_of___awdiv 0059           __size_of___awmod 004B           __size_of___lwdiv 003C  
         __size_of___lwmod 0032         __end_of__stringtab 0009            ___lwdiv@divisor 0076  
          ___lwdiv@counter 007D                   __ptext10 04B2                   __ptext11 0509  
                 __ptext12 0478                   __ptext13 044B                   __ptext14 071B  
                 __ptext15 053A                   __ptext16 05D8                   __ptext17 0614  
                 __ptext18 065F                 ?_writechar 0070                   _lcd_init 0403  
                 _get_temp 06B8              __size_of_main 0039              __size_of_init 000B  
    __end_of_writeIntArray 0509                   main@temp 0051                   _writeInt 03F3  
                 _writecmd 0425             read_byte@value 0076                   init_ram0 0418  
              ??_read_byte 0075           ___lwmod@dividend 0072             _calculate_temp 071B  
                strlen@len 0074             writeIntArray@i 007B                  stringcode 0003  
                writeInt@i 0076               ??_write_byte 0075                _temperature 0041  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 0003  
                 stringtab 0003                ??_writechar 0075     __end_of_calculate_temp 07E5  
       __end_of_write_byte 059F  
