

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Nov 15 14:11:43 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.05
    15                           ; Generated 20/12/2018 GMT
    16                           ; 
    17                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288                           
   289                           	psect	strings
   290  0003                     __pstrings:	
   291  0003                     stringtab:	
   292  0003                     __stringtab:	
   293  0003                     stringcode:	
   294                           ;	String table - string pointers are 1 byte each
   295                           
   296  0003                     stringdir:	
   297  0003  3000               	movlw	high stringdir
   298  0004  008A               	movwf	10
   299  0005  0804               	movf	4,w
   300  0006  0A84               	incf	4,f
   301  0007  0782               	addwf	2,f
   302  0008                     __stringbase:	
   303  0008  3400               	retlw	0
   304  0009                     __end_of__stringtab:	
   305  0009                     setCursorPos@ln4:	
   306  0009  34D8               	retlw	216
   307  000A  3400               	retlw	0
   308  000B                     __end_ofsetCursorPos@ln4:	
   309  000B                     setCursorPos@ln3:	
   310  000B  34C8               	retlw	200
   311  000C  3400               	retlw	0
   312  000D                     __end_ofsetCursorPos@ln3:	
   313  000D                     setCursorPos@ln2:	
   314  000D  34D0               	retlw	208
   315  000E  3400               	retlw	0
   316  000F                     __end_ofsetCursorPos@ln2:	
   317  000F                     setCursorPos@ln1:	
   318  000F  34C0               	retlw	192
   319  0010  3400               	retlw	0
   320  0011                     __end_ofsetCursorPos@ln1:	
   321  0008                     _PORTD	set	8
   322  002B                     _RA3	set	43
   323  002C                     _RA4	set	44
   324  002D                     _RA5	set	45
   325  002A                     _RA2	set	42
   326  0087                     _TRISC	set	135
   327  0088                     _TRISD	set	136
   328  0085                     _TRISA	set	133
   329  009F                     _ADCON1	set	159
   330                           
   331                           ; #config settings
   332  0000                     
   333                           	psect	cinit
   334  07FC                     start_initialization:	
   335  07FC                     __initialization:	
   336  07FC                     end_of_initialization:	
   337                           ;End of C runtime variable initialization code
   338                           
   339  07FC                     __end_of__initialization:	
   340  07FC  0183               	clrf	3
   341  07FD  120A  118A  2FE6   	ljmp	_main	;jump to C main() function
   342                           
   343                           	psect	cstackCOMMON
   344  0070                     __pcstackCOMMON:	
   345  0070                     ?_lcd_init:	
   346  0070                     ?_writechar:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_delay:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_main:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_writecmd:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     delay@t:	
   359                           ; 1 bytes @ 0x0
   360                           
   361                           
   362                           ; 2 bytes @ 0x0
   363  0070                     	ds	2
   364  0072                     ??_delay:	
   365                           
   366                           ; 1 bytes @ 0x2
   367  0072                     	ds	1
   368  0073                     delay@i:	
   369                           
   370                           ; 2 bytes @ 0x3
   371  0073                     	ds	2
   372  0075                     ??_writechar:	
   373  0075                     ??_writecmd:	
   374                           ; 1 bytes @ 0x5
   375                           
   376  0075                     writecmd@command:	
   377                           ; 1 bytes @ 0x5
   378                           
   379  0075                     writechar@character:	
   380                           ; 1 bytes @ 0x5
   381                           
   382                           
   383                           ; 1 bytes @ 0x5
   384  0075                     	ds	1
   385  0076                     ??_lcd_init:	
   386  0076                     ??_main:	
   387                           ; 1 bytes @ 0x6
   388                           
   389                           
   390                           	psect	maintext
   391  07E6                     __pmaintext:	
   392                           ; 1 bytes @ 0x6
   393 ;;
   394 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   395 ;;
   396 ;; *************** function _main *****************
   397 ;; Defined at:
   398 ;;		line 28 in file "main.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, status,2, status,0, pclath, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : B00/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   412 ;;      Params:         0       0       0       0       0
   413 ;;      Locals:         0       0       0       0       0
   414 ;;      Temps:          0       0       0       0       0
   415 ;;      Totals:         0       0       0       0       0
   416 ;;Total ram usage:        0 bytes
   417 ;; Hardware stack levels required when called:    3
   418 ;; This function calls:
   419 ;;		_lcd_init
   420 ;;		_writechar
   421 ;; This function is called by:
   422 ;;		Startup code after reset
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           
   427                           ;psect for function _main
   428  07E6                     _main:	
   429                           
   430                           ;main.c: 30:  ADCON1 = 0X07;
   431                           
   432                           ;incstack = 0
   433                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   434  07E6  3007               	movlw	7
   435  07E7  1683               	bsf	3,5	;RP0=1, select bank1
   436  07E8  1303               	bcf	3,6	;RP1=0, select bank1
   437  07E9  009F               	movwf	31	;volatile
   438                           
   439                           ;main.c: 31:  TRISA = 0X00;
   440  07EA  0185               	clrf	5	;volatile
   441                           
   442                           ;main.c: 32:  TRISD = 0X00;
   443  07EB  0188               	clrf	8	;volatile
   444                           
   445                           ;main.c: 33:  TRISC = 0x00;
   446  07EC  0187               	clrf	7	;volatile
   447                           
   448                           ;main.c: 34:  RA2 = 1;
   449  07ED  1283               	bcf	3,5	;RP0=0, select bank0
   450  07EE  1303               	bcf	3,6	;RP1=0, select bank0
   451  07EF  1505               	bsf	5,2	;volatile
   452                           
   453                           ;main.c: 37:  lcd_init();
   454  07F0  120A  118A  279A  120A  118A  	fcall	_lcd_init
   455                           
   456                           ;main.c: 38:  writechar('b');
   457  07F5  3062               	movlw	98
   458  07F6  120A  118A  27BE  120A  118A  	fcall	_writechar
   459  07FB                     l19:	
   460                           ;main.c: 39:     while (1) {
   461                           
   462                           
   463                           ;main.c: 45:     }
   464  07FB  2FFB               	goto	l19
   465  07FC                     __end_of_main:	
   466                           
   467                           	psect	text1
   468  07BE                     __ptext1:	
   469 ;; *************** function _writechar *****************
   470 ;; Defined at:
   471 ;;		line 17 in file "lcd_driver.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;  character       1    wreg     unsigned char 
   474 ;; Auto vars:     Size  Location     Type
   475 ;;  character       1    5[COMMON] unsigned char 
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, status,2, status,0, pclath, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         1       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0
   488 ;;      Totals:         1       0       0       0       0
   489 ;;Total ram usage:        1 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; Hardware stack levels required when called:    1
   492 ;; This function calls:
   493 ;;		_delay
   494 ;; This function is called by:
   495 ;;		_main
   496 ;;		_writeInt
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           
   501                           ;psect for function _writechar
   502  07BE                     _writechar:	
   503                           
   504                           ;incstack = 0
   505                           ; Regs used in _writechar: [wreg+status,2+status,0+pclath+cstack]
   506                           ;writechar@character stored from wreg
   507  07BE  00F5               	movwf	writechar@character
   508                           
   509                           ;lcd_driver.c: 18:  RA5 = 1;
   510  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   511  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   512  07C1  1685               	bsf	5,5	;volatile
   513                           
   514                           ;lcd_driver.c: 19:  RA4 = 0;
   515  07C2  1205               	bcf	5,4	;volatile
   516                           
   517                           ;lcd_driver.c: 20:  PORTD = character;
   518  07C3  0875               	movf	writechar@character,w
   519  07C4  0088               	movwf	8	;volatile
   520                           
   521                           ;lcd_driver.c: 21:  RA3 = 0;
   522  07C5  1185               	bcf	5,3	;volatile
   523                           
   524                           ;lcd_driver.c: 22:  delay(60);
   525  07C6  303C               	movlw	60
   526  07C7  00F0               	movwf	delay@t
   527  07C8  3000               	movlw	0
   528  07C9  00F1               	movwf	delay@t+1
   529  07CA  120A  118A  27D1   	fcall	_delay
   530                           
   531                           ;lcd_driver.c: 23:  RA3 = 1;
   532  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   533  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   534  07CF  1585               	bsf	5,3	;volatile
   535  07D0  0008               	return
   536  07D1                     __end_of_writechar:	
   537                           
   538                           	psect	text2
   539  079A                     __ptext2:	
   540 ;; *************** function _lcd_init *****************
   541 ;; Defined at:
   542 ;;		line 59 in file "lcd_driver.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;		None
   545 ;; Auto vars:     Size  Location     Type
   546 ;;		None
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, status,2, status,0, pclath, cstack
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   556 ;;      Params:         0       0       0       0       0
   557 ;;      Locals:         0       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0
   559 ;;      Totals:         0       0       0       0       0
   560 ;;Total ram usage:        0 bytes
   561 ;; Hardware stack levels used:    1
   562 ;; Hardware stack levels required when called:    2
   563 ;; This function calls:
   564 ;;		_writecmd
   565 ;; This function is called by:
   566 ;;		_main
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _lcd_init
   572  079A                     _lcd_init:	
   573                           
   574                           ;lcd_driver.c: 60:  writecmd(0x0F);
   575                           
   576                           ;incstack = 0
   577                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   578  079A  300F               	movlw	15
   579  079B  120A  118A  27AB  120A  118A  	fcall	_writecmd
   580                           
   581                           ;lcd_driver.c: 61:  writecmd(0x38);
   582  07A0  3038               	movlw	56
   583  07A1  120A  118A  27AB  120A  118A  	fcall	_writecmd
   584                           
   585                           ;lcd_driver.c: 62:  writecmd(0x01);
   586  07A6  3001               	movlw	1
   587  07A7  120A  118A  27AB   	fcall	_writecmd
   588  07AA  0008               	return
   589  07AB                     __end_of_lcd_init:	
   590                           
   591                           	psect	text3
   592  07AB                     __ptext3:	
   593 ;; *************** function _writecmd *****************
   594 ;; Defined at:
   595 ;;		line 8 in file "lcd_driver.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;  command         1    wreg     unsigned char 
   598 ;; Auto vars:     Size  Location     Type
   599 ;;  command         1    5[COMMON] unsigned char 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0, pclath, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   609 ;;      Params:         0       0       0       0       0
   610 ;;      Locals:         1       0       0       0       0
   611 ;;      Temps:          0       0       0       0       0
   612 ;;      Totals:         1       0       0       0       0
   613 ;;Total ram usage:        1 bytes
   614 ;; Hardware stack levels used:    1
   615 ;; Hardware stack levels required when called:    1
   616 ;; This function calls:
   617 ;;		_delay
   618 ;; This function is called by:
   619 ;;		_lcd_init
   620 ;;		_setCursorPos
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           
   625                           ;psect for function _writecmd
   626  07AB                     _writecmd:	
   627                           
   628                           ;incstack = 0
   629                           ; Regs used in _writecmd: [wreg+status,2+status,0+pclath+cstack]
   630                           ;writecmd@command stored from wreg
   631  07AB  00F5               	movwf	writecmd@command
   632                           
   633                           ;lcd_driver.c: 9:  RA5 = 0;
   634  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   635  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   636  07AE  1285               	bcf	5,5	;volatile
   637                           
   638                           ;lcd_driver.c: 10:  RA4 = 0;
   639  07AF  1205               	bcf	5,4	;volatile
   640                           
   641                           ;lcd_driver.c: 11:  PORTD = command;
   642  07B0  0875               	movf	writecmd@command,w
   643  07B1  0088               	movwf	8	;volatile
   644                           
   645                           ;lcd_driver.c: 12:  RA3 = 0;
   646  07B2  1185               	bcf	5,3	;volatile
   647                           
   648                           ;lcd_driver.c: 13:  delay(60);
   649  07B3  303C               	movlw	60
   650  07B4  00F0               	movwf	delay@t
   651  07B5  3000               	movlw	0
   652  07B6  00F1               	movwf	delay@t+1
   653  07B7  120A  118A  27D1   	fcall	_delay
   654                           
   655                           ;lcd_driver.c: 14:  RA3 = 1;
   656  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   657  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   658  07BC  1585               	bsf	5,3	;volatile
   659  07BD  0008               	return
   660  07BE                     __end_of_writecmd:	
   661                           
   662                           	psect	text4
   663  07D1                     __ptext4:	
   664 ;; *************** function _delay *****************
   665 ;; Defined at:
   666 ;;		line 3 in file "Utils.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;  t               2    0[COMMON] int 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  i               2    3[COMMON] int 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, status,2
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   680 ;;      Params:         2       0       0       0       0
   681 ;;      Locals:         2       0       0       0       0
   682 ;;      Temps:          1       0       0       0       0
   683 ;;      Totals:         5       0       0       0       0
   684 ;;Total ram usage:        5 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; This function calls:
   687 ;;		Nothing
   688 ;; This function is called by:
   689 ;;		_writecmd
   690 ;;		_writechar
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           
   695                           ;psect for function _delay
   696  07D1                     _delay:	
   697                           
   698                           ;Utils.c: 4:  for (int i = 0; i < t; i++);
   699                           
   700                           ;incstack = 0
   701                           ; Regs used in _delay: [wreg+status,2]
   702  07D1  01F3               	clrf	delay@i
   703  07D2  01F4               	clrf	delay@i+1
   704  07D3                     l65:	
   705  07D3  0874               	movf	delay@i+1,w
   706  07D4  3A80               	xorlw	128
   707  07D5  00F2               	movwf	??_delay
   708  07D6  0871               	movf	delay@t+1,w
   709  07D7  3A80               	xorlw	128
   710  07D8  0272               	subwf	??_delay,w
   711  07D9  1D03               	skipz
   712  07DA  2FDD               	goto	u65
   713  07DB  0870               	movf	delay@t,w
   714  07DC  0273               	subwf	delay@i,w
   715  07DD                     u65:	
   716  07DD  1803               	btfsc	3,0
   717  07DE  0008               	return
   718  07DF  3001               	movlw	1
   719  07E0  07F3               	addwf	delay@i,f
   720  07E1  1803               	skipnc
   721  07E2  0AF4               	incf	delay@i+1,f
   722  07E3  3000               	movlw	0
   723  07E4  07F4               	addwf	delay@i+1,f
   724  07E5  2FD3               	goto	l65
   725  07E6                     __end_of_delay:	
   726  007E                     btemp	set	126	;btemp
   727  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    8
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_writechar
    _writechar->_delay
    _lcd_init->_writecmd
    _writecmd->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     440
                           _lcd_init
                          _writechar
 ---------------------------------------------------------------------------------
 (1) _writechar                                            1     1      0     220
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     220
                           _writecmd
 ---------------------------------------------------------------------------------
 (2) _writecmd                                             1     1      0     220
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2     198
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _writecmd
       _delay
   _writechar
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Nov 15 14:11:43 2019

                      pc 0002                       l19 07FB                       l65 07D3  
                     u65 07DD                       fsr 0004                      _RA2 002A  
                    _RA3 002B                      _RA4 002C                      _RA5 002D  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     _main 07E6  
                   btemp 007E                     start 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PORTD 0008                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088            __CFG_PWRTE$ON 0000  
                  _delay 07D1           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0076                   ?_delay 0070  
                 _ADCON1 009F         __end_of_lcd_init 07AB          writecmd@command 0075  
                 delay@i 0073                   delay@t 0070         __end_of_writecmd 07BE  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_delay 07E6  
                ??_delay 0072               __pmaintext 07E6                ?_lcd_init 0070  
             __stringtab 0003       __size_of_writechar 0013                  __ptext1 07BE  
                __ptext2 079A                  __ptext3 07AB                  __ptext4 07D1  
              ?_writecmd 0070               ??_lcd_init 0076     end_of_initialization 07FC  
             ??_writecmd 0075        __end_of_writechar 07D1      start_initialization 07FC  
              ___latbits 0002        __size_of_lcd_init 0011          setCursorPos@ln1 000F  
        setCursorPos@ln2 000D          setCursorPos@ln3 000B          setCursorPos@ln4 0009  
              __pstrings 0003       writechar@character 0075        __size_of_writecmd 0013  
         __size_of_delay 0015              __stringbase 0008                _writechar 07BE  
__end_ofsetCursorPos@ln1 0011  __end_ofsetCursorPos@ln2 000F  __end_ofsetCursorPos@ln3 000D  
__end_ofsetCursorPos@ln4 000B       __end_of__stringtab 0009               ?_writechar 0070  
               _lcd_init 079A            __size_of_main 0016                 _writecmd 07AB  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
            ??_writechar 0075  
