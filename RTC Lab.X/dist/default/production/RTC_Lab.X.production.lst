

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 16 15:38:11 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.10
    22                           ; Generated 31/07/2019 GMT
    23                           ; 
    24                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175                           
   176                           	psect	idataCOMMON
   177  0608                     __pidataCOMMON:	
   178                           
   179                           ;initializer for _time_rx
   180  0608  3430               	retlw	48
   181                           
   182                           	psect	strings
   183  0003                     __pstrings:	
   184  0003                     stringtab:	
   185  0003                     __stringtab:	
   186  0003                     stringcode:	
   187                           ;	String table - string pointers are 1 byte each
   188                           
   189  0003                     stringdir:	
   190  0003  3000               	movlw	high stringdir
   191  0004  008A               	movwf	10
   192  0005  0804               	movf	4,w
   193  0006  0A84               	incf	4,f
   194  0007  0782               	addwf	2,f
   195  0008                     __stringbase:	
   196  0008  3400               	retlw	0
   197  0009                     __end_of__stringtab:	
   198  0009                     _table2:	
   199  0009  34C0               	retlw	192
   200  000A  34F9               	retlw	249
   201  000B  34A4               	retlw	164
   202  000C  34B0               	retlw	176
   203  000D  3499               	retlw	153
   204  000E  3492               	retlw	146
   205  000F  3482               	retlw	130
   206  0010  34F8               	retlw	248
   207  0011  3480               	retlw	128
   208  0012  3490               	retlw	144
   209  0013                     __end_of_table2:	
   210  0013                     _defaults:	
   211  0013  3400               	retlw	0
   212  0014  3437               	retlw	55
   213  0015  3413               	retlw	19
   214  0016  3408               	retlw	8
   215  0017  3403               	retlw	3
   216  0018  3406               	retlw	6
   217  0019  3419               	retlw	25
   218  001A  3400               	retlw	0
   219  001B                     __end_of_defaults:	
   220  001B                     _CTRL:	
   221  001B  348E               	retlw	142
   222  001C                     __end_of_CTRL:	
   223  001C                     _YEAR:	
   224  001C  348C               	retlw	140
   225  001D                     __end_of_YEAR:	
   226  001D                     _DAY:	
   227  001D  348A               	retlw	138
   228  001E                     __end_of_DAY:	
   229  001E                     _MONTH:	
   230  001E  3488               	retlw	136
   231  001F                     __end_of_MONTH:	
   232  001F                     _DATE:	
   233  001F  3486               	retlw	134
   234  0020                     __end_of_DATE:	
   235  0020                     _HOUR:	
   236  0020  3484               	retlw	132
   237  0021                     __end_of_HOUR:	
   238  0021                     _MIN:	
   239  0021  3482               	retlw	130
   240  0022                     __end_of_MIN:	
   241  0022                     _SEC:	
   242  0022  3480               	retlw	128
   243  0023                     __end_of_SEC:	
   244  0008                     _PORTD	set	8
   245  0005                     _PORTA	set	5
   246  0031                     _RB1	set	49
   247  0034                     _RB4	set	52
   248  0035                     _RB5	set	53
   249  0030                     _RB0	set	48
   250  0081                     _OPTION_REG	set	129
   251  0086                     _TRISB	set	134
   252  009F                     _ADCON1	set	159
   253  0088                     _TRISD	set	136
   254  0085                     _TRISA	set	133
   255  0434                     _TRISB4	set	1076
   256                           
   257                           ; #config settings
   258  0000                     
   259                           	psect	cinit
   260  07EF                     start_initialization:	
   261  07EF                     __initialization:	
   262                           
   263                           ; Initialize objects allocated to COMMON
   264  07EF  120A  118A  2608  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   265  07F4  00F8               	movwf	__pdataCOMMON& (0+127)
   266                           
   267                           ; Clear objects allocated to BANK0
   268  07F5  01A0               	clrf	__pbssBANK0& (0+127)
   269  07F6  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   270  07F7  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   271  07F8  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   272  07F9  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   273  07FA  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   274  07FB  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   275  07FC                     end_of_initialization:	
   276                           ;End of C runtime variable initialization code
   277                           
   278  07FC                     __end_of__initialization:	
   279  07FC  0183               	clrf	3
   280  07FD  120A  118A  2E44   	ljmp	_main	;jump to C main() function
   281                           
   282                           	psect	dataCOMMON
   283  0078                     __pdataCOMMON:	
   284  0078                     _time_rx:	
   285  0078                     	ds	1
   286                           
   287                           	psect	bssBANK0
   288  0020                     __pbssBANK0:	
   289  0020                     _table1:	
   290  0020                     	ds	7
   291                           
   292                           	psect	cstackCOMMON
   293  0070                     __pcstackCOMMON:	
   294  0070                     ?_port_init:	
   295  0070                     ??_port_init:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_rtc_init:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_set_time:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_get_time:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_display_time:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_write_byte:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ??_write_byte:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_read_byte:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ??_read_byte:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_main:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_delay:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ??_delay:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     delay@i:	
   332                           ; 1 bytes @ 0x0
   333                           
   334                           
   335                           ; 2 bytes @ 0x0
   336  0070                     	ds	2
   337  0072                     ??_display_time:	
   338  0072                     write_byte@j:	
   339                           ; 1 bytes @ 0x2
   340                           
   341  0072                     read_byte@j:	
   342                           ; 2 bytes @ 0x2
   343                           
   344                           
   345                           ; 2 bytes @ 0x2
   346  0072                     	ds	2
   347  0074                     write_byte@time_tx:	
   348  0074                     display_time@i:	
   349                           ; 1 bytes @ 0x4
   350                           
   351                           
   352                           ; 2 bytes @ 0x4
   353  0074                     	ds	1
   354  0075                     ??_rtc_init:	
   355  0075                     ??_set_time:	
   356                           ; 1 bytes @ 0x5
   357                           
   358  0075                     ??_get_time:	
   359                           ; 1 bytes @ 0x5
   360                           
   361  0075                     set_time@i:	
   362                           ; 1 bytes @ 0x5
   363                           
   364                           
   365                           ; 2 bytes @ 0x5
   366  0075                     	ds	1
   367  0076                     get_time@i:	
   368                           
   369                           ; 2 bytes @ 0x6
   370  0076                     	ds	2
   371  0078                     ??_main:	
   372                           
   373                           	psect	maintext
   374  0644                     __pmaintext:	
   375                           ; 1 bytes @ 0x8
   376 ;;
   377 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   378 ;;
   379 ;; *************** function _main *****************
   380 ;; Defined at:
   381 ;;		line 47 in file "newmain.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   390 ;; Tracked objects:
   391 ;;		On entry : B00/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   395 ;;      Params:         0       0       0       0       0
   396 ;;      Locals:         0       0       0       0       0
   397 ;;      Temps:          0       0       0       0       0
   398 ;;      Totals:         0       0       0       0       0
   399 ;;Total ram usage:        0 bytes
   400 ;; Hardware stack levels required when called:    2
   401 ;; This function calls:
   402 ;;		_display_time
   403 ;;		_get_time
   404 ;;		_port_init
   405 ;;		_rtc_init
   406 ;;		_set_time
   407 ;; This function is called by:
   408 ;;		Startup code after reset
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           
   413                           ;psect for function _main
   414  0644                     _main:	
   415  0644                     l1027:	
   416                           ;incstack = 0
   417                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   418                           
   419                           
   420                           ;newmain.c: 48:     PORTA = 0XFF;
   421  0644  120A  118A  2609  120A  118A  	fcall	_port_init
   422  0649                     l1029:	
   423                           
   424                           ;newmain.c: 49:     PORTD = 0XFF;
   425  0649  120A  118A  2619  120A  118A  	fcall	_rtc_init
   426  064E                     l1031:	
   427                           
   428                           ;newmain.c: 50: }
   429  064E  120A  118A  26BA  120A  118A  	fcall	_set_time
   430  0653                     l1033:	
   431                           
   432                           ;newmain.c: 52: 
   433  0653  120A  118A  268C  120A  118A  	fcall	_get_time
   434  0658                     l1035:	
   435                           
   436                           ;newmain.c: 53: 
   437  0658  120A  118A  2719  120A  118A  	fcall	_display_time
   438  065D  2E53               	goto	l1033
   439  065E  120A  118A  2800   	ljmp	start
   440  0661                     __end_of_main:	
   441                           
   442                           	psect	text1
   443  06BA                     __ptext1:	
   444 ;; *************** function _set_time *****************
   445 ;; Defined at:
   446 ;;		line 82 in file "newmain.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;  i               2    5[COMMON] int 
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   460 ;;      Params:         0       0       0       0       0
   461 ;;      Locals:         2       0       0       0       0
   462 ;;      Temps:          0       0       0       0       0
   463 ;;      Totals:         2       0       0       0       0
   464 ;;Total ram usage:        2 bytes
   465 ;; Hardware stack levels used:    1
   466 ;; Hardware stack levels required when called:    1
   467 ;; This function calls:
   468 ;;		_write_byte
   469 ;; This function is called by:
   470 ;;		_main
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           
   475                           ;psect for function _set_time
   476  06BA                     _set_time:	
   477  06BA                     l937:	
   478                           ;incstack = 0
   479                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   480                           
   481                           
   482                           ;newmain.c: 83:     RB5 = 0;;newmain.c: 84: }
   483  06BA  1283               	bcf	3,5	;RP0=0, select bank0
   484  06BB  1303               	bcf	3,6	;RP1=0, select bank0
   485  06BC  1686               	bsf	6,5	;volatile
   486  06BD                     l939:	
   487                           
   488                           ;newmain.c: 85: 
   489  06BD  30BE               	movlw	190
   490  06BE  120A  118A  2661  120A  118A  	fcall	_write_byte
   491  06C3                     l941:	
   492                           
   493                           ;newmain.c: 86: 
   494  06C3  01F5               	clrf	set_time@i
   495  06C4  01F6               	clrf	set_time@i+1
   496  06C5                     l947:	
   497                           
   498                           ;newmain.c: 87: ;newmain.c: 88: void get_time() {
   499  06C5  0875               	movf	set_time@i,w
   500  06C6  3E0B               	addlw	low ((_defaults-__stringbase)| (0+32768))
   501  06C7  0084               	movwf	4
   502  06C8  120A  118A  2003  120A  118A  	fcall	stringdir
   503  06CD  120A  118A  2661  120A  118A  	fcall	_write_byte
   504  06D2                     l949:	
   505                           
   506                           ;newmain.c: 89:     int i;
   507  06D2  3001               	movlw	1
   508  06D3  07F5               	addwf	set_time@i,f
   509  06D4  1803               	skipnc
   510  06D5  0AF6               	incf	set_time@i+1,f
   511  06D6  3000               	movlw	0
   512  06D7  07F6               	addwf	set_time@i+1,f
   513  06D8                     l951:	
   514  06D8  0876               	movf	set_time@i+1,w
   515  06D9  3A80               	xorlw	128
   516  06DA  00FF               	movwf	btemp+1
   517  06DB  3080               	movlw	128
   518  06DC  027F               	subwf	btemp+1,w
   519  06DD  1D03               	skipz
   520  06DE  2EE1               	goto	u145
   521  06DF  3008               	movlw	8
   522  06E0  0275               	subwf	set_time@i,w
   523  06E1                     u145:	
   524  06E1  1C03               	skipc
   525  06E2  2EE4               	goto	u141
   526  06E3  2EE5               	goto	u140
   527  06E4                     u141:	
   528  06E4  2EC5               	goto	l947
   529  06E5                     u140:	
   530  06E5                     l80:	
   531                           
   532                           ;newmain.c: 90:     RB5 = 1;
   533  06E5  1283               	bcf	3,5	;RP0=0, select bank0
   534  06E6  1303               	bcf	3,6	;RP1=0, select bank0
   535  06E7  1286               	bcf	6,5	;volatile
   536  06E8                     l81:	
   537  06E8  0008               	return
   538  06E9                     __end_of_set_time:	
   539                           
   540                           	psect	text2
   541  0619                     __ptext2:	
   542 ;; *************** function _rtc_init *****************
   543 ;; Defined at:
   544 ;;		line 71 in file "newmain.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   558 ;;      Params:         0       0       0       0       0
   559 ;;      Locals:         0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0
   561 ;;      Totals:         0       0       0       0       0
   562 ;;Total ram usage:        0 bytes
   563 ;; Hardware stack levels used:    1
   564 ;; Hardware stack levels required when called:    1
   565 ;; This function calls:
   566 ;;		_write_byte
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           
   573                           ;psect for function _rtc_init
   574  0619                     _rtc_init:	
   575  0619                     l931:	
   576                           ;incstack = 0
   577                           ; Regs used in _rtc_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   578                           
   579                           
   580                           ;newmain.c: 72:     }
   581  0619  1283               	bcf	3,5	;RP0=0, select bank0
   582  061A  1303               	bcf	3,6	;RP1=0, select bank0
   583  061B  1006               	bcf	6,0	;volatile
   584                           
   585                           ;newmain.c: 73:     RB5 = 0;
   586  061C  1286               	bcf	6,5	;volatile
   587                           
   588                           ;newmain.c: 74: }
   589  061D  1686               	bsf	6,5	;volatile
   590  061E                     l933:	
   591                           
   592                           ;newmain.c: 75: 
   593  061E  308E               	movlw	142
   594  061F  120A  118A  2661  120A  118A  	fcall	_write_byte
   595                           
   596                           ;newmain.c: 76: 
   597  0624  3000               	movlw	0
   598  0625  120A  118A  2661  120A  118A  	fcall	_write_byte
   599  062A                     l935:	
   600                           
   601                           ;newmain.c: 77: 
   602  062A  1283               	bcf	3,5	;RP0=0, select bank0
   603  062B  1303               	bcf	3,6	;RP1=0, select bank0
   604  062C  1286               	bcf	6,5	;volatile
   605  062D                     l76:	
   606  062D  0008               	return
   607  062E                     __end_of_rtc_init:	
   608                           
   609                           	psect	text3
   610  0609                     __ptext3:	
   611 ;; *************** function _port_init *****************
   612 ;; Defined at:
   613 ;;		line 59 in file "newmain.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, status,2
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   627 ;;      Params:         0       0       0       0       0
   628 ;;      Locals:         0       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0
   630 ;;      Totals:         0       0       0       0       0
   631 ;;Total ram usage:        0 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; This function calls:
   634 ;;		Nothing
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _port_init
   642  0609                     _port_init:	
   643  0609                     l753:	
   644                           ;incstack = 0
   645                           ; Regs used in _port_init: [wreg+status,2]
   646                           
   647                           
   648                           ;newmain.c: 60:     RB5 = 0;
   649  0609  1683               	bsf	3,5	;RP0=1, select bank1
   650  060A  1303               	bcf	3,6	;RP1=0, select bank1
   651  060B  0185               	clrf	5	;volatile
   652                           
   653                           ;newmain.c: 61: }
   654  060C  0188               	clrf	8	;volatile
   655  060D                     l755:	
   656                           
   657                           ;newmain.c: 62: 
   658  060D  3006               	movlw	6
   659  060E  009F               	movwf	31	;volatile
   660  060F                     l757:	
   661                           
   662                           ;newmain.c: 63: 
   663  060F  3002               	movlw	2
   664  0610  0086               	movwf	6	;volatile
   665                           
   666                           ;newmain.c: 64: 
   667  0611  0181               	clrf	1	;volatile
   668  0612                     l759:	
   669                           
   670                           ;newmain.c: 65: void set_time() {
   671  0612  30FF               	movlw	255
   672  0613  1283               	bcf	3,5	;RP0=0, select bank0
   673  0614  1303               	bcf	3,6	;RP1=0, select bank0
   674  0615  0085               	movwf	5	;volatile
   675  0616                     l761:	
   676                           
   677                           ;newmain.c: 66:     int i;
   678  0616  30FF               	movlw	255
   679  0617  0088               	movwf	8	;volatile
   680  0618                     l73:	
   681  0618  0008               	return
   682  0619                     __end_of_port_init:	
   683                           
   684                           	psect	text4
   685  068C                     __ptext4:	
   686 ;; *************** function _get_time *****************
   687 ;; Defined at:
   688 ;;		line 105 in file "newmain.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  i               2    6[COMMON] int 
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         0       0       0       0       0
   703 ;;      Locals:         2       0       0       0       0
   704 ;;      Temps:          1       0       0       0       0
   705 ;;      Totals:         3       0       0       0       0
   706 ;;Total ram usage:        3 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; Hardware stack levels required when called:    1
   709 ;; This function calls:
   710 ;;		_read_byte
   711 ;;		_write_byte
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           
   718                           ;psect for function _get_time
   719  068C                     _get_time:	
   720  068C                     l953:	
   721                           ;incstack = 0
   722                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   723                           
   724                           
   725                           ;newmain.c: 106:     RB5 = 0;;newmain.c: 107:     return t;
   726  068C  1283               	bcf	3,5	;RP0=0, select bank0
   727  068D  1303               	bcf	3,6	;RP1=0, select bank0
   728  068E  1686               	bsf	6,5	;volatile
   729  068F                     l955:	
   730                           
   731                           ;newmain.c: 108: }
   732  068F  30BF               	movlw	191
   733  0690  120A  118A  2661  120A  118A  	fcall	_write_byte
   734  0695                     l957:	
   735                           
   736                           ;newmain.c: 109: 
   737  0695  01F6               	clrf	get_time@i
   738  0696  01F7               	clrf	get_time@i+1
   739  0697                     l963:	
   740                           
   741                           ;newmain.c: 110: ;newmain.c: 111: 
   742  0697  120A  118A  26E9  120A  118A  	fcall	_read_byte
   743  069C  00F5               	movwf	??_get_time
   744  069D  0876               	movf	get_time@i,w
   745  069E  3E20               	addlw	(low (_table1| 0))& (0+255)
   746  069F  0084               	movwf	4
   747  06A0  0875               	movf	??_get_time,w
   748  06A1  1383               	bcf	3,7	;select IRP bank0
   749  06A2  0080               	movwf	0
   750  06A3                     l965:	
   751                           
   752                           ;newmain.c: 112: void write_byte(unsigned char time_tx) {
   753  06A3  3001               	movlw	1
   754  06A4  07F6               	addwf	get_time@i,f
   755  06A5  1803               	skipnc
   756  06A6  0AF7               	incf	get_time@i+1,f
   757  06A7  3000               	movlw	0
   758  06A8  07F7               	addwf	get_time@i+1,f
   759  06A9                     l967:	
   760  06A9  0877               	movf	get_time@i+1,w
   761  06AA  3A80               	xorlw	128
   762  06AB  00FF               	movwf	btemp+1
   763  06AC  3080               	movlw	128
   764  06AD  027F               	subwf	btemp+1,w
   765  06AE  1D03               	skipz
   766  06AF  2EB2               	goto	u155
   767  06B0  3007               	movlw	7
   768  06B1  0276               	subwf	get_time@i,w
   769  06B2                     u155:	
   770  06B2  1C03               	skipc
   771  06B3  2EB5               	goto	u151
   772  06B4  2EB6               	goto	u150
   773  06B5                     u151:	
   774  06B5  2E97               	goto	l963
   775  06B6                     u150:	
   776  06B6                     l88:	
   777                           
   778                           ;newmain.c: 113:     int j;
   779  06B6  1283               	bcf	3,5	;RP0=0, select bank0
   780  06B7  1303               	bcf	3,6	;RP1=0, select bank0
   781  06B8  1286               	bcf	6,5	;volatile
   782  06B9                     l89:	
   783  06B9  0008               	return
   784  06BA                     __end_of_get_time:	
   785                           
   786                           	psect	text5
   787  0661                     __ptext5:	
   788 ;; *************** function _write_byte *****************
   789 ;; Defined at:
   790 ;;		line 129 in file "newmain.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  time_tx         1    wreg     unsigned char 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  time_tx         1    4[COMMON] unsigned char 
   795 ;;  j               2    2[COMMON] int 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0, btemp+1
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   805 ;;      Params:         0       0       0       0       0
   806 ;;      Locals:         3       0       0       0       0
   807 ;;      Temps:          2       0       0       0       0
   808 ;;      Totals:         5       0       0       0       0
   809 ;;Total ram usage:        5 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; This function calls:
   812 ;;		Nothing
   813 ;; This function is called by:
   814 ;;		_rtc_init
   815 ;;		_set_time
   816 ;;		_get_time
   817 ;;		_set_time_bit
   818 ;;		_get_time_bit
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           
   823                           ;psect for function _write_byte
   824  0661                     _write_byte:	
   825                           
   826                           ;incstack = 0
   827                           ; Regs used in _write_byte: [wreg+status,2+status,0+btemp+1]
   828                           ;write_byte@time_tx stored from wreg
   829  0661  00F4               	movwf	write_byte@time_tx
   830  0662                     l883:	
   831                           
   832                           ;newmain.c: 130: unsigned char read_byte() {;newmain.c: 131:     int j;
   833  0662  01F2               	clrf	write_byte@j
   834  0663  01F3               	clrf	write_byte@j+1
   835  0664                     l95:	
   836                           
   837                           ;newmain.c: 132:     TRISB4 = 1;;newmain.c: 133:     for (j = 0; j < 8; j++) {
   838  0664  1283               	bcf	3,5	;RP0=0, select bank0
   839  0665  1303               	bcf	3,6	;RP1=0, select bank0
   840  0666  1206               	bcf	6,4	;volatile
   841                           
   842                           ;newmain.c: 134:         RB0 = 0;
   843  0667  1006               	bcf	6,0	;volatile
   844                           
   845                           ;newmain.c: 135:         time_rx = time_rx >> 1;
   846  0668  1C74               	btfss	write_byte@time_tx,0
   847  0669  2E6B               	goto	u91
   848  066A  2E6C               	goto	u90
   849  066B                     u91:	
   850  066B  2E6D               	goto	l891
   851  066C                     u90:	
   852  066C                     l889:	
   853                           
   854                           ;newmain.c: 136:         if (RB4) {;newmain.c: 137:             time_rx |= 0x80;
   855  066C  1606               	bsf	6,4	;volatile
   856  066D                     l891:	
   857                           
   858                           ;newmain.c: 139:         RB0 = 1;
   859  066D  0874               	movf	write_byte@time_tx,w
   860  066E  00F0               	movwf	??_write_byte
   861  066F  1003               	clrc
   862  0670  0C70               	rrf	??_write_byte,w
   863  0671  00F1               	movwf	??_write_byte+1
   864  0672  0871               	movf	??_write_byte+1,w
   865  0673  00F4               	movwf	write_byte@time_tx
   866  0674                     l893:	
   867                           
   868                           ;newmain.c: 140:     }
   869  0674  1406               	bsf	6,0	;volatile
   870  0675                     l895:	
   871                           
   872                           ;newmain.c: 141:     TRISB4 = 0;
   873  0675  3001               	movlw	1
   874  0676  07F2               	addwf	write_byte@j,f
   875  0677  1803               	skipnc
   876  0678  0AF3               	incf	write_byte@j+1,f
   877  0679  3000               	movlw	0
   878  067A  07F3               	addwf	write_byte@j+1,f
   879  067B                     l897:	
   880  067B  0873               	movf	write_byte@j+1,w
   881  067C  3A80               	xorlw	128
   882  067D  00FF               	movwf	btemp+1
   883  067E  3080               	movlw	128
   884  067F  027F               	subwf	btemp+1,w
   885  0680  1D03               	skipz
   886  0681  2E84               	goto	u105
   887  0682  3008               	movlw	8
   888  0683  0272               	subwf	write_byte@j,w
   889  0684                     u105:	
   890  0684  1C03               	skipc
   891  0685  2E87               	goto	u101
   892  0686  2E88               	goto	u100
   893  0687                     u101:	
   894  0687  2E64               	goto	l95
   895  0688                     u100:	
   896  0688                     l96:	
   897                           
   898                           ;newmain.c: 142:     RB0 = 0;
   899  0688  1283               	bcf	3,5	;RP0=0, select bank0
   900  0689  1303               	bcf	3,6	;RP1=0, select bank0
   901  068A  1006               	bcf	6,0	;volatile
   902  068B                     l98:	
   903  068B  0008               	return
   904  068C                     __end_of_write_byte:	
   905                           
   906                           	psect	text6
   907  06E9                     __ptext6:	
   908 ;; *************** function _read_byte *****************
   909 ;; Defined at:
   910 ;;		line 147 in file "newmain.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  j               2    2[COMMON] int 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      unsigned char 
   917 ;; Registers used:
   918 ;;		wreg, status,2, status,0, btemp+1
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   924 ;;      Params:         0       0       0       0       0
   925 ;;      Locals:         2       0       0       0       0
   926 ;;      Temps:          2       0       0       0       0
   927 ;;      Totals:         4       0       0       0       0
   928 ;;Total ram usage:        4 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_get_time
   934 ;;		_get_time_bit
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           
   939                           ;psect for function _read_byte
   940  06E9                     _read_byte:	
   941  06E9                     l899:	
   942                           ;incstack = 0
   943                           ; Regs used in _read_byte: [wreg+status,2+status,0+btemp+1]
   944                           
   945                           
   946                           ;newmain.c: 148:     for (int i = 0; i < 60; ++i);;newmain.c: 149: }
   947  06E9  1683               	bsf	3,5	;RP0=1, select bank1
   948  06EA  1303               	bcf	3,6	;RP1=0, select bank1
   949  06EB  1606               	bsf	6,4	;volatile
   950  06EC                     l901:	
   951                           
   952                           ;newmain.c: 150: void display_time() {
   953  06EC  01F2               	clrf	read_byte@j
   954  06ED  01F3               	clrf	read_byte@j+1
   955  06EE                     l101:	
   956                           
   957                           ;newmain.c: 151:     int i;
   958  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   959  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   960  06F0  1006               	bcf	6,0	;volatile
   961  06F1                     l907:	
   962                           
   963                           ;newmain.c: 152:     if (RB1 == 1)
   964  06F1  0878               	movf	_time_rx,w
   965  06F2  00F0               	movwf	??_read_byte
   966  06F3  1003               	clrc
   967  06F4  0C70               	rrf	??_read_byte,w
   968  06F5  00F1               	movwf	??_read_byte+1
   969  06F6  0871               	movf	??_read_byte+1,w
   970  06F7  00F8               	movwf	_time_rx
   971  06F8                     l909:	
   972                           
   973                           ;newmain.c: 153:     {
   974  06F8  1E06               	btfss	6,4	;volatile
   975  06F9  2EFB               	goto	u111
   976  06FA  2EFC               	goto	u110
   977  06FB                     u111:	
   978  06FB  2EFD               	goto	l103
   979  06FC                     u110:	
   980  06FC                     l911:	
   981                           
   982                           ;newmain.c: 154:         table1[0] = table1[3];
   983  06FC  17F8               	bsf	_time_rx,7
   984  06FD                     l103:	
   985                           ;newmain.c: 155:         table1[1] = table1[4];
   986                           
   987                           
   988                           ;newmain.c: 156:         table1[2] = table1[6];
   989  06FD  1406               	bsf	6,0	;volatile
   990  06FE                     l913:	
   991                           
   992                           ;newmain.c: 157:     }
   993  06FE  3001               	movlw	1
   994  06FF  07F2               	addwf	read_byte@j,f
   995  0700  1803               	skipnc
   996  0701  0AF3               	incf	read_byte@j+1,f
   997  0702  3000               	movlw	0
   998  0703  07F3               	addwf	read_byte@j+1,f
   999  0704                     l915:	
  1000  0704  0873               	movf	read_byte@j+1,w
  1001  0705  3A80               	xorlw	128
  1002  0706  00FF               	movwf	btemp+1
  1003  0707  3080               	movlw	128
  1004  0708  027F               	subwf	btemp+1,w
  1005  0709  1D03               	skipz
  1006  070A  2F0D               	goto	u125
  1007  070B  3008               	movlw	8
  1008  070C  0272               	subwf	read_byte@j,w
  1009  070D                     u125:	
  1010  070D  1C03               	skipc
  1011  070E  2F10               	goto	u121
  1012  070F  2F11               	goto	u120
  1013  0710                     u121:	
  1014  0710  2EEE               	goto	l101
  1015  0711                     u120:	
  1016  0711                     l102:	
  1017                           
  1018                           ;newmain.c: 158:     i = table1[0]&0x0f;
  1019  0711  1683               	bsf	3,5	;RP0=1, select bank1
  1020  0712  1303               	bcf	3,6	;RP1=0, select bank1
  1021  0713  1206               	bcf	6,4	;volatile
  1022                           
  1023                           ;newmain.c: 159:     PORTD = table2[i];
  1024  0714  1283               	bcf	3,5	;RP0=0, select bank0
  1025  0715  1303               	bcf	3,6	;RP1=0, select bank0
  1026  0716  1006               	bcf	6,0	;volatile
  1027  0717                     l917:	
  1028                           
  1029                           ;newmain.c: 160:     PORTA = 0x1f;
  1030  0717  0878               	movf	_time_rx,w
  1031  0718                     l104:	
  1032  0718  0008               	return
  1033  0719                     __end_of_read_byte:	
  1034                           
  1035                           	psect	text7
  1036  0719                     __ptext7:	
  1037 ;; *************** function _display_time *****************
  1038 ;; Defined at:
  1039 ;;		line 167 in file "newmain.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  i               2    4[COMMON] int 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1053 ;;      Params:         0       0       0       0       0
  1054 ;;      Locals:         2       0       0       0       0
  1055 ;;      Temps:          2       0       0       0       0
  1056 ;;      Totals:         4       0       0       0       0
  1057 ;;Total ram usage:        4 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; Hardware stack levels required when called:    1
  1060 ;; This function calls:
  1061 ;;		_delay
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           
  1068                           ;psect for function _display_time
  1069  0719                     _display_time:	
  1070  0719                     l969:	
  1071                           ;incstack = 0
  1072                           ; Regs used in _display_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1073                           
  1074                           
  1075                           ;newmain.c: 168:     i = table1[1]&0x0f;;newmain.c: 169:     PORTD = table2[i]&0x7f;
  1076  0719  1283               	bcf	3,5	;RP0=0, select bank0
  1077  071A  1303               	bcf	3,6	;RP1=0, select bank0
  1078  071B  1C86               	btfss	6,1	;volatile
  1079  071C  2F1E               	goto	u161
  1080  071D  2F1F               	goto	u160
  1081  071E                     u161:	
  1082  071E  2F2B               	goto	l973
  1083  071F                     u160:	
  1084  071F                     l971:	
  1085                           
  1086                           ;newmain.c: 170:     PORTA = 0x37;;newmain.c: 171:     delay();
  1087  071F  0823               	movf	_table1+3,w
  1088  0720  00F2               	movwf	??_display_time
  1089  0721  0872               	movf	??_display_time,w
  1090  0722  00A0               	movwf	_table1
  1091                           
  1092                           ;newmain.c: 172:     i = table1[1]&0xf0;
  1093  0723  0824               	movf	_table1+4,w
  1094  0724  00F2               	movwf	??_display_time
  1095  0725  0872               	movf	??_display_time,w
  1096  0726  00A1               	movwf	_table1+1
  1097                           
  1098                           ;newmain.c: 173:     i = i >> 4;
  1099  0727  0826               	movf	_table1+6,w
  1100  0728  00F2               	movwf	??_display_time
  1101  0729  0872               	movf	??_display_time,w
  1102  072A  00A2               	movwf	_table1+2
  1103  072B                     l973:	
  1104                           
  1105                           ;newmain.c: 175:     PORTA = 0x3b;
  1106  072B  0820               	movf	_table1,w
  1107  072C  390F               	andlw	15
  1108  072D  00F2               	movwf	??_display_time
  1109  072E  01F3               	clrf	??_display_time+1
  1110  072F  0872               	movf	??_display_time,w
  1111  0730  00F4               	movwf	display_time@i
  1112  0731  0873               	movf	??_display_time+1,w
  1113  0732  00F5               	movwf	display_time@i+1
  1114  0733                     l975:	
  1115                           
  1116                           ;newmain.c: 176:     delay();
  1117  0733  0874               	movf	display_time@i,w
  1118  0734  3E01               	addlw	low ((_table2-__stringbase)| (0+32768))
  1119  0735  0084               	movwf	4
  1120  0736  120A  118A  2003  120A  118A  	fcall	stringdir
  1121  073B  0088               	movwf	8	;volatile
  1122  073C                     l977:	
  1123                           
  1124                           ;newmain.c: 177: 
  1125  073C  301F               	movlw	31
  1126  073D  0085               	movwf	5	;volatile
  1127  073E                     l979:	
  1128                           
  1129                           ;newmain.c: 178:     i = table1[2]&0x0f;
  1130  073E  120A  118A  262E  120A  118A  	fcall	_delay
  1131  0743                     l981:	
  1132                           
  1133                           ;newmain.c: 179:     PORTD = table2[i]&0x7f;
  1134  0743  1283               	bcf	3,5	;RP0=0, select bank0
  1135  0744  1303               	bcf	3,6	;RP1=0, select bank0
  1136  0745  0820               	movf	_table1,w
  1137  0746  39F0               	andlw	240
  1138  0747  00F2               	movwf	??_display_time
  1139  0748  01F3               	clrf	??_display_time+1
  1140  0749  0872               	movf	??_display_time,w
  1141  074A  00F4               	movwf	display_time@i
  1142  074B  0873               	movf	??_display_time+1,w
  1143  074C  00F5               	movwf	display_time@i+1
  1144  074D                     l983:	
  1145                           
  1146                           ;newmain.c: 180:     PORTA = 0x3d;
  1147  074D  0E74               	swapf	display_time@i,w
  1148  074E  390F               	andlw	15
  1149  074F  00F4               	movwf	display_time@i
  1150  0750  0E75               	swapf	display_time@i+1,w
  1151  0751  39F0               	andlw	240
  1152  0752  04F4               	iorwf	display_time@i,f
  1153  0753  0E75               	swapf	display_time@i+1,w
  1154  0754  390F               	andlw	15
  1155  0755  00F5               	movwf	display_time@i+1
  1156  0756  30F0               	movlw	240
  1157  0757  1DF5               	btfss	display_time@i+1,3
  1158  0758  3000               	movlw	0
  1159  0759  04F5               	iorwf	display_time@i+1,f
  1160  075A                     l985:	
  1161                           
  1162                           ;newmain.c: 181:     delay();
  1163  075A  0874               	movf	display_time@i,w
  1164  075B  3E01               	addlw	low ((_table2-__stringbase)| (0+32768))
  1165  075C  0084               	movwf	4
  1166  075D  120A  118A  2003  120A  118A  	fcall	stringdir
  1167  0762  0088               	movwf	8	;volatile
  1168  0763                     l987:	
  1169                           
  1170                           ;newmain.c: 182:     i = table1[2]&0xf0;
  1171  0763  302F               	movlw	47
  1172  0764  0085               	movwf	5	;volatile
  1173  0765                     l989:	
  1174                           
  1175                           ;newmain.c: 183:     i = i >> 4;
  1176  0765  120A  118A  262E  120A  118A  	fcall	_delay
  1177  076A                     l991:	
  1178                           
  1179                           ;newmain.c: 185:     PORTA = 0x3e;
  1180  076A  1283               	bcf	3,5	;RP0=0, select bank0
  1181  076B  1303               	bcf	3,6	;RP1=0, select bank0
  1182  076C  0821               	movf	_table1+1,w
  1183  076D  390F               	andlw	15
  1184  076E  00F2               	movwf	??_display_time
  1185  076F  01F3               	clrf	??_display_time+1
  1186  0770  0872               	movf	??_display_time,w
  1187  0771  00F4               	movwf	display_time@i
  1188  0772  0873               	movf	??_display_time+1,w
  1189  0773  00F5               	movwf	display_time@i+1
  1190  0774                     l993:	
  1191                           
  1192                           ;newmain.c: 186:     delay();
  1193  0774  0874               	movf	display_time@i,w
  1194  0775  3E01               	addlw	low ((_table2-__stringbase)| (0+32768))
  1195  0776  0084               	movwf	4
  1196  0777  120A  118A  2003  120A  118A  	fcall	stringdir
  1197  077C  397F               	andlw	127
  1198  077D  0088               	movwf	8	;volatile
  1199  077E                     l995:	
  1200                           
  1201                           ;newmain.c: 187: }
  1202  077E  3037               	movlw	55
  1203  077F  0085               	movwf	5	;volatile
  1204  0780                     l997:	
  1205  0780  120A  118A  262E  120A  118A  	fcall	_delay
  1206  0785                     l999:	
  1207  0785  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0786  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0787  0821               	movf	_table1+1,w
  1210  0788  39F0               	andlw	240
  1211  0789  00F2               	movwf	??_display_time
  1212  078A  01F3               	clrf	??_display_time+1
  1213  078B  0872               	movf	??_display_time,w
  1214  078C  00F4               	movwf	display_time@i
  1215  078D  0873               	movf	??_display_time+1,w
  1216  078E  00F5               	movwf	display_time@i+1
  1217  078F                     l1001:	
  1218  078F  0E74               	swapf	display_time@i,w
  1219  0790  390F               	andlw	15
  1220  0791  00F4               	movwf	display_time@i
  1221  0792  0E75               	swapf	display_time@i+1,w
  1222  0793  39F0               	andlw	240
  1223  0794  04F4               	iorwf	display_time@i,f
  1224  0795  0E75               	swapf	display_time@i+1,w
  1225  0796  390F               	andlw	15
  1226  0797  00F5               	movwf	display_time@i+1
  1227  0798  30F0               	movlw	240
  1228  0799  1DF5               	btfss	display_time@i+1,3
  1229  079A  3000               	movlw	0
  1230  079B  04F5               	iorwf	display_time@i+1,f
  1231  079C                     l1003:	
  1232  079C  0874               	movf	display_time@i,w
  1233  079D  3E01               	addlw	low ((_table2-__stringbase)| (0+32768))
  1234  079E  0084               	movwf	4
  1235  079F  120A  118A  2003  120A  118A  	fcall	stringdir
  1236  07A4  0088               	movwf	8	;volatile
  1237  07A5                     l1005:	
  1238  07A5  303B               	movlw	59
  1239  07A6  0085               	movwf	5	;volatile
  1240  07A7                     l1007:	
  1241  07A7  120A  118A  262E  120A  118A  	fcall	_delay
  1242  07AC                     l1009:	
  1243  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  1244  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  1245  07AE  0822               	movf	_table1+2,w
  1246  07AF  390F               	andlw	15
  1247  07B0  00F2               	movwf	??_display_time
  1248  07B1  01F3               	clrf	??_display_time+1
  1249  07B2  0872               	movf	??_display_time,w
  1250  07B3  00F4               	movwf	display_time@i
  1251  07B4  0873               	movf	??_display_time+1,w
  1252  07B5  00F5               	movwf	display_time@i+1
  1253  07B6                     l1011:	
  1254  07B6  0874               	movf	display_time@i,w
  1255  07B7  3E01               	addlw	low ((_table2-__stringbase)| (0+32768))
  1256  07B8  0084               	movwf	4
  1257  07B9  120A  118A  2003  120A  118A  	fcall	stringdir
  1258  07BE  397F               	andlw	127
  1259  07BF  0088               	movwf	8	;volatile
  1260  07C0                     l1013:	
  1261  07C0  303D               	movlw	61
  1262  07C1  0085               	movwf	5	;volatile
  1263  07C2                     l1015:	
  1264  07C2  120A  118A  262E  120A  118A  	fcall	_delay
  1265  07C7                     l1017:	
  1266  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1267  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1268  07C9  0822               	movf	_table1+2,w
  1269  07CA  39F0               	andlw	240
  1270  07CB  00F2               	movwf	??_display_time
  1271  07CC  01F3               	clrf	??_display_time+1
  1272  07CD  0872               	movf	??_display_time,w
  1273  07CE  00F4               	movwf	display_time@i
  1274  07CF  0873               	movf	??_display_time+1,w
  1275  07D0  00F5               	movwf	display_time@i+1
  1276  07D1                     l1019:	
  1277  07D1  0E74               	swapf	display_time@i,w
  1278  07D2  390F               	andlw	15
  1279  07D3  00F4               	movwf	display_time@i
  1280  07D4  0E75               	swapf	display_time@i+1,w
  1281  07D5  39F0               	andlw	240
  1282  07D6  04F4               	iorwf	display_time@i,f
  1283  07D7  0E75               	swapf	display_time@i+1,w
  1284  07D8  390F               	andlw	15
  1285  07D9  00F5               	movwf	display_time@i+1
  1286  07DA  30F0               	movlw	240
  1287  07DB  1DF5               	btfss	display_time@i+1,3
  1288  07DC  3000               	movlw	0
  1289  07DD  04F5               	iorwf	display_time@i+1,f
  1290  07DE                     l1021:	
  1291  07DE  0874               	movf	display_time@i,w
  1292  07DF  3E01               	addlw	low ((_table2-__stringbase)| (0+32768))
  1293  07E0  0084               	movwf	4
  1294  07E1  120A  118A  2003  120A  118A  	fcall	stringdir
  1295  07E6  0088               	movwf	8	;volatile
  1296  07E7                     l1023:	
  1297  07E7  303E               	movlw	62
  1298  07E8  0085               	movwf	5	;volatile
  1299  07E9                     l1025:	
  1300  07E9  120A  118A  262E  120A  118A  	fcall	_delay
  1301  07EE                     l113:	
  1302  07EE  0008               	return
  1303  07EF                     __end_of_display_time:	
  1304                           
  1305                           	psect	text8
  1306  062E                     __ptext8:	
  1307 ;; *************** function _delay *****************
  1308 ;; Defined at:
  1309 ;;		line 164 in file "newmain.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;  i               2    0[COMMON] int 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, btemp+1
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1323 ;;      Params:         0       0       0       0       0
  1324 ;;      Locals:         2       0       0       0       0
  1325 ;;      Temps:          0       0       0       0       0
  1326 ;;      Totals:         2       0       0       0       0
  1327 ;;Total ram usage:        2 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; This function calls:
  1330 ;;		Nothing
  1331 ;; This function is called by:
  1332 ;;		_display_time
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           
  1337                           ;psect for function _delay
  1338  062E                     _delay:	
  1339  062E                     l921:	
  1340                           ;incstack = 0
  1341                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  1342                           
  1343                           
  1344                           ;newmain.c: 165:     PORTA = 0x2f;
  1345  062E  01F0               	clrf	delay@i
  1346  062F  01F1               	clrf	delay@i+1
  1347  0630                     l927:	
  1348  0630  3001               	movlw	1
  1349  0631  07F0               	addwf	delay@i,f
  1350  0632  1803               	skipnc
  1351  0633  0AF1               	incf	delay@i+1,f
  1352  0634  3000               	movlw	0
  1353  0635  07F1               	addwf	delay@i+1,f
  1354  0636                     l929:	
  1355  0636  0871               	movf	delay@i+1,w
  1356  0637  3A80               	xorlw	128
  1357  0638  00FF               	movwf	btemp+1
  1358  0639  3080               	movlw	128
  1359  063A  027F               	subwf	btemp+1,w
  1360  063B  1D03               	skipz
  1361  063C  2E3F               	goto	u135
  1362  063D  303C               	movlw	60
  1363  063E  0270               	subwf	delay@i,w
  1364  063F                     u135:	
  1365  063F  1C03               	skipc
  1366  0640  2E42               	goto	u131
  1367  0641  2E43               	goto	u130
  1368  0642                     u131:	
  1369  0642  2E30               	goto	l927
  1370  0643                     u130:	
  1371  0643                     l109:	
  1372  0643  0008               	return
  1373  0644                     __end_of_delay:	
  1374  007E                     btemp	set	126	;btemp
  1375  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    26
    Data        1
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      0       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_get_time
    _set_time->_write_byte
    _rtc_init->_write_byte
    _get_time->_write_byte
    _display_time->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     708
                       _display_time
                           _get_time
                          _port_init
                           _rtc_init
                           _set_time
 ---------------------------------------------------------------------------------
 (1) _set_time                                             2     2      0     159
                                              5 COMMON     2     2      0
                         _write_byte
 ---------------------------------------------------------------------------------
 (1) _rtc_init                                             0     0      0      91
                         _write_byte
 ---------------------------------------------------------------------------------
 (1) _port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             3     3      0     205
                                              5 COMMON     3     3      0
                          _read_byte
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            4     4      0      46
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _display_time                                         4     4      0     253
                                              2 COMMON     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_time
     _delay
   _get_time
     _read_byte
     _write_byte
   _port_init
   _rtc_init
     _write_byte
   _set_time
     _write_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       7       5        8.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      10      12        0.0%
ABS                  0      0      10       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 16 15:38:11 2019

                      pc 0002                       l80 06E5                       l73 0618  
                     l81 06E8                       l76 062D                       l95 0664  
                     l96 0688                       l88 06B6                       l89 06B9  
                     l98 068B                       u90 066C                       u91 066B  
                     fsr 0004                      l101 06EE                      l102 0711  
                    l103 06FD                      l104 0718                      l113 07EE  
                    l109 0643                      l901 06EC                      l911 06FC  
                    l921 062E                      l913 06FE                      l761 0616  
                    l753 0609                      l915 0704                      l907 06F1  
                    l755 060D                      l931 0619                      l917 0717  
                    l909 06F8                      l757 060F                      l933 061E  
                    l941 06C3                      l927 0630                      l759 0612  
                    l935 062A                      l951 06D8                      l929 0636  
                    l953 068C                      l937 06BA                      l971 071F  
                    l891 066D                      l883 0662                      l963 0697  
                    l955 068F                      l947 06C5                      l939 06BD  
                    _DAY 001D                      l981 0743                      l973 072B  
                    l893 0674                      l965 06A3                      l957 0695  
                    l949 06D2                      l991 076A                      l983 074D  
                    l975 0733                      l895 0675                      l967 06A9  
                    l993 0774                      l985 075A                      l977 073C  
                    l969 0719                      l897 067B                      l889 066C  
                    l995 077E                      l987 0763                      l979 073E  
                    l899 06E9                      l997 0780                      l989 0765  
                    l999 0785                      _RB0 0030                      _RB1 0031  
                    _RB4 0034                      _RB5 0035                      u100 0688  
                    u101 0687                      u110 06FC                      u111 06FB  
                    u120 0711                      u121 0710                      u105 0684  
                    u130 0643                      u131 0642                      u140 06E5  
                    u125 070D                      u141 06E4                      u150 06B6  
                    u135 063F                      u151 06B5                      u160 071F  
                    u161 071E                      u145 06E1                      u155 06B2  
                    _MIN 0021                      _SEC 0022            ?_display_time 0070  
                    fsr0 0004                      indf 0000             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     l1001 078F                     l1011 07B6  
                   l1003 079C                     l1021 07DE                     l1013 07C0  
                   l1005 07A5                     l1023 07E7                     l1015 07C2  
                   l1007 07A7                     l1031 064E                     l1025 07E9  
                   l1017 07C7                     l1009 07AC                     l1033 0653  
                   l1019 07D1                     l1035 0658                     l1027 0644  
                   l1029 0649                     _DATE 001F                     _CTRL 001B  
                   _HOUR 0020                     _YEAR 001C                     _main 0644  
                   btemp 007E                     start 0000                    ?_main 0070  
         ??_display_time 0072            __CFG_WDTE$OFF 0000                    _MONTH 001E  
                  _PORTA 0005                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088            __CFG_PWRTE$ON 0000  
                  _delay 062E           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E             __end_of_DATE 0020  
           __end_of_CTRL 001C             __end_of_HOUR 0021             __end_of_YEAR 001D  
        __initialization 07EF             __end_of_main 0661                   ??_main 0078  
                 ?_delay 0070                   _ADCON1 009F                   _TRISB4 0434  
       __end_of_defaults 001B         __end_of_get_time 06BA                   _table1 0020  
                 _table2 0009                   delay@i 0070             __pdataCOMMON 0078  
       __end_of_set_time 06E9         __end_of_rtc_init 062E            display_time@i 0074  
__end_of__initialization 07FC     __end_of_display_time 07EF            __end_of_MONTH 001F  
         __pcstackCOMMON 0070            __end_of_delay 0644                  ??_delay 0070  
             __pbssBANK0 0020       __size_of_read_byte 0030               __pmaintext 0644  
     __size_of_port_init 0010                ?_get_time 0070               __stringtab 0003  
              ?_set_time 0070                ?_rtc_init 0070                  __ptext1 06BA  
                __ptext2 0619                  __ptext3 0609                  __ptext4 068C  
                __ptext5 0661                  __ptext6 06E9                  __ptext7 0719  
                __ptext8 062E        __end_of_read_byte 0719                  _time_rx 0078  
             ??_get_time 0075    __size_of_display_time 00D6     end_of_initialization 07FC  
             ??_set_time 0075        __end_of_port_init 0619               ??_rtc_init 0075  
           _display_time 0719            __pidataCOMMON 0608               _write_byte 0661  
         __end_of_table2 0013      start_initialization 07EF              __end_of_DAY 001E  
            __end_of_MIN 0022              __end_of_SEC 0023               read_byte@j 0072  
              ___latbits 0002        __size_of_get_time 002E        __size_of_set_time 002F  
      __size_of_rtc_init 0015              ?_write_byte 0070                __pstrings 0003  
         __size_of_delay 0016                _read_byte 06E9                _port_init 0609  
            __stringbase 0008                get_time@i 0076              write_byte@j 0072  
             ?_read_byte 0070      __size_of_write_byte 002B               ?_port_init 0070  
     __end_of__stringtab 0009                 _defaults 0013                 _get_time 068C  
          __size_of_main 001D                set_time@i 0075                 _set_time 06BA  
               _rtc_init 0619        write_byte@time_tx 0074              ??_read_byte 0070  
              stringcode 0003              ??_port_init 0070             ??_write_byte 0070  
             _OPTION_REG 0081                 stringdir 0003                 stringtab 0003  
     __end_of_write_byte 068C  
