

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Oct 21 16:12:00 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.05
    14                           ; Generated 20/12/2018 GMT
    15                           ; 
    16                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167                           
   168                           	psect	strings
   169  0003                     __pstrings:	
   170  0003                     stringtab:	
   171  0003                     __stringtab:	
   172  0003                     stringcode:	
   173                           ;	String table - string pointers are 1 byte each
   174                           
   175  0003                     stringdir:	
   176  0003  3000               	movlw	high stringdir
   177  0004  008A               	movwf	10
   178  0005  0804               	movf	4,w
   179  0006  0A84               	incf	4,f
   180  0007  0782               	addwf	2,f
   181  0008                     __stringbase:	
   182  0008  3400               	retlw	0
   183  0009                     __end_of__stringtab:	
   184  0009                     _NUMS:	
   185  0009  34C0               	retlw	192
   186  000A  3400               	retlw	0
   187  000B  34F9               	retlw	249
   188  000C  3400               	retlw	0
   189  000D  34A4               	retlw	164
   190  000E  3400               	retlw	0
   191  000F  34B0               	retlw	176
   192  0010  3400               	retlw	0
   193  0011  3499               	retlw	153
   194  0012  3400               	retlw	0
   195  0013  3492               	retlw	146
   196  0014  3400               	retlw	0
   197  0015  3483               	retlw	131
   198  0016  3400               	retlw	0
   199  0017  34F8               	retlw	248
   200  0018  3400               	retlw	0
   201  0019  3480               	retlw	128
   202  001A  3400               	retlw	0
   203  001B  3498               	retlw	152
   204  001C  3400               	retlw	0
   205  001D                     __end_of_NUMS:	
   206  001D                     _LEDS:	
   207  001D  34FE               	retlw	254
   208  001E  3400               	retlw	0
   209  001F  34FD               	retlw	253
   210  0020  3400               	retlw	0
   211  0021  34FB               	retlw	251
   212  0022  3400               	retlw	0
   213  0023  34F7               	retlw	247
   214  0024  3400               	retlw	0
   215  0025  34EF               	retlw	239
   216  0026  3400               	retlw	0
   217  0027  34DF               	retlw	223
   218  0028  3400               	retlw	0
   219  0029                     __end_of_LEDS:	
   220  0006                     _PORTB	set	6
   221  0008                     _PORTD	set	8
   222  0005                     _PORTA	set	5
   223  009F                     _ADCON1	set	159
   224  0086                     _TRISB	set	134
   225  0088                     _TRISD	set	136
   226  0085                     _TRISA	set	133
   227                           
   228                           ; #config settings
   229  0000                     
   230                           	psect	cinit
   231  07FC                     start_initialization:	
   232  07FC                     __initialization:	
   233  07FC                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  07FC                     __end_of__initialization:	
   237  07FC  0183               	clrf	3
   238  07FD  120A  118A  2FA0   	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	cstackCOMMON
   241  0070                     __pcstackCOMMON:	
   242  0070                     ?_delay:	
   243  0070                     ?_showDigit_7Seg:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?_main:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?_handleButtonPress:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     delay@t:	
   253                           ; 2 bytes @ 0x0
   254                           
   255  0070                     showDigit_7Seg@digit:	
   256                           ; 2 bytes @ 0x0
   257                           
   258                           
   259                           ; 2 bytes @ 0x0
   260  0070                     	ds	2
   261  0072                     ??_delay:	
   262  0072                     ??_handleButtonPress:	
   263                           ; 1 bytes @ 0x2
   264                           
   265  0072                     delay@i:	
   266                           ; 1 bytes @ 0x2
   267                           
   268  0072                     showDigit_7Seg@pos:	
   269                           ; 2 bytes @ 0x2
   270                           
   271                           
   272                           ; 2 bytes @ 0x2
   273  0072                     	ds	2
   274  0074                     ??_showDigit_7Seg:	
   275  0074                     handleButtonPress@x:	
   276                           ; 1 bytes @ 0x4
   277                           
   278                           
   279                           ; 2 bytes @ 0x4
   280  0074                     	ds	2
   281  0076                     ??_main:	
   282  0076                     main@digit:	
   283                           ; 1 bytes @ 0x6
   284                           
   285                           
   286                           ; 2 bytes @ 0x6
   287  0076                     	ds	2
   288                           
   289                           	psect	maintext
   290  07A0                     __pmaintext:	
   291 ;;
   292 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   293 ;;
   294 ;; *************** function _main *****************
   295 ;; Defined at:
   296 ;;		line 55 in file "newmain1.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;  digit           2    6[COMMON] int 
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   305 ;; Tracked objects:
   306 ;;		On entry : B00/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   310 ;;      Params:         0       0       0       0       0
   311 ;;      Locals:         2       0       0       0       0
   312 ;;      Temps:          0       0       0       0       0
   313 ;;      Totals:         2       0       0       0       0
   314 ;;Total ram usage:        2 bytes
   315 ;; Hardware stack levels required when called:    2
   316 ;; This function calls:
   317 ;;		_delay
   318 ;;		_handleButtonPress
   319 ;;		_showDigit_7Seg
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           
   326                           ;psect for function _main
   327  07A0                     _main:	
   328  07A0                     l758:	
   329                           ;incstack = 0
   330                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   331                           
   332                           
   333                           ;newmain1.c: 59:         digit = handleButtonPress();
   334  07A0  120A  118A  27CB  120A  118A  	fcall	_handleButtonPress
   335  07A5  0871               	movf	?_handleButtonPress+1,w
   336  07A6  00F7               	movwf	main@digit+1
   337  07A7  0870               	movf	?_handleButtonPress,w
   338  07A8  00F6               	movwf	main@digit
   339                           
   340                           ;newmain1.c: 60:         delay(200);
   341  07A9  30C8               	movlw	200
   342  07AA  00F0               	movwf	delay@t
   343  07AB  3000               	movlw	0
   344  07AC  00F1               	movwf	delay@t+1
   345  07AD  120A  118A  2771  120A  118A  	fcall	_delay
   346                           
   347                           ;newmain1.c: 61:         if (digit > 0) {
   348  07B2  0877               	movf	main@digit+1,w
   349  07B3  3A80               	xorlw	128
   350  07B4  00FF               	movwf	127
   351  07B5  3080               	movlw	128
   352  07B6  027F               	subwf	127,w
   353  07B7  1D03               	skipz
   354  07B8  2FBB               	goto	u45
   355  07B9  3001               	movlw	1
   356  07BA  0276               	subwf	main@digit,w
   357  07BB                     u45:	
   358  07BB  1C03               	skipc
   359  07BC  2FA0               	goto	l758
   360                           
   361                           ;newmain1.c: 62:             showDigit_7Seg(digit, 1);
   362  07BD  0877               	movf	main@digit+1,w
   363  07BE  00F1               	movwf	showDigit_7Seg@digit+1
   364  07BF  0876               	movf	main@digit,w
   365  07C0  00F0               	movwf	showDigit_7Seg@digit
   366  07C1  3001               	movlw	1
   367  07C2  00F2               	movwf	showDigit_7Seg@pos
   368  07C3  3000               	movlw	0
   369  07C4  00F3               	movwf	showDigit_7Seg@pos+1
   370  07C5  120A  118A  2782  120A  118A  	fcall	_showDigit_7Seg
   371  07CA  2FA0               	goto	l758
   372  07CB                     __end_of_main:	
   373                           
   374                           	psect	text1
   375  0782                     __ptext1:	
   376 ;; *************** function _showDigit_7Seg *****************
   377 ;; Defined at:
   378 ;;		line 18 in file "newmain1.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;  digit           2    0[COMMON] int 
   381 ;;  pos             2    2[COMMON] int 
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   393 ;;      Params:         4       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0
   395 ;;      Temps:          1       0       0       0       0
   396 ;;      Totals:         5       0       0       0       0
   397 ;;Total ram usage:        5 bytes
   398 ;; Hardware stack levels used:    2
   399 ;; This function calls:
   400 ;;		Nothing
   401 ;; This function is called by:
   402 ;;		_main
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           
   407                           ;psect for function _showDigit_7Seg
   408  0782                     _showDigit_7Seg:	
   409                           
   410                           ;newmain1.c: 19:     ADCON1 = 0x07;
   411                           
   412                           ;incstack = 0
   413                           ; Regs used in _showDigit_7Seg: [wreg-fsr0h+status,2+status,0+pclath]
   414  0782  1683               	bsf	3,5	;RP0=1, select bank1
   415  0783  1303               	bcf	3,6	;RP1=0, select bank1
   416  0784  0188               	clrf	8	;volatile
   417  0785  0185               	clrf	5	;volatile
   418                           
   419                           ;newmain1.c: 20:     int x = 0;
   420  0786  30FF               	movlw	255
   421  0787  1283               	bcf	3,5	;RP0=0, select bank0
   422  0788  1303               	bcf	3,6	;RP1=0, select bank0
   423  0789  0085               	movwf	5	;volatile
   424                           
   425                           ;newmain1.c: 21:     switch (PORTB) {
   426  078A  0188               	clrf	8	;volatile
   427                           
   428                           ;newmain1.c: 22:         case 0x01: x = 1;
   429  078B  0870               	movf	showDigit_7Seg@digit,w
   430  078C  00F4               	movwf	??_showDigit_7Seg
   431  078D  0774               	addwf	??_showDigit_7Seg,w
   432  078E  3E01               	addlw	low ((_NUMS-__stringbase)| (0+32768))
   433  078F  0084               	movwf	4
   434  0790  120A  118A  2003  120A  118A  	fcall	stringdir
   435  0795  0088               	movwf	8	;volatile
   436                           
   437                           ;newmain1.c: 23:             break;
   438  0796  0872               	movf	showDigit_7Seg@pos,w
   439  0797  00F4               	movwf	??_showDigit_7Seg
   440  0798  0774               	addwf	??_showDigit_7Seg,w
   441  0799  3E15               	addlw	low ((_LEDS-__stringbase)| (0+32768))
   442  079A  0084               	movwf	4
   443  079B  120A  118A  2003   	fcall	stringdir
   444  079E  0085               	movwf	5	;volatile
   445  079F  0008               	return
   446  07A0                     __end_of_showDigit_7Seg:	
   447                           
   448                           	psect	text2
   449  07CB                     __ptext2:	
   450 ;; *************** function _handleButtonPress *****************
   451 ;; Defined at:
   452 ;;		line 26 in file "newmain1.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;  x               2    4[COMMON] int 
   457 ;; Return value:  Size  Location     Type
   458 ;;                  2    0[COMMON] int 
   459 ;; Registers used:
   460 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   466 ;;      Params:         2       0       0       0       0
   467 ;;      Locals:         2       0       0       0       0
   468 ;;      Temps:          2       0       0       0       0
   469 ;;      Totals:         6       0       0       0       0
   470 ;;Total ram usage:        6 bytes
   471 ;; Hardware stack levels used:    1
   472 ;; This function calls:
   473 ;;		Nothing
   474 ;; This function is called by:
   475 ;;		_main
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           
   480                           ;psect for function _handleButtonPress
   481  07CB                     _handleButtonPress:	
   482                           
   483                           ;newmain1.c: 27:             break;
   484                           
   485                           ;incstack = 0
   486                           ; Regs used in _handleButtonPress: [wreg-fsr0h+status,2+status,0]
   487  07CB  30FF               	movlw	255
   488  07CC  1683               	bsf	3,5	;RP0=1, select bank1
   489  07CD  1303               	bcf	3,6	;RP1=0, select bank1
   490  07CE  0086               	movwf	6	;volatile
   491                           
   492                           ;newmain1.c: 28:         case 0x08: x = 4;
   493  07CF  3007               	movlw	7
   494  07D0  009F               	movwf	31	;volatile
   495                           
   496                           ;newmain1.c: 29:             break;
   497  07D1  01F4               	clrf	handleButtonPress@x
   498  07D2  01F5               	clrf	handleButtonPress@x+1
   499                           
   500                           ;newmain1.c: 30:     }
   501  07D3  2FDF               	goto	l744
   502  07D4                     l734:	
   503  07D4  3001               	movlw	1
   504  07D5  2FDB               	goto	L3
   505  07D6                     l736:	
   506  07D6  3002               	movlw	2
   507  07D7  2FDB               	goto	L3
   508  07D8                     l738:	
   509  07D8  3003               	movlw	3
   510  07D9  2FDB               	goto	L3
   511  07DA                     l740:	
   512  07DA  3004               	movlw	4
   513  07DB                     L3:	
   514  07DB  00F4               	movwf	handleButtonPress@x
   515  07DC  3000               	movlw	0
   516  07DD  00F5               	movwf	handleButtonPress@x+1
   517  07DE  2FF7               	goto	l746
   518  07DF                     l744:	
   519  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   520  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   521  07E1  0806               	movf	6,w	;volatile
   522  07E2  00F2               	movwf	??_handleButtonPress
   523  07E3  01F3               	clrf	??_handleButtonPress+1
   524                           
   525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   526                           ; Switch size 1, requested type "simple"
   527                           ; Number of cases is 1, Range of values is 0 to 0
   528                           ; switch strategies available:
   529                           ; Name         Instructions Cycles
   530                           ; simple_byte            4     3 (average)
   531                           ; direct_byte           11     8 (fixed)
   532                           ; jumptable            260     6 (fixed)
   533                           ;	Chosen strategy is simple_byte
   534  07E4  0873               	movf	??_handleButtonPress+1,w
   535  07E5  3A00               	xorlw	0	; case 0
   536  07E6  1903               	skipnz
   537  07E7  2FE9               	goto	l796
   538  07E8  2FF7               	goto	l746
   539  07E9                     l796:	
   540                           
   541                           ; Switch size 1, requested type "simple"
   542                           ; Number of cases is 4, Range of values is 1 to 8
   543                           ; switch strategies available:
   544                           ; Name         Instructions Cycles
   545                           ; simple_byte           13     7 (average)
   546                           ; direct_byte           35    11 (fixed)
   547                           ; jumptable            263     9 (fixed)
   548                           ;	Chosen strategy is simple_byte
   549  07E9  0872               	movf	??_handleButtonPress,w
   550  07EA  3A01               	xorlw	1	; case 1
   551  07EB  1903               	skipnz
   552  07EC  2FD4               	goto	l734
   553  07ED  3A03               	xorlw	3	; case 2
   554  07EE  1903               	skipnz
   555  07EF  2FD6               	goto	l736
   556  07F0  3A06               	xorlw	6	; case 4
   557  07F1  1903               	skipnz
   558  07F2  2FD8               	goto	l738
   559  07F3  3A0C               	xorlw	12	; case 8
   560  07F4  1903               	skipnz
   561  07F5  2FDA               	goto	l740
   562  07F6  2FF7               	goto	l746
   563  07F7                     l746:	
   564                           
   565                           ;newmain1.c: 52:     return x;
   566  07F7  0875               	movf	handleButtonPress@x+1,w
   567  07F8  00F1               	movwf	?_handleButtonPress+1
   568  07F9  0874               	movf	handleButtonPress@x,w
   569  07FA  00F0               	movwf	?_handleButtonPress
   570  07FB  0008               	return
   571  07FC                     __end_of_handleButtonPress:	
   572                           
   573                           	psect	text3
   574  0771                     __ptext3:	
   575 ;; *************** function _delay *****************
   576 ;; Defined at:
   577 ;;		line 14 in file "newmain1.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  t               2    0[COMMON] int 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  i               2    2[COMMON] unsigned int 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         2       0       0       0       0
   592 ;;      Locals:         2       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0
   594 ;;      Totals:         4       0       0       0       0
   595 ;;Total ram usage:        4 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           
   605                           ;psect for function _delay
   606  0771                     _delay:	
   607                           
   608                           ;newmain1.c: 15: }
   609                           
   610                           ;incstack = 0
   611                           ; Regs used in _delay: [wreg+status,2]
   612  0771  01F2               	clrf	delay@i
   613  0772  01F3               	clrf	delay@i+1
   614  0773                     l21:	
   615  0773  0871               	movf	delay@t+1,w
   616  0774  0273               	subwf	delay@i+1,w
   617  0775  1D03               	skipz
   618  0776  2F79               	goto	u35
   619  0777  0870               	movf	delay@t,w
   620  0778  0272               	subwf	delay@i,w
   621  0779                     u35:	
   622  0779  1803               	btfsc	3,0
   623  077A  0008               	return
   624  077B  3001               	movlw	1
   625  077C  07F2               	addwf	delay@i,f
   626  077D  1803               	skipnc
   627  077E  0AF3               	incf	delay@i+1,f
   628  077F  3000               	movlw	0
   629  0780  07F3               	addwf	delay@i+1,f
   630  0781  2F73               	goto	l21
   631  0782                     __end_of_delay:	
   632  007E                     btemp	set	126	;btemp
   633  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_handleButtonPress

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     391
                                              6 COMMON     2     2      0
                              _delay
                  _handleButtonPress
                     _showDigit_7Seg
 ---------------------------------------------------------------------------------
 (2) _showDigit_7Seg                                       5     1      4     196
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (1) _handleButtonPress                                    6     4      2      27
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _delay                                                4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _handleButtonPress
   _showDigit_7Seg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Oct 21 16:12:00 2019

                         pc 0002                          l21 0773                          u35 0779  
                        u45 07BB                          fsr 0004                         l740 07DA  
                       l734 07D4                         l736 07D6                         l744 07DF  
                       l738 07D8                         l746 07F7                         l758 07A0  
                       l796 07E9                         fsr0 0004                __CFG_FOSC$HS 0000  
              __CFG_LVP$OFF 0000                        _LEDS 001D                        _NUMS 0009  
                      _main 07A0                        btemp 007E                        start 0000  
                     ?_main 0070               __CFG_WDTE$OFF 0000                       _PORTA 0005  
                     _PORTB 0006                       _PORTD 0008                       _TRISA 0085  
                     _TRISB 0086                       _TRISD 0088               __CFG_PWRTE$ON 0000  
                     _delay 0771              __CFG_BOREN$OFF 0000                       pclath 000A  
                     status 0003                       wtemp0 007E                __end_of_LEDS 0029  
              __end_of_NUMS 001D             __initialization 07FC                __end_of_main 07CB  
                    ??_main 0076                      ?_delay 0070                      _ADCON1 009F  
         _handleButtonPress 07CB          ?_handleButtonPress 0070         ??_handleButtonPress 0072  
                    delay@i 0072                      delay@t 0070   __end_of_handleButtonPress 07FC  
   __end_of__initialization 07FC              __pcstackCOMMON 0070               __end_of_delay 0782  
                   ??_delay 0072                  __pmaintext 07A0     __size_of_showDigit_7Seg 001E  
                __stringtab 0003  __size_of_handleButtonPress 0031          handleButtonPress@x 0074  
                   __ptext1 0782                     __ptext2 07CB                     __ptext3 0771  
      end_of_initialization 07FC           showDigit_7Seg@pos 0072         start_initialization 07FC  
            _showDigit_7Seg 0782                   ___latbits 0002      __end_of_showDigit_7Seg 07A0  
                 __pstrings 0003             ?_showDigit_7Seg 0070              __size_of_delay 0011  
               __stringbase 0008                   main@digit 0076          __end_of__stringtab 0009  
             __size_of_main 002B         showDigit_7Seg@digit 0070                   stringcode 0003  
          ??_showDigit_7Seg 0074                    stringdir 0003                    stringtab 0003  
