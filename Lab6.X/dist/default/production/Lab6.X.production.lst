

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 06 15:31:04 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184                           
   185                           	psect	idataBANK0
   186  045F                     __pidataBANK0:	
   187                           
   188                           ;initializer for _table
   189  045F  34C0               	retlw	192
   190  0460  34F9               	retlw	249
   191  0461  34A4               	retlw	164
   192  0462  34B0               	retlw	176
   193  0463  3499               	retlw	153
   194  0464  3492               	retlw	146
   195  0465  3482               	retlw	130
   196  0466  34F8               	retlw	248
   197  0467  3480               	retlw	128
   198  0468  3490               	retlw	144
   199                           
   200                           ;initializer for _tUKus
   201  0469  3401               	retlw	1
   202  046A  3400               	retlw	0
   203  046B  3446               	retlw	70
   204  046C  3400               	retlw	0
   205                           
   206                           ;initializer for _t63us
   207  046D  3402               	retlw	2
   208  046E  3400               	retlw	0
   209  046F  3407               	retlw	7
   210  0470  3400               	retlw	0
   211                           
   212                           ;initializer for _t70us
   213  0471  3402               	retlw	2
   214  0472  3400               	retlw	0
   215  0473  3408               	retlw	8
   216  0474  3400               	retlw	0
   217                           
   218                           ;initializer for _t430us
   219  0475  3402               	retlw	2
   220  0476  3400               	retlw	0
   221  0477  343C               	retlw	60
   222  0478  3400               	retlw	0
   223                           
   224                           ;initializer for _t503us
   225  0479  3402               	retlw	2
   226  047A  3400               	retlw	0
   227  047B  3446               	retlw	70
   228  047C  3400               	retlw	0
   229                           
   230                           	psect	strings
   231  0003                     __pstrings:	
   232  0003                     stringtab:	
   233  0003                     __stringtab:	
   234  0003                     stringcode:	
   235                           ;	String table - string pointers are 1 byte each
   236                           
   237  0003                     stringdir:	
   238  0003  3000               	movlw	high stringdir
   239  0004  008A               	movwf	10
   240  0005  0804               	movf	4,w
   241  0006  0A84               	incf	4,f
   242  0007  0782               	addwf	2,f
   243  0008                     __stringbase:	
   244  0008  3400               	retlw	0
   245  0009                     __end_of__stringtab:	
   246  0009                     setCursorPos@ln4:	
   247  0009  34D8               	retlw	216
   248  000A  3400               	retlw	0
   249  000B                     __end_ofsetCursorPos@ln4:	
   250  000B                     setCursorPos@ln3:	
   251  000B  34C8               	retlw	200
   252  000C  3400               	retlw	0
   253  000D                     __end_ofsetCursorPos@ln3:	
   254  000D                     setCursorPos@ln2:	
   255  000D  34D0               	retlw	208
   256  000E  3400               	retlw	0
   257  000F                     __end_ofsetCursorPos@ln2:	
   258  000F                     setCursorPos@ln1:	
   259  000F  34C0               	retlw	192
   260  0010  3400               	retlw	0
   261  0011                     __end_ofsetCursorPos@ln1:	
   262  0008                     _PORTD	set	8
   263  0048                     _RE0	set	72
   264  002B                     _RA3	set	43
   265  002C                     _RA4	set	44
   266  002D                     _RA5	set	45
   267  002A                     _RA2	set	42
   268  0088                     _TRISD	set	136
   269  0085                     _TRISA	set	133
   270  009F                     _ADCON1	set	159
   271  0448                     _TRISE0	set	1096
   272                           
   273                           ; #config settings
   274  0000                     
   275                           	psect	cinit
   276  07E1                     start_initialization:	
   277  07E1                     __initialization:	
   278                           
   279                           ; Initialize objects allocated to BANK0
   280  07E1  1383               	bcf	3,7	;select IRP bank0
   281  07E2  303E               	movlw	low (__pdataBANK0+30)
   282  07E3  00FD               	movwf	btemp+-1
   283  07E4  3004               	movlw	high __pidataBANK0
   284  07E5  00FE               	movwf	btemp
   285  07E6  305F               	movlw	low __pidataBANK0
   286  07E7  00FF               	movwf	btemp+1
   287  07E8  3020               	movlw	low __pdataBANK0
   288  07E9  0084               	movwf	4
   289  07EA  120A  118A  23F6  120A  118A  	fcall	init_ram0
   290                           
   291                           ; Clear objects allocated to BANK0
   292  07EF  01BE               	clrf	__pbssBANK0& (0+127)
   293  07F0  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   294  07F1  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   295  07F2  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   296  07F3  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   297  07F4  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   298  07F5  01C4               	clrf	(__pbssBANK0+6)& (0+127)
   299  07F6  01C5               	clrf	(__pbssBANK0+7)& (0+127)
   300  07F7  01C6               	clrf	(__pbssBANK0+8)& (0+127)
   301  07F8  01C7               	clrf	(__pbssBANK0+9)& (0+127)
   302  07F9  01C8               	clrf	(__pbssBANK0+10)& (0+127)
   303  07FA  01C9               	clrf	(__pbssBANK0+11)& (0+127)
   304  07FB  01CA               	clrf	(__pbssBANK0+12)& (0+127)
   305  07FC                     end_of_initialization:	
   306                           ;End of C runtime variable initialization code
   307                           
   308  07FC                     __end_of__initialization:	
   309  07FC  0183               	clrf	3
   310  07FD  120A  118A  2C47   	ljmp	_main	;jump to C main() function
   311                           
   312                           	psect	bssBANK0
   313  003E                     __pbssBANK0:	
   314  003E                     _wd:	
   315  003E                     	ds	2
   316  0040                     read_byte@j:	
   317  0040                     	ds	1
   318  0041                     _pt10000:	
   319  0041                     	ds	1
   320  0042                     _pt1000:	
   321  0042                     	ds	1
   322  0043                     _pt100:	
   323  0043                     	ds	1
   324  0044                     _pt10:	
   325  0044                     	ds	1
   326  0045                     _intEntries:	
   327  0045                     	ds	1
   328  0046                     _tens:	
   329  0046                     	ds	1
   330  0047                     _TX:	
   331  0047                     	ds	1
   332  0048                     _TZ:	
   333  0048                     	ds	1
   334  0049                     _THV:	
   335  0049                     	ds	1
   336  004A                     _TLV:	
   337  004A                     	ds	1
   338                           
   339                           	psect	dataBANK0
   340  0020                     __pdataBANK0:	
   341  0020                     _table:	
   342  0020                     	ds	10
   343  002A                     _tUKus:	
   344  002A                     	ds	4
   345  002E                     _t63us:	
   346  002E                     	ds	4
   347  0032                     _t70us:	
   348  0032                     	ds	4
   349  0036                     _t430us:	
   350  0036                     	ds	4
   351  003A                     _t503us:	
   352  003A                     	ds	4
   353                           
   354                           	psect	inittext
   355  03F2                     init_fetch0:	
   356                           ;	Called with low address in FSR and high address in W
   357                           
   358  03F2  087E               	movf	btemp,w
   359  03F3  008A               	movwf	10
   360  03F4  087F               	movf	btemp+1,w
   361  03F5  0082               	movwf	2
   362  03F6                     init_ram0:	
   363                           ;Called with:
   364                           ;	high address of idata address in btemp 
   365                           ;	low address of idata address in btemp+1 
   366                           ;	low address of data in FSR
   367                           ;	high address + 1 of data in btemp-1
   368                           
   369  03F6  120A  118A  23F2  120A  118A  	fcall	init_fetch0
   370  03FB  0080               	movwf	0
   371  03FC  0A84               	incf	4,f
   372  03FD  0804               	movf	4,w
   373  03FE  067D               	xorwf	btemp+-1,w
   374  03FF  1903               	btfsc	3,2
   375  0400  3400               	retlw	0
   376  0401  0AFF               	incf	btemp+1,f
   377  0402  1903               	btfsc	3,2
   378  0403  0AFE               	incf	btemp,f
   379  0404  2BF6               	goto	init_ram0
   380                           
   381                           	psect	cstackCOMMON
   382  0070                     __pcstackCOMMON:	
   383  0070                     ?_writecmd:	
   384  0070                     ?_delay:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_init:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ??_init:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_lcd_init:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_writechar:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_delay2:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ??_delay2:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_write_byte:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_read_byte:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_display_temp:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_get_temp:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_main:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_reset:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?___awdiv:	
   424                           ; 2 bytes @ 0x0
   425                           
   426  0070                     ?___awmod:	
   427                           ; 2 bytes @ 0x0
   428                           
   429  0070                     ?___lwmod:	
   430                           ; 2 bytes @ 0x0
   431                           
   432  0070                     delay@t:	
   433                           ; 2 bytes @ 0x0
   434                           
   435  0070                     ___awdiv@divisor:	
   436                           ; 2 bytes @ 0x0
   437                           
   438  0070                     ___awmod@divisor:	
   439                           ; 2 bytes @ 0x0
   440                           
   441  0070                     ___lwmod@divisor:	
   442                           ; 2 bytes @ 0x0
   443                           
   444                           
   445                           ; 2 bytes @ 0x0
   446  0070                     	ds	1
   447  0071                     delay2@x:	
   448                           
   449                           ; 1 bytes @ 0x1
   450  0071                     	ds	1
   451  0072                     ??_delay:	
   452  0072                     delay2@y:	
   453                           ; 1 bytes @ 0x2
   454                           
   455  0072                     ___awdiv@dividend:	
   456                           ; 1 bytes @ 0x2
   457                           
   458  0072                     ___awmod@dividend:	
   459                           ; 2 bytes @ 0x2
   460                           
   461  0072                     ___lwmod@dividend:	
   462                           ; 2 bytes @ 0x2
   463                           
   464                           
   465                           ; 2 bytes @ 0x2
   466  0072                     	ds	1
   467  0073                     delay2@z:	
   468  0073                     delay@i:	
   469                           ; 1 bytes @ 0x3
   470                           
   471                           
   472                           ; 2 bytes @ 0x3
   473  0073                     	ds	1
   474  0074                     ??___awdiv:	
   475  0074                     ??___awmod:	
   476                           ; 1 bytes @ 0x4
   477                           
   478  0074                     ??___lwmod:	
   479                           ; 1 bytes @ 0x4
   480                           
   481  0074                     delay2@t:	
   482                           ; 1 bytes @ 0x4
   483                           
   484                           
   485                           ; 1 bytes @ 0x4
   486  0074                     	ds	1
   487  0075                     ??_writecmd:	
   488  0075                     ??_writechar:	
   489                           ; 1 bytes @ 0x5
   490                           
   491  0075                     ??_write_byte:	
   492                           ; 1 bytes @ 0x5
   493                           
   494  0075                     ??_read_byte:	
   495                           ; 1 bytes @ 0x5
   496                           
   497  0075                     ??_reset:	
   498                           ; 1 bytes @ 0x5
   499                           
   500  0075                     writechar@x:	
   501                           ; 1 bytes @ 0x5
   502                           
   503  0075                     writecmd@x:	
   504                           ; 1 bytes @ 0x5
   505                           
   506  0075                     reset@presence:	
   507                           ; 1 bytes @ 0x5
   508                           
   509  0075                     ___awdiv@counter:	
   510                           ; 1 bytes @ 0x5
   511                           
   512  0075                     ___awmod@counter:	
   513                           ; 1 bytes @ 0x5
   514                           
   515  0075                     ___lwmod@counter:	
   516                           ; 1 bytes @ 0x5
   517                           
   518                           
   519                           ; 1 bytes @ 0x5
   520  0075                     	ds	1
   521  0076                     ??_lcd_init:	
   522  0076                     ??_display_temp:	
   523                           ; 1 bytes @ 0x6
   524                           
   525  0076                     ?___lwdiv:	
   526                           ; 1 bytes @ 0x6
   527                           
   528  0076                     read_byte@value:	
   529                           ; 2 bytes @ 0x6
   530                           
   531  0076                     ___awdiv@sign:	
   532                           ; 1 bytes @ 0x6
   533                           
   534  0076                     ___awmod@sign:	
   535                           ; 1 bytes @ 0x6
   536                           
   537  0076                     ___lwdiv@divisor:	
   538                           ; 1 bytes @ 0x6
   539                           
   540                           
   541                           ; 2 bytes @ 0x6
   542  0076                     	ds	1
   543  0077                     write_byte@temp:	
   544  0077                     read_byte@i:	
   545                           ; 1 bytes @ 0x7
   546                           
   547  0077                     ___awdiv@quotient:	
   548                           ; 1 bytes @ 0x7
   549                           
   550                           
   551                           ; 2 bytes @ 0x7
   552  0077                     	ds	1
   553  0078                     write_byte@val:	
   554  0078                     ___lwdiv@dividend:	
   555                           ; 1 bytes @ 0x8
   556                           
   557                           
   558                           ; 2 bytes @ 0x8
   559  0078                     	ds	1
   560  0079                     write_byte@i:	
   561                           
   562                           ; 1 bytes @ 0x9
   563  0079                     	ds	1
   564  007A                     ??___lwdiv:	
   565                           
   566                           ; 1 bytes @ 0xA
   567  007A                     	ds	1
   568  007B                     ___lwdiv@quotient:	
   569                           
   570                           ; 2 bytes @ 0xB
   571  007B                     	ds	2
   572  007D                     ___lwdiv@counter:	
   573                           
   574                           ; 1 bytes @ 0xD
   575  007D                     	ds	1
   576  007E                     ??_main:	
   577                           
   578                           	psect	cstackBANK0
   579  004B                     __pcstackBANK0:	
   580                           ; 1 bytes @ 0xE
   581                           
   582  004B                     ??_get_temp:	
   583                           
   584                           ; 1 bytes @ 0x0
   585  004B                     	ds	4
   586                           
   587                           	psect	maintext
   588  0447                     __pmaintext:	
   589 ;;
   590 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   591 ;;
   592 ;; *************** function _main *****************
   593 ;; Defined at:
   594 ;;		line 306 in file "newmain.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : B00/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   608 ;;      Params:         0       0       0       0       0
   609 ;;      Locals:         0       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0
   611 ;;      Totals:         0       0       0       0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels required when called:    3
   614 ;; This function calls:
   615 ;;		_display_temp
   616 ;;		_get_temp
   617 ;;		_init
   618 ;;		_lcd_init
   619 ;; This function is called by:
   620 ;;		Startup code after reset
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           
   625                           ;psect for function _main
   626  0447                     _main:	
   627  0447                     l1456:	
   628                           ;incstack = 0
   629                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   630                           
   631                           
   632                           ;newmain.c: 307:     init();
   633  0447  120A  118A  23D5  120A  118A  	fcall	_init
   634                           
   635                           ;newmain.c: 308:     lcd_init();
   636  044C  120A  118A  23DF  120A  118A  	fcall	_lcd_init
   637  0451                     l1458:	
   638                           
   639                           ;newmain.c: 311:         get_temp();
   640  0451  120A  118A  26B9  120A  118A  	fcall	_get_temp
   641  0456                     l1460:	
   642                           
   643                           ;newmain.c: 312:         display_temp();
   644  0456  120A  118A  2572  120A  118A  	fcall	_display_temp
   645  045B  2C51               	goto	l1458
   646  045C  120A  118A  2800   	ljmp	start
   647  045F                     __end_of_main:	
   648                           
   649                           	psect	text1
   650  03DF                     __ptext1:	
   651 ;; *************** function _lcd_init *****************
   652 ;; Defined at:
   653 ;;		line 65 in file "newmain.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, status,2, status,0, pclath, cstack
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   667 ;;      Params:         0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0
   669 ;;      Temps:          0       0       0       0       0
   670 ;;      Totals:         0       0       0       0       0
   671 ;;Total ram usage:        0 bytes
   672 ;; Hardware stack levels used:    1
   673 ;; Hardware stack levels required when called:    2
   674 ;; This function calls:
   675 ;;		_writecmd
   676 ;; This function is called by:
   677 ;;		_main
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           
   682                           ;psect for function _lcd_init
   683  03DF                     _lcd_init:	
   684  03DF                     l1386:	
   685                           ;incstack = 0
   686                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   687                           
   688                           
   689                           ;newmain.c: 66:     writecmd(0x0F);
   690  03DF  300F               	movlw	15
   691  03E0  120A  118A  241A  120A  118A  	fcall	_writecmd
   692                           
   693                           ;newmain.c: 67:     writecmd(0x01);
   694  03E5  3001               	movlw	1
   695  03E6  120A  118A  241A  120A  118A  	fcall	_writecmd
   696                           
   697                           ;newmain.c: 68:     writecmd(0x38);
   698  03EB  3038               	movlw	56
   699  03EC  120A  118A  241A  120A  118A  	fcall	_writecmd
   700  03F1                     l66:	
   701  03F1  0008               	return
   702  03F2                     __end_of_lcd_init:	
   703                           
   704                           	psect	text2
   705  03D5                     __ptext2:	
   706 ;; *************** function _init *****************
   707 ;; Defined at:
   708 ;;		line 55 in file "newmain.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;		None
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, status,2
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   722 ;;      Params:         0       0       0       0       0
   723 ;;      Locals:         0       0       0       0       0
   724 ;;      Temps:          0       0       0       0       0
   725 ;;      Totals:         0       0       0       0       0
   726 ;;Total ram usage:        0 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; This function calls:
   729 ;;		Nothing
   730 ;; This function is called by:
   731 ;;		_main
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           
   736                           ;psect for function _init
   737  03D5                     _init:	
   738  03D5                     l1020:	
   739                           ;incstack = 0
   740                           ; Regs used in _init: [wreg+status,2]
   741                           
   742                           
   743                           ;newmain.c: 56:     ADCON1 = 0X07;
   744  03D5  3007               	movlw	7
   745  03D6  1683               	bsf	3,5	;RP0=1, select bank1
   746  03D7  1303               	bcf	3,6	;RP1=0, select bank1
   747  03D8  009F               	movwf	31	;volatile
   748  03D9                     l1022:	
   749                           
   750                           ;newmain.c: 57:     TRISA = 0X00;
   751  03D9  0185               	clrf	5	;volatile
   752  03DA                     l1024:	
   753                           
   754                           ;newmain.c: 58:     TRISD = 0X00;
   755  03DA  0188               	clrf	8	;volatile
   756  03DB                     l1026:	
   757                           
   758                           ;newmain.c: 59:     RA2 = 1;
   759  03DB  1283               	bcf	3,5	;RP0=0, select bank0
   760  03DC  1303               	bcf	3,6	;RP1=0, select bank0
   761  03DD  1505               	bsf	5,2	;volatile
   762  03DE                     l63:	
   763  03DE  0008               	return
   764  03DF                     __end_of_init:	
   765                           
   766                           	psect	text3
   767  06B9                     __ptext3:	
   768 ;; *************** function _get_temp *****************
   769 ;; Defined at:
   770 ;;		line 259 in file "newmain.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  i               2    0        int 
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         0       0       0       0       0
   785 ;;      Locals:         0       0       0       0       0
   786 ;;      Temps:          0       4       0       0       0
   787 ;;      Totals:         0       4       0       0       0
   788 ;;Total ram usage:        4 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; Hardware stack levels required when called:    2
   791 ;; This function calls:
   792 ;;		___awdiv
   793 ;;		___awmod
   794 ;;		___lwdiv
   795 ;;		___lwmod
   796 ;;		_read_byte
   797 ;;		_reset
   798 ;;		_write_byte
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _get_temp
   806  06B9                     _get_temp:	
   807  06B9                     l1390:	
   808                           ;incstack = 0
   809                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   810                           
   811                           
   812                           ;newmain.c: 264:     int i;;newmain.c: 265:     TRISE0 = 1;
   813  06B9  1683               	bsf	3,5	;RP0=1, select bank1
   814  06BA  1303               	bcf	3,6	;RP1=0, select bank1
   815  06BB  1409               	bsf	9,0	;volatile
   816  06BC                     l1392:	
   817                           
   818                           ;newmain.c: 266:     reset();
   819  06BC  120A  118A  249D  120A  118A  	fcall	_reset
   820                           
   821                           ;newmain.c: 267:     write_byte(0XCC);
   822  06C1  30CC               	movlw	204
   823  06C2  120A  118A  2501  120A  118A  	fcall	_write_byte
   824                           
   825                           ;newmain.c: 268:     write_byte(0X44);
   826  06C7  3044               	movlw	68
   827  06C8  120A  118A  2501  120A  118A  	fcall	_write_byte
   828                           
   829                           ;newmain.c: 272:     reset();
   830  06CD  120A  118A  249D  120A  118A  	fcall	_reset
   831                           
   832                           ;newmain.c: 273:     write_byte(0XCC);
   833  06D2  30CC               	movlw	204
   834  06D3  120A  118A  2501  120A  118A  	fcall	_write_byte
   835                           
   836                           ;newmain.c: 274:     write_byte(0XBE);
   837  06D8  30BE               	movlw	190
   838  06D9  120A  118A  2501  120A  118A  	fcall	_write_byte
   839                           
   840                           ;newmain.c: 275:     TLV = read_byte();
   841  06DE  120A  118A  24CB  120A  118A  	fcall	_read_byte
   842  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   843  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   844  06E5  00CB               	movwf	??_get_temp
   845  06E6  084B               	movf	??_get_temp,w
   846  06E7  00CA               	movwf	_TLV
   847                           
   848                           ;newmain.c: 276:     THV = read_byte();
   849  06E8  120A  118A  24CB  120A  118A  	fcall	_read_byte
   850  06ED  1283               	bcf	3,5	;RP0=0, select bank0
   851  06EE  1303               	bcf	3,6	;RP1=0, select bank0
   852  06EF  00CB               	movwf	??_get_temp
   853  06F0  084B               	movf	??_get_temp,w
   854  06F1  00C9               	movwf	_THV
   855  06F2                     l1394:	
   856                           
   857                           ;newmain.c: 277:     TRISE0 = 1;
   858  06F2  1683               	bsf	3,5	;RP0=1, select bank1
   859  06F3  1303               	bcf	3,6	;RP1=0, select bank1
   860  06F4  1409               	bsf	9,0	;volatile
   861  06F5                     l1396:	
   862                           
   863                           ;newmain.c: 278:     TZ = (TLV >> 4) | ((THV << 4)&0X3f);
   864  06F5  1283               	bcf	3,5	;RP0=0, select bank0
   865  06F6  1303               	bcf	3,6	;RP1=0, select bank0
   866  06F7  0849               	movf	_THV,w
   867  06F8  00CB               	movwf	??_get_temp
   868  06F9  3004               	movlw	4
   869  06FA                     u965:	
   870  06FA  1003               	clrc
   871  06FB  0DCB               	rlf	??_get_temp,f
   872  06FC  3EFF               	addlw	-1
   873  06FD  1D03               	skipz
   874  06FE  2EFA               	goto	u965
   875  06FF  303F               	movlw	63
   876  0700  054B               	andwf	??_get_temp,w
   877  0701  00CC               	movwf	??_get_temp+1
   878  0702  084A               	movf	_TLV,w
   879  0703  00CD               	movwf	??_get_temp+2
   880  0704  3004               	movlw	4
   881  0705                     u975:	
   882  0705  1003               	clrc
   883  0706  0CCD               	rrf	??_get_temp+2,f
   884  0707  3EFF               	addlw	-1
   885  0708  1D03               	skipz
   886  0709  2F05               	goto	u975
   887  070A  084D               	movf	??_get_temp+2,w
   888  070B  044C               	iorwf	??_get_temp+1,w
   889  070C  00CE               	movwf	??_get_temp+3
   890  070D  084E               	movf	??_get_temp+3,w
   891  070E  00C8               	movwf	_TZ
   892  070F                     l1398:	
   893                           
   894                           ;newmain.c: 279:     TX = TLV << 4;
   895  070F  084A               	movf	_TLV,w
   896  0710  00CB               	movwf	??_get_temp
   897  0711  3003               	movlw	3
   898  0712                     u985:	
   899  0712  1003               	clrc
   900  0713  0DCB               	rlf	??_get_temp,f
   901  0714  3EFF               	addlw	-1
   902  0715  1D03               	skipz
   903  0716  2F12               	goto	u985
   904  0717  1003               	clrc
   905  0718  0D4B               	rlf	??_get_temp,w
   906  0719  00CC               	movwf	??_get_temp+1
   907  071A  084C               	movf	??_get_temp+1,w
   908  071B  00C7               	movwf	_TX
   909  071C                     l1402:	
   910                           
   911                           ;newmain.c: 283:     intEntries = TZ % 10;
   912  071C  300A               	movlw	10
   913  071D  00F0               	movwf	___awmod@divisor
   914  071E  3000               	movlw	0
   915  071F  00F1               	movwf	___awmod@divisor+1
   916  0720  0848               	movf	_TZ,w
   917  0721  00CB               	movwf	??_get_temp
   918  0722  01CC               	clrf	??_get_temp+1
   919  0723  084B               	movf	??_get_temp,w
   920  0724  00F2               	movwf	___awmod@dividend
   921  0725  084C               	movf	??_get_temp+1,w
   922  0726  00F3               	movwf	___awmod@dividend+1
   923  0727  120A  118A  25F9  120A  118A  	fcall	___awmod
   924  072C  0870               	movf	?___awmod,w
   925  072D  1283               	bcf	3,5	;RP0=0, select bank0
   926  072E  1303               	bcf	3,6	;RP1=0, select bank0
   927  072F  00CD               	movwf	??_get_temp+2
   928  0730  084D               	movf	??_get_temp+2,w
   929  0731  00C5               	movwf	_intEntries
   930                           
   931                           ;newmain.c: 284:     tens = TZ / 10;
   932  0732  300A               	movlw	10
   933  0733  00F0               	movwf	___awdiv@divisor
   934  0734  3000               	movlw	0
   935  0735  00F1               	movwf	___awdiv@divisor+1
   936  0736  0848               	movf	_TZ,w
   937  0737  00CB               	movwf	??_get_temp
   938  0738  01CC               	clrf	??_get_temp+1
   939  0739  084B               	movf	??_get_temp,w
   940  073A  00F2               	movwf	___awdiv@dividend
   941  073B  084C               	movf	??_get_temp+1,w
   942  073C  00F3               	movwf	___awdiv@dividend+1
   943  073D  120A  118A  2652  120A  118A  	fcall	___awdiv
   944  0742  0870               	movf	?___awdiv,w
   945  0743  1283               	bcf	3,5	;RP0=0, select bank0
   946  0744  1303               	bcf	3,6	;RP1=0, select bank0
   947  0745  00CD               	movwf	??_get_temp+2
   948  0746  084D               	movf	??_get_temp+2,w
   949  0747  00C6               	movwf	_tens
   950  0748                     l1404:	
   951                           
   952                           ;newmain.c: 285:     wd = 0;
   953  0748  01BE               	clrf	_wd
   954  0749  01BF               	clrf	_wd+1
   955  074A                     l1406:	
   956                           
   957                           ;newmain.c: 286:     if (TX & 0x80) {
   958  074A  1FC7               	btfss	_TX,7
   959  074B  2F4D               	goto	u991
   960  074C  2F4E               	goto	u990
   961  074D                     u991:	
   962  074D  2F56               	goto	l1410
   963  074E                     u990:	
   964  074E                     l1408:	
   965                           
   966                           ;newmain.c: 287:         wd = wd + 5000;
   967  074E  083E               	movf	_wd,w
   968  074F  3E88               	addlw	136
   969  0750  00BE               	movwf	_wd
   970  0751  083F               	movf	_wd+1,w
   971  0752  1803               	skipnc
   972  0753  3E01               	addlw	1
   973  0754  3E13               	addlw	19
   974  0755  00BF               	movwf	_wd+1
   975  0756                     l1410:	
   976                           
   977                           ;newmain.c: 289:     if (TX & 0x40) {
   978  0756  1F47               	btfss	_TX,6
   979  0757  2F59               	goto	u1001
   980  0758  2F5A               	goto	u1000
   981  0759                     u1001:	
   982  0759  2F62               	goto	l1414
   983  075A                     u1000:	
   984  075A                     l1412:	
   985                           
   986                           ;newmain.c: 290:         wd = wd + 2500;
   987  075A  083E               	movf	_wd,w
   988  075B  3EC4               	addlw	196
   989  075C  00BE               	movwf	_wd
   990  075D  083F               	movf	_wd+1,w
   991  075E  1803               	skipnc
   992  075F  3E01               	addlw	1
   993  0760  3E09               	addlw	9
   994  0761  00BF               	movwf	_wd+1
   995  0762                     l1414:	
   996                           
   997                           ;newmain.c: 292:     if (TX & 0x20) {
   998  0762  1EC7               	btfss	_TX,5
   999  0763  2F65               	goto	u1011
  1000  0764  2F66               	goto	u1010
  1001  0765                     u1011:	
  1002  0765  2F6E               	goto	l1418
  1003  0766                     u1010:	
  1004  0766                     l1416:	
  1005                           
  1006                           ;newmain.c: 293:         wd = wd + 1250;
  1007  0766  083E               	movf	_wd,w
  1008  0767  3EE2               	addlw	226
  1009  0768  00BE               	movwf	_wd
  1010  0769  083F               	movf	_wd+1,w
  1011  076A  1803               	skipnc
  1012  076B  3E01               	addlw	1
  1013  076C  3E04               	addlw	4
  1014  076D  00BF               	movwf	_wd+1
  1015  076E                     l1418:	
  1016                           
  1017                           ;newmain.c: 295:     if (TX & 0x10) {
  1018  076E  1E47               	btfss	_TX,4
  1019  076F  2F71               	goto	u1021
  1020  0770  2F72               	goto	u1020
  1021  0771                     u1021:	
  1022  0771  2F7A               	goto	l1422
  1023  0772                     u1020:	
  1024  0772                     l1420:	
  1025                           
  1026                           ;newmain.c: 296:         wd = wd + 625;
  1027  0772  083E               	movf	_wd,w
  1028  0773  3E71               	addlw	113
  1029  0774  00BE               	movwf	_wd
  1030  0775  083F               	movf	_wd+1,w
  1031  0776  1803               	skipnc
  1032  0777  3E01               	addlw	1
  1033  0778  3E02               	addlw	2
  1034  0779  00BF               	movwf	_wd+1
  1035  077A                     l1422:	
  1036                           
  1037                           ;newmain.c: 298:     pt10 = wd / 1000;
  1038  077A  30E8               	movlw	232
  1039  077B  00F6               	movwf	___lwdiv@divisor
  1040  077C  3003               	movlw	3
  1041  077D  00F7               	movwf	___lwdiv@divisor+1
  1042  077E  083F               	movf	_wd+1,w
  1043  077F  00F9               	movwf	___lwdiv@dividend+1
  1044  0780  083E               	movf	_wd,w
  1045  0781  00F8               	movwf	___lwdiv@dividend
  1046  0782  120A  118A  25B5  120A  118A  	fcall	___lwdiv
  1047  0787  0876               	movf	?___lwdiv,w
  1048  0788  1283               	bcf	3,5	;RP0=0, select bank0
  1049  0789  1303               	bcf	3,6	;RP1=0, select bank0
  1050  078A  00CB               	movwf	??_get_temp
  1051  078B  084B               	movf	??_get_temp,w
  1052  078C  00C4               	movwf	_pt10
  1053  078D                     l1424:	
  1054                           
  1055                           ;newmain.c: 299:     pt100 = (wd % 1000) / 100;
  1056  078D  3064               	movlw	100
  1057  078E  00F6               	movwf	___lwdiv@divisor
  1058  078F  3000               	movlw	0
  1059  0790  00F7               	movwf	___lwdiv@divisor+1
  1060  0791  083F               	movf	_wd+1,w
  1061  0792  00F3               	movwf	___lwmod@dividend+1
  1062  0793  083E               	movf	_wd,w
  1063  0794  00F2               	movwf	___lwmod@dividend
  1064  0795  30E8               	movlw	232
  1065  0796  00F0               	movwf	___lwmod@divisor
  1066  0797  3003               	movlw	3
  1067  0798  00F1               	movwf	___lwmod@divisor+1
  1068  0799  120A  118A  2538  120A  118A  	fcall	___lwmod
  1069  079E  0871               	movf	?___lwmod+1,w
  1070  079F  00F9               	movwf	___lwdiv@dividend+1
  1071  07A0  0870               	movf	?___lwmod,w
  1072  07A1  00F8               	movwf	___lwdiv@dividend
  1073  07A2  120A  118A  25B5  120A  118A  	fcall	___lwdiv
  1074  07A7  0876               	movf	?___lwdiv,w
  1075  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1076  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1077  07AA  00CB               	movwf	??_get_temp
  1078  07AB  084B               	movf	??_get_temp,w
  1079  07AC  00C3               	movwf	_pt100
  1080  07AD                     l1426:	
  1081                           
  1082                           ;newmain.c: 300:     pt1000 = (wd % 100) / 10;
  1083  07AD  300A               	movlw	10
  1084  07AE  00F6               	movwf	___lwdiv@divisor
  1085  07AF  3000               	movlw	0
  1086  07B0  00F7               	movwf	___lwdiv@divisor+1
  1087  07B1  083F               	movf	_wd+1,w
  1088  07B2  00F3               	movwf	___lwmod@dividend+1
  1089  07B3  083E               	movf	_wd,w
  1090  07B4  00F2               	movwf	___lwmod@dividend
  1091  07B5  3064               	movlw	100
  1092  07B6  00F0               	movwf	___lwmod@divisor
  1093  07B7  3000               	movlw	0
  1094  07B8  00F1               	movwf	___lwmod@divisor+1
  1095  07B9  120A  118A  2538  120A  118A  	fcall	___lwmod
  1096  07BE  0871               	movf	?___lwmod+1,w
  1097  07BF  00F9               	movwf	___lwdiv@dividend+1
  1098  07C0  0870               	movf	?___lwmod,w
  1099  07C1  00F8               	movwf	___lwdiv@dividend
  1100  07C2  120A  118A  25B5  120A  118A  	fcall	___lwdiv
  1101  07C7  0876               	movf	?___lwdiv,w
  1102  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1103  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1104  07CA  00CB               	movwf	??_get_temp
  1105  07CB  084B               	movf	??_get_temp,w
  1106  07CC  00C2               	movwf	_pt1000
  1107  07CD                     l1428:	
  1108                           
  1109                           ;newmain.c: 301:     pt10000 = wd % 10;
  1110  07CD  300A               	movlw	10
  1111  07CE  00F0               	movwf	___lwmod@divisor
  1112  07CF  3000               	movlw	0
  1113  07D0  00F1               	movwf	___lwmod@divisor+1
  1114  07D1  083F               	movf	_wd+1,w
  1115  07D2  00F3               	movwf	___lwmod@dividend+1
  1116  07D3  083E               	movf	_wd,w
  1117  07D4  00F2               	movwf	___lwmod@dividend
  1118  07D5  120A  118A  2538  120A  118A  	fcall	___lwmod
  1119  07DA  0870               	movf	?___lwmod,w
  1120  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  1121  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  1122  07DD  00CB               	movwf	??_get_temp
  1123  07DE  084B               	movf	??_get_temp,w
  1124  07DF  00C1               	movwf	_pt10000
  1125  07E0                     l148:	
  1126  07E0  0008               	return
  1127  07E1                     __end_of_get_temp:	
  1128                           
  1129                           	psect	text4
  1130  0501                     __ptext4:	
  1131 ;; *************** function _write_byte *****************
  1132 ;; Defined at:
  1133 ;;		line 153 in file "newmain.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  val             1    wreg     unsigned char 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  val             1    8[COMMON] unsigned char 
  1138 ;;  i               1    9[COMMON] unsigned char 
  1139 ;;  temp            1    7[COMMON] unsigned char 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       0       0       0       0
  1150 ;;      Locals:         3       0       0       0       0
  1151 ;;      Temps:          2       0       0       0       0
  1152 ;;      Totals:         5       0       0       0       0
  1153 ;;Total ram usage:        5 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; Hardware stack levels required when called:    1
  1156 ;; This function calls:
  1157 ;;		_delay2
  1158 ;; This function is called by:
  1159 ;;		_get_temp
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           
  1164                           ;psect for function _write_byte
  1165  0501                     _write_byte:	
  1166                           
  1167                           ;incstack = 0
  1168                           ; Regs used in _write_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1169                           ;write_byte@val stored from wreg
  1170  0501  00F8               	movwf	write_byte@val
  1171  0502                     l1146:	
  1172                           
  1173                           ;newmain.c: 154:     unsigned char i;;newmain.c: 155:     unsigned char temp;;newmain.c:
      +                           158:     for (i = 8; i > 0; i--) {
  1174  0502  3008               	movlw	8
  1175  0503  00F5               	movwf	??_write_byte
  1176  0504  0875               	movf	??_write_byte,w
  1177  0505  00F9               	movwf	write_byte@i
  1178  0506                     l1152:	
  1179                           
  1180                           ;newmain.c: 159:         temp = val & 0x01;
  1181  0506  0878               	movf	write_byte@val,w
  1182  0507  3901               	andlw	1
  1183  0508  00F5               	movwf	??_write_byte
  1184  0509  0875               	movf	??_write_byte,w
  1185  050A  00F7               	movwf	write_byte@temp
  1186  050B                     l1154:	
  1187                           
  1188                           ;newmain.c: 160:         RE0 = 0; TRISE0 = 0;
  1189  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1190  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1191  050D  1009               	bcf	9,0	;volatile
  1192  050E                     l1156:	
  1193  050E  1683               	bsf	3,5	;RP0=1, select bank1
  1194  050F  1303               	bcf	3,6	;RP1=0, select bank1
  1195  0510  1009               	bcf	9,0	;volatile
  1196  0511                     l1158:	
  1197                           
  1198                           ;newmain.c: 161:         __nop();
  1199  0511  0000               	nop
  1200  0512                     l1160:	
  1201                           
  1202                           ;newmain.c: 162:         __nop();
  1203  0512  0000               	nop
  1204  0513                     l1162:	
  1205                           
  1206                           ;newmain.c: 163:         __nop();
  1207  0513  0000               	nop
  1208  0514                     l1164:	
  1209                           
  1210                           ;newmain.c: 164:         __nop();
  1211  0514  0000               	nop
  1212  0515                     l1166:	
  1213                           
  1214                           ;newmain.c: 165:         __nop();
  1215  0515  0000               	nop
  1216  0516                     l1168:	
  1217                           
  1218                           ;newmain.c: 167:         if (temp == 1) {
  1219  0516  0377               	decf	write_byte@temp,w
  1220  0517  1D03               	btfss	3,2
  1221  0518  2D1A               	goto	u581
  1222  0519  2D1B               	goto	u580
  1223  051A                     u581:	
  1224  051A  2D1E               	goto	l1172
  1225  051B                     u580:	
  1226  051B                     l1170:	
  1227                           
  1228                           ;newmain.c: 168:             TRISE0 = 1;
  1229  051B  1683               	bsf	3,5	;RP0=1, select bank1
  1230  051C  1303               	bcf	3,6	;RP1=0, select bank1
  1231  051D  1409               	bsf	9,0	;volatile
  1232  051E                     l1172:	
  1233                           
  1234                           ;newmain.c: 170:         delay2(t63us);
  1235  051E  302E               	movlw	(low (_t63us| 0))& (0+255)
  1236  051F  120A  118A  247D  120A  118A  	fcall	_delay2
  1237  0524                     l1174:	
  1238                           
  1239                           ;newmain.c: 171:         TRISE0 = 1;
  1240  0524  1683               	bsf	3,5	;RP0=1, select bank1
  1241  0525  1303               	bcf	3,6	;RP1=0, select bank1
  1242  0526  1409               	bsf	9,0	;volatile
  1243  0527                     l1176:	
  1244                           
  1245                           ;newmain.c: 172:         __nop();
  1246  0527  0000               	nop
  1247  0528                     l1178:	
  1248                           
  1249                           ;newmain.c: 173:         __nop();
  1250  0528  0000               	nop
  1251  0529                     l1180:	
  1252                           
  1253                           ;newmain.c: 174:         val = val >> 1;
  1254  0529  0878               	movf	write_byte@val,w
  1255  052A  00F5               	movwf	??_write_byte
  1256  052B  1003               	clrc
  1257  052C  0C75               	rrf	??_write_byte,w
  1258  052D  00F6               	movwf	??_write_byte+1
  1259  052E  0876               	movf	??_write_byte+1,w
  1260  052F  00F8               	movwf	write_byte@val
  1261  0530                     l1182:	
  1262                           
  1263                           ;newmain.c: 175:     }
  1264  0530  3001               	movlw	1
  1265  0531  02F9               	subwf	write_byte@i,f
  1266  0532                     l1184:	
  1267  0532  0879               	movf	write_byte@i,w
  1268  0533  1D03               	btfss	3,2
  1269  0534  2D36               	goto	u591
  1270  0535  2D37               	goto	u590
  1271  0536                     u591:	
  1272  0536  2D06               	goto	l1152
  1273  0537                     u590:	
  1274  0537                     l121:	
  1275  0537  0008               	return
  1276  0538                     __end_of_write_byte:	
  1277                           
  1278                           	psect	text5
  1279  049D                     __ptext5:	
  1280 ;; *************** function _reset *****************
  1281 ;; Defined at:
  1282 ;;		line 243 in file "newmain.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  presence        1    5[COMMON] unsigned char 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  2  134[None  ] int 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1296 ;;      Params:         0       0       0       0       0
  1297 ;;      Locals:         1       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0
  1299 ;;      Totals:         1       0       0       0       0
  1300 ;;Total ram usage:        1 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    1
  1303 ;; This function calls:
  1304 ;;		_delay2
  1305 ;; This function is called by:
  1306 ;;		_get_temp
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           
  1311                           ;psect for function _reset
  1312  049D                     _reset:	
  1313  049D                     l1240:	
  1314                           ;incstack = 0
  1315                           ; Regs used in _reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1316                           
  1317                           
  1318                           ;newmain.c: 244:     char presence = 1;
  1319  049D  01F5               	clrf	reset@presence
  1320  049E  0AF5               	incf	reset@presence,f
  1321                           
  1322                           ;newmain.c: 245:     while (presence) {
  1323  049F  2CC5               	goto	l1254
  1324  04A0                     l136:	
  1325                           
  1326                           ;newmain.c: 246:         RE0 = 0; TRISE0 = 0;
  1327  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1328  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1329  04A2  1009               	bcf	9,0	;volatile
  1330  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  1331  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  1332  04A5  1009               	bcf	9,0	;volatile
  1333  04A6                     l1242:	
  1334                           
  1335                           ;newmain.c: 247:         delay2(t503us);
  1336  04A6  303A               	movlw	(low (_t503us| 0))& (0+255)
  1337  04A7  120A  118A  247D  120A  118A  	fcall	_delay2
  1338  04AC                     l1244:	
  1339                           
  1340                           ;newmain.c: 248:         TRISE0 = 1;
  1341  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  1342  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  1343  04AE  1409               	bsf	9,0	;volatile
  1344                           
  1345                           ;newmain.c: 249:         delay2(t70us);
  1346  04AF  3032               	movlw	(low (_t70us| 0))& (0+255)
  1347  04B0  120A  118A  247D  120A  118A  	fcall	_delay2
  1348  04B5                     l1246:	
  1349                           
  1350                           ;newmain.c: 250:         if (RE0 == 1) {
  1351  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  1352  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  1353  04B7  1C09               	btfss	9,0	;volatile
  1354  04B8  2CBA               	goto	u621
  1355  04B9  2CBB               	goto	u620
  1356  04BA                     u621:	
  1357  04BA  2CBE               	goto	l1250
  1358  04BB                     u620:	
  1359  04BB                     l1248:	
  1360                           
  1361                           ;newmain.c: 251:             presence = 1;
  1362  04BB  01F5               	clrf	reset@presence
  1363  04BC  0AF5               	incf	reset@presence,f
  1364                           
  1365                           ;newmain.c: 252:         } else {
  1366  04BD  2CBF               	goto	l1252
  1367  04BE                     l1250:	
  1368                           
  1369                           ;newmain.c: 253:             presence = 0;
  1370  04BE  01F5               	clrf	reset@presence
  1371  04BF                     l1252:	
  1372                           
  1373                           ;newmain.c: 255:         delay2(t430us);
  1374  04BF  3036               	movlw	(low (_t430us| 0))& (0+255)
  1375  04C0  120A  118A  247D  120A  118A  	fcall	_delay2
  1376  04C5                     l1254:	
  1377                           
  1378                           ;newmain.c: 245:     while (presence) {
  1379  04C5  0875               	movf	reset@presence,w
  1380  04C6  1D03               	btfss	3,2
  1381  04C7  2CC9               	goto	u631
  1382  04C8  2CCA               	goto	u630
  1383  04C9                     u631:	
  1384  04C9  2CA0               	goto	l136
  1385  04CA                     u630:	
  1386  04CA                     l140:	
  1387  04CA  0008               	return
  1388  04CB                     __end_of_reset:	
  1389                           
  1390                           	psect	text6
  1391  04CB                     __ptext6:	
  1392 ;; *************** function _read_byte *****************
  1393 ;; Defined at:
  1394 ;;		line 178 in file "newmain.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  i               1    7[COMMON] unsigned char 
  1399 ;;  value           1    6[COMMON] unsigned char 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      unsigned char 
  1402 ;; Registers used:
  1403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1409 ;;      Params:         0       0       0       0       0
  1410 ;;      Locals:         2       0       0       0       0
  1411 ;;      Temps:          1       0       0       0       0
  1412 ;;      Totals:         3       0       0       0       0
  1413 ;;Total ram usage:        3 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    1
  1416 ;; This function calls:
  1417 ;;		_delay2
  1418 ;; This function is called by:
  1419 ;;		_get_temp
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           
  1424                           ;psect for function _read_byte
  1425  04CB                     _read_byte:	
  1426  04CB                     l1186:	
  1427                           ;incstack = 0
  1428                           ; Regs used in _read_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1429                           
  1430                           
  1431                           ;newmain.c: 179:     unsigned char i;;newmain.c: 180:     unsigned char value = 0;
  1432  04CB  01F6               	clrf	read_byte@value
  1433  04CC                     l1188:	
  1434                           
  1435                           ;newmain.c: 181:     static char j;;newmain.c: 183:     for (i = 8; i > 0; i--) {
  1436  04CC  3008               	movlw	8
  1437  04CD  00F5               	movwf	??_read_byte
  1438  04CE  0875               	movf	??_read_byte,w
  1439  04CF  00F7               	movwf	read_byte@i
  1440  04D0                     l1194:	
  1441                           
  1442                           ;newmain.c: 184:         value >>= 1;
  1443  04D0  1003               	clrc
  1444  04D1  0CF6               	rrf	read_byte@value,f
  1445  04D2                     l1196:	
  1446                           
  1447                           ;newmain.c: 185:         RE0 = 0; TRISE0 = 0;
  1448  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  1449  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  1450  04D4  1009               	bcf	9,0	;volatile
  1451  04D5                     l1198:	
  1452  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  1453  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  1454  04D7  1009               	bcf	9,0	;volatile
  1455  04D8                     l1200:	
  1456                           
  1457                           ;newmain.c: 186:         __nop();
  1458  04D8  0000               	nop
  1459  04D9                     l1202:	
  1460                           
  1461                           ;newmain.c: 187:         __nop();
  1462  04D9  0000               	nop
  1463  04DA                     l1204:	
  1464                           
  1465                           ;newmain.c: 188:         __nop();
  1466  04DA  0000               	nop
  1467  04DB                     l1206:	
  1468                           
  1469                           ;newmain.c: 189:         __nop();
  1470  04DB  0000               	nop
  1471  04DC                     l1208:	
  1472                           
  1473                           ;newmain.c: 190:         __nop();
  1474  04DC  0000               	nop
  1475  04DD                     l1210:	
  1476                           
  1477                           ;newmain.c: 191:         __nop();
  1478  04DD  0000               	nop
  1479  04DE                     l1212:	
  1480                           
  1481                           ;newmain.c: 192:         TRISE0 = 1;
  1482  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  1483  04DF  1303               	bcf	3,6	;RP1=0, select bank1
  1484  04E0  1409               	bsf	9,0	;volatile
  1485  04E1                     l1214:	
  1486                           
  1487                           ;newmain.c: 193:         __nop();
  1488  04E1  0000               	nop
  1489  04E2                     l1216:	
  1490                           
  1491                           ;newmain.c: 194:         __nop();
  1492  04E2  0000               	nop
  1493  04E3                     l1218:	
  1494                           
  1495                           ;newmain.c: 195:         __nop();
  1496  04E3  0000               	nop
  1497  04E4                     l1220:	
  1498                           
  1499                           ;newmain.c: 196:         __nop();
  1500  04E4  0000               	nop
  1501  04E5                     l1222:	
  1502                           
  1503                           ;newmain.c: 197:         __nop();
  1504  04E5  0000               	nop
  1505  04E6                     l1224:	
  1506                           
  1507                           ;newmain.c: 198:         j = RE0;
  1508  04E6  3000               	movlw	0
  1509  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  1510  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  1511  04E9  1809               	btfsc	9,0	;volatile
  1512  04EA  3001               	movlw	1
  1513  04EB  00C0               	movwf	read_byte@j
  1514  04EC                     l1226:	
  1515                           
  1516                           ;newmain.c: 199:         if (j) value |= 0x80;
  1517  04EC  0840               	movf	read_byte@j,w
  1518  04ED  1903               	btfsc	3,2
  1519  04EE  2CF0               	goto	u601
  1520  04EF  2CF1               	goto	u600
  1521  04F0                     u601:	
  1522  04F0  2CF2               	goto	l1230
  1523  04F1                     u600:	
  1524  04F1                     l1228:	
  1525  04F1  17F6               	bsf	read_byte@value,7
  1526  04F2                     l1230:	
  1527                           
  1528                           ;newmain.c: 200:         delay2(t63us);
  1529  04F2  302E               	movlw	(low (_t63us| 0))& (0+255)
  1530  04F3  120A  118A  247D  120A  118A  	fcall	_delay2
  1531  04F8                     l1232:	
  1532                           
  1533                           ;newmain.c: 201:     }
  1534  04F8  3001               	movlw	1
  1535  04F9  02F7               	subwf	read_byte@i,f
  1536  04FA                     l1234:	
  1537  04FA  0877               	movf	read_byte@i,w
  1538  04FB  1D03               	btfss	3,2
  1539  04FC  2CFE               	goto	u611
  1540  04FD  2CFF               	goto	u610
  1541  04FE                     u611:	
  1542  04FE  2CD0               	goto	l1194
  1543  04FF                     u610:	
  1544  04FF                     l1236:	
  1545                           
  1546                           ;newmain.c: 202:     return (value);
  1547  04FF  0876               	movf	read_byte@value,w
  1548  0500                     l129:	
  1549  0500  0008               	return
  1550  0501                     __end_of_read_byte:	
  1551                           
  1552                           	psect	text7
  1553  047D                     __ptext7:	
  1554 ;; *************** function _delay2 *****************
  1555 ;; Defined at:
  1556 ;;		line 140 in file "newmain.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  t               1    wreg     PTR int 
  1559 ;;		 -> t430us(4), t70us(4), t503us(4), t63us(4), 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;  t               1    4[COMMON] PTR int 
  1562 ;;		 -> t430us(4), t70us(4), t503us(4), t63us(4), 
  1563 ;;  z               1    3[COMMON] unsigned char 
  1564 ;;  y               1    2[COMMON] unsigned char 
  1565 ;;  x               1    1[COMMON] unsigned char 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1575 ;;      Params:         0       0       0       0       0
  1576 ;;      Locals:         4       0       0       0       0
  1577 ;;      Temps:          1       0       0       0       0
  1578 ;;      Totals:         5       0       0       0       0
  1579 ;;Total ram usage:        5 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_write_byte
  1585 ;;		_read_byte
  1586 ;;		_reset
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           
  1591                           ;psect for function _delay2
  1592  047D                     _delay2:	
  1593                           
  1594                           ;incstack = 0
  1595                           ; Regs used in _delay2: [wreg-fsr0h+status,2+status,0]
  1596                           ;delay2@t stored from wreg
  1597  047D  00F4               	movwf	delay2@t
  1598  047E                     l1118:	
  1599                           
  1600                           ;newmain.c: 141:     char x = t[0];
  1601  047E  0874               	movf	delay2@t,w
  1602  047F  0084               	movwf	4
  1603  0480  1383               	bcf	3,7	;select IRP bank0
  1604  0481  0800               	movf	0,w
  1605  0482  00F0               	movwf	??_delay2
  1606  0483  0870               	movf	??_delay2,w
  1607  0484  00F1               	movwf	delay2@x
  1608  0485                     l1120:	
  1609                           
  1610                           ;newmain.c: 142:     char y = t[1];
  1611  0485  0874               	movf	delay2@t,w
  1612  0486  3E02               	addlw	2
  1613  0487  0084               	movwf	4
  1614  0488  0800               	movf	0,w
  1615  0489  00F0               	movwf	??_delay2
  1616  048A  0870               	movf	??_delay2,w
  1617  048B  00F2               	movwf	delay2@y
  1618  048C                     l1122:	
  1619                           
  1620                           ;newmain.c: 146:         z = y;
  1621  048C  0872               	movf	delay2@y,w
  1622  048D  00F0               	movwf	??_delay2
  1623  048E  0870               	movf	??_delay2,w
  1624  048F  00F3               	movwf	delay2@z
  1625  0490                     l112:	
  1626                           ;newmain.c: 147:         do {
  1627                           
  1628                           
  1629                           ;newmain.c: 149:         } while (--z);
  1630  0490  3001               	movlw	1
  1631  0491  02F3               	subwf	delay2@z,f
  1632  0492  1D03               	btfss	3,2
  1633  0493  2C95               	goto	u561
  1634  0494  2C96               	goto	u560
  1635  0495                     u561:	
  1636  0495  2C90               	goto	l112
  1637  0496                     u560:	
  1638  0496                     l1124:	
  1639                           
  1640                           ;newmain.c: 150:     } while (--x);
  1641  0496  3001               	movlw	1
  1642  0497  02F1               	subwf	delay2@x,f
  1643  0498  1D03               	btfss	3,2
  1644  0499  2C9B               	goto	u571
  1645  049A  2C9C               	goto	u570
  1646  049B                     u571:	
  1647  049B  2C8C               	goto	l1122
  1648  049C                     u570:	
  1649  049C                     l115:	
  1650  049C  0008               	return
  1651  049D                     __end_of_delay2:	
  1652                           
  1653                           	psect	text8
  1654  0538                     __ptext8:	
  1655 ;; *************** function ___lwmod *****************
  1656 ;; Defined at:
  1657 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  divisor         2    0[COMMON] unsigned int 
  1660 ;;  dividend        2    2[COMMON] unsigned int 
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  counter         1    5[COMMON] unsigned char 
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  2    0[COMMON] unsigned int 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2, status,0
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1672 ;;      Params:         4       0       0       0       0
  1673 ;;      Locals:         1       0       0       0       0
  1674 ;;      Temps:          1       0       0       0       0
  1675 ;;      Totals:         6       0       0       0       0
  1676 ;;Total ram usage:        6 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_get_temp
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           
  1686                           ;psect for function ___lwmod
  1687  0538                     ___lwmod:	
  1688  0538                     l1364:	
  1689                           ;incstack = 0
  1690                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1691                           
  1692  0538  0870               	movf	___lwmod@divisor,w
  1693  0539  0471               	iorwf	___lwmod@divisor+1,w
  1694  053A  1903               	btfsc	3,2
  1695  053B  2D3D               	goto	u901
  1696  053C  2D3E               	goto	u900
  1697  053D                     u901:	
  1698  053D  2D6D               	goto	l1382
  1699  053E                     u900:	
  1700  053E                     l1366:	
  1701  053E  01F5               	clrf	___lwmod@counter
  1702  053F  0AF5               	incf	___lwmod@counter,f
  1703  0540  2D4C               	goto	l1372
  1704  0541                     l1368:	
  1705  0541  3001               	movlw	1
  1706  0542                     u915:	
  1707  0542  1003               	clrc
  1708  0543  0DF0               	rlf	___lwmod@divisor,f
  1709  0544  0DF1               	rlf	___lwmod@divisor+1,f
  1710  0545  3EFF               	addlw	-1
  1711  0546  1D03               	skipz
  1712  0547  2D42               	goto	u915
  1713  0548                     l1370:	
  1714  0548  3001               	movlw	1
  1715  0549  00F4               	movwf	??___lwmod
  1716  054A  0874               	movf	??___lwmod,w
  1717  054B  07F5               	addwf	___lwmod@counter,f
  1718  054C                     l1372:	
  1719  054C  1FF1               	btfss	___lwmod@divisor+1,7
  1720  054D  2D4F               	goto	u921
  1721  054E  2D50               	goto	u920
  1722  054F                     u921:	
  1723  054F  2D41               	goto	l1368
  1724  0550                     u920:	
  1725  0550                     l1374:	
  1726  0550  0871               	movf	___lwmod@divisor+1,w
  1727  0551  0273               	subwf	___lwmod@dividend+1,w
  1728  0552  1D03               	skipz
  1729  0553  2D56               	goto	u935
  1730  0554  0870               	movf	___lwmod@divisor,w
  1731  0555  0272               	subwf	___lwmod@dividend,w
  1732  0556                     u935:	
  1733  0556  1C03               	skipc
  1734  0557  2D59               	goto	u931
  1735  0558  2D5A               	goto	u930
  1736  0559                     u931:	
  1737  0559  2D60               	goto	l1378
  1738  055A                     u930:	
  1739  055A                     l1376:	
  1740  055A  0870               	movf	___lwmod@divisor,w
  1741  055B  02F2               	subwf	___lwmod@dividend,f
  1742  055C  0871               	movf	___lwmod@divisor+1,w
  1743  055D  1C03               	skipc
  1744  055E  03F3               	decf	___lwmod@dividend+1,f
  1745  055F  02F3               	subwf	___lwmod@dividend+1,f
  1746  0560                     l1378:	
  1747  0560  3001               	movlw	1
  1748  0561                     u945:	
  1749  0561  1003               	clrc
  1750  0562  0CF1               	rrf	___lwmod@divisor+1,f
  1751  0563  0CF0               	rrf	___lwmod@divisor,f
  1752  0564  3EFF               	addlw	-1
  1753  0565  1D03               	skipz
  1754  0566  2D61               	goto	u945
  1755  0567                     l1380:	
  1756  0567  3001               	movlw	1
  1757  0568  02F5               	subwf	___lwmod@counter,f
  1758  0569  1D03               	btfss	3,2
  1759  056A  2D6C               	goto	u951
  1760  056B  2D6D               	goto	u950
  1761  056C                     u951:	
  1762  056C  2D50               	goto	l1374
  1763  056D                     u950:	
  1764  056D                     l1382:	
  1765  056D  0873               	movf	___lwmod@dividend+1,w
  1766  056E  00F1               	movwf	?___lwmod+1
  1767  056F  0872               	movf	___lwmod@dividend,w
  1768  0570  00F0               	movwf	?___lwmod
  1769  0571                     l524:	
  1770  0571  0008               	return
  1771  0572                     __end_of___lwmod:	
  1772                           
  1773                           	psect	text9
  1774  05B5                     __ptext9:	
  1775 ;; *************** function ___lwdiv *****************
  1776 ;; Defined at:
  1777 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  divisor         2    6[COMMON] unsigned int 
  1780 ;;  dividend        2    8[COMMON] unsigned int 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  quotient        2   11[COMMON] unsigned int 
  1783 ;;  counter         1   13[COMMON] unsigned char 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  2    6[COMMON] unsigned int 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2, status,0
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1793 ;;      Params:         4       0       0       0       0
  1794 ;;      Locals:         3       0       0       0       0
  1795 ;;      Temps:          1       0       0       0       0
  1796 ;;      Totals:         8       0       0       0       0
  1797 ;;Total ram usage:        8 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; This function calls:
  1800 ;;		Nothing
  1801 ;; This function is called by:
  1802 ;;		_get_temp
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           
  1807                           ;psect for function ___lwdiv
  1808  05B5                     ___lwdiv:	
  1809  05B5                     l1338:	
  1810                           ;incstack = 0
  1811                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1812                           
  1813  05B5  01FB               	clrf	___lwdiv@quotient
  1814  05B6  01FC               	clrf	___lwdiv@quotient+1
  1815  05B7                     l1340:	
  1816  05B7  0876               	movf	___lwdiv@divisor,w
  1817  05B8  0477               	iorwf	___lwdiv@divisor+1,w
  1818  05B9  1903               	btfsc	3,2
  1819  05BA  2DBC               	goto	u831
  1820  05BB  2DBD               	goto	u830
  1821  05BC                     u831:	
  1822  05BC  2DF4               	goto	l1360
  1823  05BD                     u830:	
  1824  05BD                     l1342:	
  1825  05BD  01FD               	clrf	___lwdiv@counter
  1826  05BE  0AFD               	incf	___lwdiv@counter,f
  1827  05BF  2DCB               	goto	l1348
  1828  05C0                     l1344:	
  1829  05C0  3001               	movlw	1
  1830  05C1                     u845:	
  1831  05C1  1003               	clrc
  1832  05C2  0DF6               	rlf	___lwdiv@divisor,f
  1833  05C3  0DF7               	rlf	___lwdiv@divisor+1,f
  1834  05C4  3EFF               	addlw	-1
  1835  05C5  1D03               	skipz
  1836  05C6  2DC1               	goto	u845
  1837  05C7                     l1346:	
  1838  05C7  3001               	movlw	1
  1839  05C8  00FA               	movwf	??___lwdiv
  1840  05C9  087A               	movf	??___lwdiv,w
  1841  05CA  07FD               	addwf	___lwdiv@counter,f
  1842  05CB                     l1348:	
  1843  05CB  1FF7               	btfss	___lwdiv@divisor+1,7
  1844  05CC  2DCE               	goto	u851
  1845  05CD  2DCF               	goto	u850
  1846  05CE                     u851:	
  1847  05CE  2DC0               	goto	l1344
  1848  05CF                     u850:	
  1849  05CF                     l1350:	
  1850  05CF  3001               	movlw	1
  1851  05D0                     u865:	
  1852  05D0  1003               	clrc
  1853  05D1  0DFB               	rlf	___lwdiv@quotient,f
  1854  05D2  0DFC               	rlf	___lwdiv@quotient+1,f
  1855  05D3  3EFF               	addlw	-1
  1856  05D4  1D03               	skipz
  1857  05D5  2DD0               	goto	u865
  1858  05D6  0877               	movf	___lwdiv@divisor+1,w
  1859  05D7  0279               	subwf	___lwdiv@dividend+1,w
  1860  05D8  1D03               	skipz
  1861  05D9  2DDC               	goto	u875
  1862  05DA  0876               	movf	___lwdiv@divisor,w
  1863  05DB  0278               	subwf	___lwdiv@dividend,w
  1864  05DC                     u875:	
  1865  05DC  1C03               	skipc
  1866  05DD  2DDF               	goto	u871
  1867  05DE  2DE0               	goto	u870
  1868  05DF                     u871:	
  1869  05DF  2DE7               	goto	l1356
  1870  05E0                     u870:	
  1871  05E0                     l1352:	
  1872  05E0  0876               	movf	___lwdiv@divisor,w
  1873  05E1  02F8               	subwf	___lwdiv@dividend,f
  1874  05E2  0877               	movf	___lwdiv@divisor+1,w
  1875  05E3  1C03               	skipc
  1876  05E4  03F9               	decf	___lwdiv@dividend+1,f
  1877  05E5  02F9               	subwf	___lwdiv@dividend+1,f
  1878  05E6                     l1354:	
  1879  05E6  147B               	bsf	___lwdiv@quotient,0
  1880  05E7                     l1356:	
  1881  05E7  3001               	movlw	1
  1882  05E8                     u885:	
  1883  05E8  1003               	clrc
  1884  05E9  0CF7               	rrf	___lwdiv@divisor+1,f
  1885  05EA  0CF6               	rrf	___lwdiv@divisor,f
  1886  05EB  3EFF               	addlw	-1
  1887  05EC  1D03               	skipz
  1888  05ED  2DE8               	goto	u885
  1889  05EE                     l1358:	
  1890  05EE  3001               	movlw	1
  1891  05EF  02FD               	subwf	___lwdiv@counter,f
  1892  05F0  1D03               	btfss	3,2
  1893  05F1  2DF3               	goto	u891
  1894  05F2  2DF4               	goto	u890
  1895  05F3                     u891:	
  1896  05F3  2DCF               	goto	l1350
  1897  05F4                     u890:	
  1898  05F4                     l1360:	
  1899  05F4  087C               	movf	___lwdiv@quotient+1,w
  1900  05F5  00F7               	movwf	?___lwdiv+1
  1901  05F6  087B               	movf	___lwdiv@quotient,w
  1902  05F7  00F6               	movwf	?___lwdiv
  1903  05F8                     l514:	
  1904  05F8  0008               	return
  1905  05F9                     __end_of___lwdiv:	
  1906                           
  1907                           	psect	text10
  1908  05F9                     __ptext10:	
  1909 ;; *************** function ___awmod *****************
  1910 ;; Defined at:
  1911 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  divisor         2    0[COMMON] int 
  1914 ;;  dividend        2    2[COMMON] int 
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;  sign            1    6[COMMON] unsigned char 
  1917 ;;  counter         1    5[COMMON] unsigned char 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  2    0[COMMON] int 
  1920 ;; Registers used:
  1921 ;;		wreg, status,2, status,0
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1927 ;;      Params:         4       0       0       0       0
  1928 ;;      Locals:         2       0       0       0       0
  1929 ;;      Temps:          1       0       0       0       0
  1930 ;;      Totals:         7       0       0       0       0
  1931 ;;Total ram usage:        7 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; This function calls:
  1934 ;;		Nothing
  1935 ;; This function is called by:
  1936 ;;		_get_temp
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           
  1941                           ;psect for function ___awmod
  1942  05F9                     ___awmod:	
  1943  05F9                     l1300:	
  1944                           ;incstack = 0
  1945                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1946                           
  1947  05F9  01F6               	clrf	___awmod@sign
  1948  05FA                     l1302:	
  1949  05FA  1FF3               	btfss	___awmod@dividend+1,7
  1950  05FB  2DFD               	goto	u741
  1951  05FC  2DFE               	goto	u740
  1952  05FD                     u741:	
  1953  05FD  2E05               	goto	l1308
  1954  05FE                     u740:	
  1955  05FE                     l1304:	
  1956  05FE  09F2               	comf	___awmod@dividend,f
  1957  05FF  09F3               	comf	___awmod@dividend+1,f
  1958  0600  0AF2               	incf	___awmod@dividend,f
  1959  0601  1903               	skipnz
  1960  0602  0AF3               	incf	___awmod@dividend+1,f
  1961  0603                     l1306:	
  1962  0603  01F6               	clrf	___awmod@sign
  1963  0604  0AF6               	incf	___awmod@sign,f
  1964  0605                     l1308:	
  1965  0605  1FF1               	btfss	___awmod@divisor+1,7
  1966  0606  2E08               	goto	u751
  1967  0607  2E09               	goto	u750
  1968  0608                     u751:	
  1969  0608  2E0E               	goto	l1312
  1970  0609                     u750:	
  1971  0609                     l1310:	
  1972  0609  09F0               	comf	___awmod@divisor,f
  1973  060A  09F1               	comf	___awmod@divisor+1,f
  1974  060B  0AF0               	incf	___awmod@divisor,f
  1975  060C  1903               	skipnz
  1976  060D  0AF1               	incf	___awmod@divisor+1,f
  1977  060E                     l1312:	
  1978  060E  0870               	movf	___awmod@divisor,w
  1979  060F  0471               	iorwf	___awmod@divisor+1,w
  1980  0610  1903               	btfsc	3,2
  1981  0611  2E13               	goto	u761
  1982  0612  2E14               	goto	u760
  1983  0613                     u761:	
  1984  0613  2E43               	goto	l1330
  1985  0614                     u760:	
  1986  0614                     l1314:	
  1987  0614  01F5               	clrf	___awmod@counter
  1988  0615  0AF5               	incf	___awmod@counter,f
  1989  0616  2E22               	goto	l1320
  1990  0617                     l1316:	
  1991  0617  3001               	movlw	1
  1992  0618                     u775:	
  1993  0618  1003               	clrc
  1994  0619  0DF0               	rlf	___awmod@divisor,f
  1995  061A  0DF1               	rlf	___awmod@divisor+1,f
  1996  061B  3EFF               	addlw	-1
  1997  061C  1D03               	skipz
  1998  061D  2E18               	goto	u775
  1999  061E                     l1318:	
  2000  061E  3001               	movlw	1
  2001  061F  00F4               	movwf	??___awmod
  2002  0620  0874               	movf	??___awmod,w
  2003  0621  07F5               	addwf	___awmod@counter,f
  2004  0622                     l1320:	
  2005  0622  1FF1               	btfss	___awmod@divisor+1,7
  2006  0623  2E25               	goto	u781
  2007  0624  2E26               	goto	u780
  2008  0625                     u781:	
  2009  0625  2E17               	goto	l1316
  2010  0626                     u780:	
  2011  0626                     l1322:	
  2012  0626  0871               	movf	___awmod@divisor+1,w
  2013  0627  0273               	subwf	___awmod@dividend+1,w
  2014  0628  1D03               	skipz
  2015  0629  2E2C               	goto	u795
  2016  062A  0870               	movf	___awmod@divisor,w
  2017  062B  0272               	subwf	___awmod@dividend,w
  2018  062C                     u795:	
  2019  062C  1C03               	skipc
  2020  062D  2E2F               	goto	u791
  2021  062E  2E30               	goto	u790
  2022  062F                     u791:	
  2023  062F  2E36               	goto	l1326
  2024  0630                     u790:	
  2025  0630                     l1324:	
  2026  0630  0870               	movf	___awmod@divisor,w
  2027  0631  02F2               	subwf	___awmod@dividend,f
  2028  0632  0871               	movf	___awmod@divisor+1,w
  2029  0633  1C03               	skipc
  2030  0634  03F3               	decf	___awmod@dividend+1,f
  2031  0635  02F3               	subwf	___awmod@dividend+1,f
  2032  0636                     l1326:	
  2033  0636  3001               	movlw	1
  2034  0637                     u805:	
  2035  0637  1003               	clrc
  2036  0638  0CF1               	rrf	___awmod@divisor+1,f
  2037  0639  0CF0               	rrf	___awmod@divisor,f
  2038  063A  3EFF               	addlw	-1
  2039  063B  1D03               	skipz
  2040  063C  2E37               	goto	u805
  2041  063D                     l1328:	
  2042  063D  3001               	movlw	1
  2043  063E  02F5               	subwf	___awmod@counter,f
  2044  063F  1D03               	btfss	3,2
  2045  0640  2E42               	goto	u811
  2046  0641  2E43               	goto	u810
  2047  0642                     u811:	
  2048  0642  2E26               	goto	l1322
  2049  0643                     u810:	
  2050  0643                     l1330:	
  2051  0643  0876               	movf	___awmod@sign,w
  2052  0644  1903               	btfsc	3,2
  2053  0645  2E47               	goto	u821
  2054  0646  2E48               	goto	u820
  2055  0647                     u821:	
  2056  0647  2E4D               	goto	l1334
  2057  0648                     u820:	
  2058  0648                     l1332:	
  2059  0648  09F2               	comf	___awmod@dividend,f
  2060  0649  09F3               	comf	___awmod@dividend+1,f
  2061  064A  0AF2               	incf	___awmod@dividend,f
  2062  064B  1903               	skipnz
  2063  064C  0AF3               	incf	___awmod@dividend+1,f
  2064  064D                     l1334:	
  2065  064D  0873               	movf	___awmod@dividend+1,w
  2066  064E  00F1               	movwf	?___awmod+1
  2067  064F  0872               	movf	___awmod@dividend,w
  2068  0650  00F0               	movwf	?___awmod
  2069  0651                     l408:	
  2070  0651  0008               	return
  2071  0652                     __end_of___awmod:	
  2072                           
  2073                           	psect	text11
  2074  0652                     __ptext11:	
  2075 ;; *************** function ___awdiv *****************
  2076 ;; Defined at:
  2077 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  divisor         2    0[COMMON] int 
  2080 ;;  dividend        2    2[COMMON] int 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  quotient        2    7[COMMON] int 
  2083 ;;  sign            1    6[COMMON] unsigned char 
  2084 ;;  counter         1    5[COMMON] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  2    0[COMMON] int 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, status,0
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2094 ;;      Params:         4       0       0       0       0
  2095 ;;      Locals:         4       0       0       0       0
  2096 ;;      Temps:          1       0       0       0       0
  2097 ;;      Totals:         9       0       0       0       0
  2098 ;;Total ram usage:        9 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_get_temp
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           
  2108                           ;psect for function ___awdiv
  2109  0652                     ___awdiv:	
  2110  0652                     l1256:	
  2111                           ;incstack = 0
  2112                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2113                           
  2114  0652  01F6               	clrf	___awdiv@sign
  2115  0653                     l1258:	
  2116  0653  1FF1               	btfss	___awdiv@divisor+1,7
  2117  0654  2E56               	goto	u641
  2118  0655  2E57               	goto	u640
  2119  0656                     u641:	
  2120  0656  2E5E               	goto	l1264
  2121  0657                     u640:	
  2122  0657                     l1260:	
  2123  0657  09F0               	comf	___awdiv@divisor,f
  2124  0658  09F1               	comf	___awdiv@divisor+1,f
  2125  0659  0AF0               	incf	___awdiv@divisor,f
  2126  065A  1903               	skipnz
  2127  065B  0AF1               	incf	___awdiv@divisor+1,f
  2128  065C                     l1262:	
  2129  065C  01F6               	clrf	___awdiv@sign
  2130  065D  0AF6               	incf	___awdiv@sign,f
  2131  065E                     l1264:	
  2132  065E  1FF3               	btfss	___awdiv@dividend+1,7
  2133  065F  2E61               	goto	u651
  2134  0660  2E62               	goto	u650
  2135  0661                     u651:	
  2136  0661  2E6B               	goto	l1270
  2137  0662                     u650:	
  2138  0662                     l1266:	
  2139  0662  09F2               	comf	___awdiv@dividend,f
  2140  0663  09F3               	comf	___awdiv@dividend+1,f
  2141  0664  0AF2               	incf	___awdiv@dividend,f
  2142  0665  1903               	skipnz
  2143  0666  0AF3               	incf	___awdiv@dividend+1,f
  2144  0667                     l1268:	
  2145  0667  3001               	movlw	1
  2146  0668  00F4               	movwf	??___awdiv
  2147  0669  0874               	movf	??___awdiv,w
  2148  066A  06F6               	xorwf	___awdiv@sign,f
  2149  066B                     l1270:	
  2150  066B  01F7               	clrf	___awdiv@quotient
  2151  066C  01F8               	clrf	___awdiv@quotient+1
  2152  066D                     l1272:	
  2153  066D  0870               	movf	___awdiv@divisor,w
  2154  066E  0471               	iorwf	___awdiv@divisor+1,w
  2155  066F  1903               	btfsc	3,2
  2156  0670  2E72               	goto	u661
  2157  0671  2E73               	goto	u660
  2158  0672                     u661:	
  2159  0672  2EAA               	goto	l1292
  2160  0673                     u660:	
  2161  0673                     l1274:	
  2162  0673  01F5               	clrf	___awdiv@counter
  2163  0674  0AF5               	incf	___awdiv@counter,f
  2164  0675  2E81               	goto	l1280
  2165  0676                     l1276:	
  2166  0676  3001               	movlw	1
  2167  0677                     u675:	
  2168  0677  1003               	clrc
  2169  0678  0DF0               	rlf	___awdiv@divisor,f
  2170  0679  0DF1               	rlf	___awdiv@divisor+1,f
  2171  067A  3EFF               	addlw	-1
  2172  067B  1D03               	skipz
  2173  067C  2E77               	goto	u675
  2174  067D                     l1278:	
  2175  067D  3001               	movlw	1
  2176  067E  00F4               	movwf	??___awdiv
  2177  067F  0874               	movf	??___awdiv,w
  2178  0680  07F5               	addwf	___awdiv@counter,f
  2179  0681                     l1280:	
  2180  0681  1FF1               	btfss	___awdiv@divisor+1,7
  2181  0682  2E84               	goto	u681
  2182  0683  2E85               	goto	u680
  2183  0684                     u681:	
  2184  0684  2E76               	goto	l1276
  2185  0685                     u680:	
  2186  0685                     l1282:	
  2187  0685  3001               	movlw	1
  2188  0686                     u695:	
  2189  0686  1003               	clrc
  2190  0687  0DF7               	rlf	___awdiv@quotient,f
  2191  0688  0DF8               	rlf	___awdiv@quotient+1,f
  2192  0689  3EFF               	addlw	-1
  2193  068A  1D03               	skipz
  2194  068B  2E86               	goto	u695
  2195  068C  0871               	movf	___awdiv@divisor+1,w
  2196  068D  0273               	subwf	___awdiv@dividend+1,w
  2197  068E  1D03               	skipz
  2198  068F  2E92               	goto	u705
  2199  0690  0870               	movf	___awdiv@divisor,w
  2200  0691  0272               	subwf	___awdiv@dividend,w
  2201  0692                     u705:	
  2202  0692  1C03               	skipc
  2203  0693  2E95               	goto	u701
  2204  0694  2E96               	goto	u700
  2205  0695                     u701:	
  2206  0695  2E9D               	goto	l1288
  2207  0696                     u700:	
  2208  0696                     l1284:	
  2209  0696  0870               	movf	___awdiv@divisor,w
  2210  0697  02F2               	subwf	___awdiv@dividend,f
  2211  0698  0871               	movf	___awdiv@divisor+1,w
  2212  0699  1C03               	skipc
  2213  069A  03F3               	decf	___awdiv@dividend+1,f
  2214  069B  02F3               	subwf	___awdiv@dividend+1,f
  2215  069C                     l1286:	
  2216  069C  1477               	bsf	___awdiv@quotient,0
  2217  069D                     l1288:	
  2218  069D  3001               	movlw	1
  2219  069E                     u715:	
  2220  069E  1003               	clrc
  2221  069F  0CF1               	rrf	___awdiv@divisor+1,f
  2222  06A0  0CF0               	rrf	___awdiv@divisor,f
  2223  06A1  3EFF               	addlw	-1
  2224  06A2  1D03               	skipz
  2225  06A3  2E9E               	goto	u715
  2226  06A4                     l1290:	
  2227  06A4  3001               	movlw	1
  2228  06A5  02F5               	subwf	___awdiv@counter,f
  2229  06A6  1D03               	btfss	3,2
  2230  06A7  2EA9               	goto	u721
  2231  06A8  2EAA               	goto	u720
  2232  06A9                     u721:	
  2233  06A9  2E85               	goto	l1282
  2234  06AA                     u720:	
  2235  06AA                     l1292:	
  2236  06AA  0876               	movf	___awdiv@sign,w
  2237  06AB  1903               	btfsc	3,2
  2238  06AC  2EAE               	goto	u731
  2239  06AD  2EAF               	goto	u730
  2240  06AE                     u731:	
  2241  06AE  2EB4               	goto	l1296
  2242  06AF                     u730:	
  2243  06AF                     l1294:	
  2244  06AF  09F7               	comf	___awdiv@quotient,f
  2245  06B0  09F8               	comf	___awdiv@quotient+1,f
  2246  06B1  0AF7               	incf	___awdiv@quotient,f
  2247  06B2  1903               	skipnz
  2248  06B3  0AF8               	incf	___awdiv@quotient+1,f
  2249  06B4                     l1296:	
  2250  06B4  0878               	movf	___awdiv@quotient+1,w
  2251  06B5  00F1               	movwf	?___awdiv+1
  2252  06B6  0877               	movf	___awdiv@quotient,w
  2253  06B7  00F0               	movwf	?___awdiv
  2254  06B8                     l395:	
  2255  06B8  0008               	return
  2256  06B9                     __end_of___awdiv:	
  2257                           
  2258                           	psect	text12
  2259  0572                     __ptext12:	
  2260 ;; *************** function _display_temp *****************
  2261 ;; Defined at:
  2262 ;;		line 205 in file "newmain.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg, status,2, status,0, pclath, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2276 ;;      Params:         0       0       0       0       0
  2277 ;;      Locals:         0       0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0
  2279 ;;      Totals:         0       0       0       0       0
  2280 ;;Total ram usage:        0 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    2
  2283 ;; This function calls:
  2284 ;;		_writechar
  2285 ;;		_writecmd
  2286 ;; This function is called by:
  2287 ;;		_main
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           
  2292                           ;psect for function _display_temp
  2293  0572                     _display_temp:	
  2294  0572                     l1388:	
  2295                           ;incstack = 0
  2296                           ; Regs used in _display_temp: [wreg+status,2+status,0+pclath+cstack]
  2297                           
  2298                           
  2299                           ;newmain.c: 208:     writechar(tens + 48);
  2300  0572  1283               	bcf	3,5	;RP0=0, select bank0
  2301  0573  1303               	bcf	3,6	;RP1=0, select bank0
  2302  0574  0846               	movf	_tens,w
  2303  0575  3E30               	addlw	48
  2304  0576  120A  118A  2405  120A  118A  	fcall	_writechar
  2305                           
  2306                           ;newmain.c: 209:     writechar(intEntries + 48);
  2307  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2308  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2309  057D  0845               	movf	_intEntries,w
  2310  057E  3E30               	addlw	48
  2311  057F  120A  118A  2405  120A  118A  	fcall	_writechar
  2312                           
  2313                           ;newmain.c: 210:     writechar('.');
  2314  0584  302E               	movlw	46
  2315  0585  120A  118A  2405  120A  118A  	fcall	_writechar
  2316                           
  2317                           ;newmain.c: 211:     writechar(pt10 + 48);
  2318  058A  1283               	bcf	3,5	;RP0=0, select bank0
  2319  058B  1303               	bcf	3,6	;RP1=0, select bank0
  2320  058C  0844               	movf	_pt10,w
  2321  058D  3E30               	addlw	48
  2322  058E  120A  118A  2405  120A  118A  	fcall	_writechar
  2323                           
  2324                           ;newmain.c: 212:     writechar(pt100 + 48);
  2325  0593  1283               	bcf	3,5	;RP0=0, select bank0
  2326  0594  1303               	bcf	3,6	;RP1=0, select bank0
  2327  0595  0843               	movf	_pt100,w
  2328  0596  3E30               	addlw	48
  2329  0597  120A  118A  2405  120A  118A  	fcall	_writechar
  2330                           
  2331                           ;newmain.c: 213:     writechar(pt1000 + 48);
  2332  059C  1283               	bcf	3,5	;RP0=0, select bank0
  2333  059D  1303               	bcf	3,6	;RP1=0, select bank0
  2334  059E  0842               	movf	_pt1000,w
  2335  059F  3E30               	addlw	48
  2336  05A0  120A  118A  2405  120A  118A  	fcall	_writechar
  2337                           
  2338                           ;newmain.c: 214:     writechar(pt10000 + 48);
  2339  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  2340  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  2341  05A7  0841               	movf	_pt10000,w
  2342  05A8  3E30               	addlw	48
  2343  05A9  120A  118A  2405  120A  118A  	fcall	_writechar
  2344                           
  2345                           ;newmain.c: 215:     writecmd(0x01);
  2346  05AE  3001               	movlw	1
  2347  05AF  120A  118A  241A  120A  118A  	fcall	_writecmd
  2348  05B4                     l132:	
  2349  05B4  0008               	return
  2350  05B5                     __end_of_display_temp:	
  2351                           
  2352                           	psect	text13
  2353  041A                     __ptext13:	
  2354 ;; *************** function _writecmd *****************
  2355 ;; Defined at:
  2356 ;;		line 84 in file "newmain.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  x               1    wreg     unsigned char 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  x               1    5[COMMON] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, status,0, pclath, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2370 ;;      Params:         0       0       0       0       0
  2371 ;;      Locals:         1       0       0       0       0
  2372 ;;      Temps:          0       0       0       0       0
  2373 ;;      Totals:         1       0       0       0       0
  2374 ;;Total ram usage:        1 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    1
  2377 ;; This function calls:
  2378 ;;		_delay
  2379 ;; This function is called by:
  2380 ;;		_lcd_init
  2381 ;;		_display_temp
  2382 ;;		_setCursorPos
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           
  2387                           ;psect for function _writecmd
  2388  041A                     _writecmd:	
  2389                           
  2390                           ;incstack = 0
  2391                           ; Regs used in _writecmd: [wreg+status,2+status,0+pclath+cstack]
  2392                           ;writecmd@x stored from wreg
  2393  041A  00F5               	movwf	writecmd@x
  2394  041B                     l1126:	
  2395                           
  2396                           ;newmain.c: 85:     RA5 = 0;
  2397  041B  1283               	bcf	3,5	;RP0=0, select bank0
  2398  041C  1303               	bcf	3,6	;RP1=0, select bank0
  2399  041D  1285               	bcf	5,5	;volatile
  2400                           
  2401                           ;newmain.c: 86:     RA4 = 0;
  2402  041E  1205               	bcf	5,4	;volatile
  2403  041F                     l1128:	
  2404                           
  2405                           ;newmain.c: 87:     PORTD = x;
  2406  041F  0875               	movf	writecmd@x,w
  2407  0420  0088               	movwf	8	;volatile
  2408  0421                     l1130:	
  2409                           
  2410                           ;newmain.c: 88:     RA3 = 0;
  2411  0421  1185               	bcf	5,3	;volatile
  2412  0422                     l1132:	
  2413                           
  2414                           ;newmain.c: 89:     delay(6000);
  2415  0422  3070               	movlw	112
  2416  0423  00F0               	movwf	delay@t
  2417  0424  3017               	movlw	23
  2418  0425  00F1               	movwf	delay@t+1
  2419  0426  120A  118A  242F  120A  118A  	fcall	_delay
  2420  042B                     l1134:	
  2421                           
  2422                           ;newmain.c: 90:     RA3 = 1;
  2423  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2424  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2425  042D  1585               	bsf	5,3	;volatile
  2426  042E                     l72:	
  2427  042E  0008               	return
  2428  042F                     __end_of_writecmd:	
  2429                           
  2430                           	psect	text14
  2431  0405                     __ptext14:	
  2432 ;; *************** function _writechar *****************
  2433 ;; Defined at:
  2434 ;;		line 73 in file "newmain.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  x               1    wreg     unsigned char 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  x               1    5[COMMON] unsigned char 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2, status,0, pclath, cstack
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2448 ;;      Params:         0       0       0       0       0
  2449 ;;      Locals:         1       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0
  2451 ;;      Totals:         1       0       0       0       0
  2452 ;;Total ram usage:        1 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    1
  2455 ;; This function calls:
  2456 ;;		_delay
  2457 ;; This function is called by:
  2458 ;;		_display_temp
  2459 ;;		_writeString
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           
  2464                           ;psect for function _writechar
  2465  0405                     _writechar:	
  2466                           
  2467                           ;incstack = 0
  2468                           ; Regs used in _writechar: [wreg+status,2+status,0+pclath+cstack]
  2469                           ;writechar@x stored from wreg
  2470  0405  00F5               	movwf	writechar@x
  2471  0406                     l1136:	
  2472                           
  2473                           ;newmain.c: 74:     RA5 = 1;
  2474  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2475  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2476  0408  1685               	bsf	5,5	;volatile
  2477                           
  2478                           ;newmain.c: 75:     RA4 = 0;
  2479  0409  1205               	bcf	5,4	;volatile
  2480  040A                     l1138:	
  2481                           
  2482                           ;newmain.c: 76:     PORTD = x;
  2483  040A  0875               	movf	writechar@x,w
  2484  040B  0088               	movwf	8	;volatile
  2485  040C                     l1140:	
  2486                           
  2487                           ;newmain.c: 77:     RA3 = 0;
  2488  040C  1185               	bcf	5,3	;volatile
  2489  040D                     l1142:	
  2490                           
  2491                           ;newmain.c: 78:     delay(6000);
  2492  040D  3070               	movlw	112
  2493  040E  00F0               	movwf	delay@t
  2494  040F  3017               	movlw	23
  2495  0410  00F1               	movwf	delay@t+1
  2496  0411  120A  118A  242F  120A  118A  	fcall	_delay
  2497  0416                     l1144:	
  2498                           
  2499                           ;newmain.c: 79:     RA3 = 1;
  2500  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2501  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2502  0418  1585               	bsf	5,3	;volatile
  2503  0419                     l69:	
  2504  0419  0008               	return
  2505  041A                     __end_of_writechar:	
  2506                           
  2507                           	psect	text15
  2508  042F                     __ptext15:	
  2509 ;; *************** function _delay *****************
  2510 ;; Defined at:
  2511 ;;		line 95 in file "newmain.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  t               2    0[COMMON] int 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  i               2    3[COMMON] int 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  1    wreg      void 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2525 ;;      Params:         2       0       0       0       0
  2526 ;;      Locals:         2       0       0       0       0
  2527 ;;      Temps:          1       0       0       0       0
  2528 ;;      Totals:         5       0       0       0       0
  2529 ;;Total ram usage:        5 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_writechar
  2535 ;;		_writecmd
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           
  2540                           ;psect for function _delay
  2541  042F                     _delay:	
  2542  042F                     l1114:	
  2543                           ;incstack = 0
  2544                           ; Regs used in _delay: [wreg+status,2]
  2545                           
  2546                           
  2547                           ;newmain.c: 96:     int i;;newmain.c: 97:     for (i = 0; i < t; i++);
  2548  042F  01F3               	clrf	delay@i
  2549  0430  01F4               	clrf	delay@i+1
  2550  0431  2C38               	goto	l75
  2551  0432                     l1116:	
  2552  0432  3001               	movlw	1
  2553  0433  07F3               	addwf	delay@i,f
  2554  0434  1803               	skipnc
  2555  0435  0AF4               	incf	delay@i+1,f
  2556  0436  3000               	movlw	0
  2557  0437  07F4               	addwf	delay@i+1,f
  2558  0438                     l75:	
  2559  0438  0874               	movf	delay@i+1,w
  2560  0439  3A80               	xorlw	128
  2561  043A  00F2               	movwf	??_delay
  2562  043B  0871               	movf	delay@t+1,w
  2563  043C  3A80               	xorlw	128
  2564  043D  0272               	subwf	??_delay,w
  2565  043E  1D03               	skipz
  2566  043F  2C42               	goto	u555
  2567  0440  0870               	movf	delay@t,w
  2568  0441  0273               	subwf	delay@i,w
  2569  0442                     u555:	
  2570  0442  1C03               	skipc
  2571  0443  2C45               	goto	u551
  2572  0444  2C46               	goto	u550
  2573  0445                     u551:	
  2574  0445  2C32               	goto	l1116
  2575  0446                     u550:	
  2576  0446                     l78:	
  2577  0446  0008               	return
  2578  0447                     __end_of_delay:	
  2579  007E                     btemp	set	126	;btemp
  2580  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    8
    Data        30
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    delay2@t	PTR int  size(1) Largest target is 4
		 -> t430us(BANK0[4]), t70us(BANK0[4]), t503us(BANK0[4]), t63us(BANK0[4]), 


Critical Paths under _main in COMMON

    _lcd_init->_writecmd
    _get_temp->___lwdiv
    _write_byte->_delay2
    _reset->_delay2
    _read_byte->_delay2
    ___lwdiv->___lwmod
    _display_temp->_writechar
    _display_temp->_writecmd
    _writecmd->_delay
    _writechar->_delay

Critical Paths under _main in BANK0

    _main->_get_temp

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3837
                       _display_temp
                           _get_temp
                               _init
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     220
                           _writecmd
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             6     6      0    3177
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                          _read_byte
                              _reset
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     392
                                              5 COMMON     5     5      0
                             _delay2
 ---------------------------------------------------------------------------------
 (2) _reset                                                1     1      0     303
                                              5 COMMON     1     1      0
                             _delay2
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     349
                                              5 COMMON     3     3      0
                             _delay2
 ---------------------------------------------------------------------------------
 (3) _delay2                                               5     5      0     278
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _display_temp                                         0     0      0     440
                          _writechar
                           _writecmd
 ---------------------------------------------------------------------------------
 (2) _writecmd                                             1     1      0     220
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _writechar                                            1     1      0     220
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                5     3      2     198
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_temp
     _writechar
       _delay
     _writecmd
       _delay
   _get_temp
     ___awdiv
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _read_byte
       _delay2
     _reset
       _delay2
     _write_byte
       _delay2
   _init
   _lcd_init
     _writecmd
       _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      4      2F       5       58.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3D      12        0.0%
ABS                  0      0      3D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 06 15:31:04 2019

                      pc 0002                       l63 03DE                       l72 042E  
                     l66 03F1                       l75 0438                       l69 0419  
                     l78 0446                       _TX 0047                       _TZ 0048  
           ___awdiv@sign 0076                       _wd 003E                       fsr 0004  
                    l112 0490                      l121 0537                      l115 049C  
                    l132 05B4                      l140 04CA                      l136 04A0  
                    l129 0500                      l148 07E0                      l408 0651  
                    l514 05F8                      l524 0571                      l395 06B8  
                    _RA2 002A                      _RA3 002B                      _RA4 002C  
                    _RA5 002D                      _RE0 0048                      u600 04F1  
                    u601 04F0                      u610 04FF                      u611 04FE  
                    u700 0696                      u620 04BB                      u701 0695  
                    u621 04BA                      u550 0446                      u630 04CA  
                    u551 0445                      u631 04C9                      u720 06AA  
                    u640 0657                      u560 0496                      u721 06A9  
                    u705 0692                      u641 0656                      u561 0495  
                    u730 06AF                      u650 0662                      u810 0643  
                    u570 049C                      u555 0442                      u731 06AE  
                    u715 069E                      u651 0661                      u811 0642  
                    u571 049B                      u660 0673                      u820 0648  
                    u740 05FE                      u900 053E                      u580 051B  
                    u661 0672                      u821 0647                      u805 0637  
                    u741 05FD                      u901 053D                      u581 051A  
                    u750 0609                      u830 05BD                      u590 0537  
                    u751 0608                      u831 05BC                      u591 0536  
                    u680 0685                      u760 0614                      u920 0550  
                    u681 0684                      u761 0613                      u921 054F  
                    u850 05CF                      u930 055A                      u675 0677  
                    u851 05CE                      u931 0559                      u915 0542  
                    u780 0626                      u781 0625                      u845 05C1  
                    u790 0630                      u870 05E0                      u950 056D  
                    u695 0686                      u791 062F                      u775 0618  
                    u871 05DF                      u951 056C                      u935 0556  
                    u865 05D0                      u945 0561                      u890 05F4  
                    u795 062C                      u891 05F3                      u875 05DC  
                    u885 05E8                      u965 06FA                      u990 074E  
                    _THV 0049                      u991 074D                      u975 0705  
          ?_display_temp 0070                      u985 0712                      _TLV 004A  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     l1020 03D5  
                   l1022 03D9                     l1120 0485                     l1200 04D8  
                   l1024 03DA                     l1114 042F                     l1130 0421  
                   l1122 048C                     l1210 04DD                     l1202 04D9  
                   l1026 03DB                     l1116 0432                     l1140 040C  
                   l1132 0422                     l1300 05F9                     l1124 0496  
                   l1220 04E4                     l1212 04DE                     l1204 04DA  
                   l1142 040D                     l1134 042B                     l1126 041B  
                   l1310 0609                     l1302 05FA                     l1118 047E  
                   l1230 04F2                     l1222 04E5                     l1214 04E1  
                   l1206 04DB                     l1144 0416                     l1136 0406  
                   l1128 041F                     l1320 0622                     l1312 060E  
                   l1304 05FE                     l1232 04F8                     l1224 04E6  
                   l1216 04E2                     l1208 04DC                     l1240 049D  
                   l1160 0512                     l1152 0506                     l1138 040A  
                   l1322 0626                     l1314 0614                     l1330 0643  
                   l1306 0603                     l1234 04FA                     l1226 04EC  
                   l1218 04E3                     l1250 04BE                     l1242 04A6  
                   l1170 051B                     l1162 0513                     l1154 050B  
                   l1146 0502                     l1410 0756                     l1402 071C  
                   l1260 0657                     l1332 0648                     l1324 0630  
                   l1316 0617                     l1308 0605                     l1340 05B7  
                   l1236 04FF                     l1228 04F1                     l1252 04BF  
                   l1244 04AC                     l1180 0529                     l1172 051E  
                   l1164 0514                     l1156 050E                     l1420 0772  
                   l1412 075A                     l1404 0748                     l1270 066B  
                   l1262 065C                     l1334 064D                     l1326 0636  
                   l1318 061E                     l1350 05CF                     l1342 05BD  
                   l1246 04B5                     l1254 04C5                     l1182 0530  
                   l1174 0524                     l1166 0515                     l1158 0511  
                   l1422 077A                     l1414 0762                     l1406 074A  
                   l1280 0681                     l1272 066D                     l1264 065E  
                   l1256 0652                     l1328 063D                     l1352 05E0  
                   l1344 05C0                     l1360 05F4                     l1248 04BB  
                   l1184 0532                     l1176 0527                     l1168 0516  
                   l1424 078D                     l1416 0766                     l1408 074E  
                   l1290 06A4                     l1282 0685                     l1274 0673  
                   l1266 0662                     l1258 0653                     l1354 05E6  
                   l1346 05C7                     l1338 05B5                     l1370 0548  
                   l1194 04D0                     l1186 04CB                     l1178 0528  
                   l1426 07AD                     l1418 076E                     l1284 0696  
                   l1276 0676                     l1292 06AA                     l1268 0667  
                   l1356 05E7                     l1348 05CB                     l1380 0567  
                   l1372 054C                     l1364 0538                     l1196 04D2  
                   l1188 04CC                     l1428 07CD                     l1460 0456  
                   l1294 06AF                     l1286 069C                     l1278 067D  
                   l1358 05EE                     l1374 0550                     l1366 053E  
                   l1382 056D                     l1198 04D5                     l1390 06B9  
                   l1296 06B4                     l1288 069D                     l1376 055A  
                   l1368 0541                     l1392 06BC                     l1456 0447  
                   l1378 0560                     l1394 06F2                     l1386 03DF  
                   l1458 0451                     l1388 0572                     l1396 06F5  
                   l1398 070F                     u1000 075A                     u1001 0759  
                   u1010 0766                     u1011 0765                     u1020 0772  
                   u1021 0771                     _pt10 0044                     _main 0447  
                   _init 03D5                     _tens 0046                     btemp 007E  
          write_byte@val 0078                     start 0000                    ?_main 0070  
         ??_display_temp 0076                    ?_init 0070          __end_of___awdiv 06B9  
          __CFG_WDTE$OFF 0000          __end_of___awmod 0652          ___awdiv@divisor 0070  
        __end_of___lwdiv 05F9          __end_of___lwmod 0572          ___awdiv@counter 0075  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
          __CFG_PWRTE$ON 0000                    _t70us 0032                    _t63us 002E  
                  _pt100 0043                    _delay 042F                    _tUKus 002A  
                  _table 0020                    _reset 049D           write_byte@temp 0077  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07E1             __end_of_main 045F  
           __end_of_init 03DF                   ??_main 007E                   ??_init 0070  
                 ?_delay 0070                   _ADCON1 009F                   ?_reset 0070  
       ___awdiv@dividend 0072                   _TRISE0 0448                   _t430us 0036  
                 _t503us 003A         __end_of_lcd_init 03F2         __end_of_get_temp 07E1  
                 _pt1000 0042                ??___awdiv 0074                ??___awmod 0074  
                 _delay2 047D                ??___lwdiv 007A                ??___lwmod 0074  
                 delay@i 0073                   delay@t 0070         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075         __end_of_writecmd 042F  
__end_of__initialization 07FC     __end_of_display_temp 05B5           __pcstackCOMMON 0070  
           __pidataBANK0 045F            __end_of_delay 0447            __end_of_reset 04CB  
                ??_delay 0072                  ??_reset 0075               __pbssBANK0 003E  
     __size_of_read_byte 0036               __pmaintext 0447                  ?_delay2 0070  
              ?_lcd_init 0070                ?_get_temp 0070               __stringtab 0003  
     __size_of_writechar 0015               _intEntries 0045                  ___awdiv 0652  
                ___awmod 05F9                  _pt10000 0041          __size_of_delay2 0020  
                ___lwdiv 05B5                  ___lwmod 0538                  __ptext1 03DF  
                __ptext2 03D5                  __ptext3 06B9                  __ptext4 0501  
                __ptext5 049D                  __ptext6 04CB                  __ptext7 047D  
                __ptext8 0538                  __ptext9 05B5                ?_writecmd 0070  
                delay2@t 0074                  delay2@x 0071                  delay2@y 0072  
                delay2@z 0073         ___awmod@dividend 0072        __end_of_read_byte 0501  
             ??_lcd_init 0076               ??_get_temp 004B    __size_of_display_temp 0043  
   end_of_initialization 07FC               ??_writecmd 0075             _display_temp 0572  
      __end_of_writechar 041A           __end_of_delay2 049D               _write_byte 0501  
    start_initialization 07E1            reset@presence 0075               init_fetch0 03F2  
               ??_delay2 0070              __pdataBANK0 0020               read_byte@i 0077  
             read_byte@j 0040                ___latbits 0002            __pcstackBANK0 004B  
      __size_of_lcd_init 0013        __size_of_get_temp 0128          setCursorPos@ln1 000F  
        setCursorPos@ln2 000D          setCursorPos@ln3 000B          setCursorPos@ln4 0009  
       ___lwdiv@dividend 0078                 ?___awdiv 0070                 ?___awmod 0070  
               ?___lwdiv 0076                 ?___lwmod 0070              ?_write_byte 0070  
              __pstrings 0003        __size_of_writecmd 0015         ___lwdiv@quotient 007B  
         __size_of_delay 0018                _read_byte 04CB           __size_of_reset 002E  
            __stringbase 0008              write_byte@i 0079                _writechar 0405  
             ?_read_byte 0070  __end_ofsetCursorPos@ln1 0011  __end_ofsetCursorPos@ln2 000F  
__end_ofsetCursorPos@ln3 000D  __end_ofsetCursorPos@ln4 000B      __size_of_write_byte 0037  
       __size_of___awdiv 0067         __size_of___awmod 0059         __size_of___lwdiv 0044  
       __size_of___lwmod 003A       __end_of__stringtab 0009          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007D                 __ptext10 05F9                 __ptext11 0652  
               __ptext12 0572                 __ptext13 041A                 __ptext14 0405  
               __ptext15 042F               ?_writechar 0070                 _lcd_init 03DF  
               _get_temp 06B9            __size_of_main 0018            __size_of_init 000A  
             writechar@x 0075                 _writecmd 041A           read_byte@value 0076  
               init_ram0 03F6              ??_read_byte 0075         ___lwmod@dividend 0072  
              stringcode 0003                writecmd@x 0075             ??_write_byte 0075  
        ___lwmod@divisor 0070          ___lwmod@counter 0075                 stringdir 0003  
               stringtab 0003              ??_writechar 0075       __end_of_write_byte 0538  
