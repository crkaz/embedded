

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 01 16:59:32 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184                           
   185                           	psect	idataBANK0
   186  0481                     __pidataBANK0:	
   187                           
   188                           ;initializer for _table
   189  0481  34C0               	retlw	192
   190  0482  34F9               	retlw	249
   191  0483  34A4               	retlw	164
   192  0484  34B0               	retlw	176
   193  0485  3499               	retlw	153
   194  0486  3492               	retlw	146
   195  0487  3482               	retlw	130
   196  0488  34F8               	retlw	248
   197  0489  3480               	retlw	128
   198  048A  3490               	retlw	144
   199                           
   200                           ;initializer for _tUKus
   201  048B  340A               	retlw	10
   202  048C  3400               	retlw	0
   203  048D  3446               	retlw	70
   204  048E  3400               	retlw	0
   205                           
   206                           ;initializer for _t63us
   207  048F  3402               	retlw	2
   208  0490  3400               	retlw	0
   209  0491  3407               	retlw	7
   210  0492  3400               	retlw	0
   211                           
   212                           ;initializer for _t70us
   213  0493  3402               	retlw	2
   214  0494  3400               	retlw	0
   215  0495  3408               	retlw	8
   216  0496  3400               	retlw	0
   217                           
   218                           ;initializer for _t430us
   219  0497  3402               	retlw	2
   220  0498  3400               	retlw	0
   221  0499  343C               	retlw	60
   222  049A  3400               	retlw	0
   223                           
   224                           ;initializer for _t503us
   225  049B  3402               	retlw	2
   226  049C  3400               	retlw	0
   227  049D  3446               	retlw	70
   228  049E  3400               	retlw	0
   229                           
   230                           	psect	strings
   231  0003                     __pstrings:	
   232  0003                     stringtab:	
   233  0003                     __stringtab:	
   234  0003                     stringcode:	
   235                           ;	String table - string pointers are 1 byte each
   236                           
   237  0003                     stringdir:	
   238  0003  3000               	movlw	high stringdir
   239  0004  008A               	movwf	10
   240  0005  0804               	movf	4,w
   241  0006  0A84               	incf	4,f
   242  0007  0782               	addwf	2,f
   243  0008                     __stringbase:	
   244  0008  3400               	retlw	0
   245  0009                     __end_of__stringtab:	
   246  0009                     setCursorPos@ln4:	
   247  0009  34D8               	retlw	216
   248  000A  3400               	retlw	0
   249  000B                     __end_ofsetCursorPos@ln4:	
   250  000B                     setCursorPos@ln3:	
   251  000B  34C8               	retlw	200
   252  000C  3400               	retlw	0
   253  000D                     __end_ofsetCursorPos@ln3:	
   254  000D                     setCursorPos@ln2:	
   255  000D  34D0               	retlw	208
   256  000E  3400               	retlw	0
   257  000F                     __end_ofsetCursorPos@ln2:	
   258  000F                     setCursorPos@ln1:	
   259  000F  34C0               	retlw	192
   260  0010  3400               	retlw	0
   261  0011                     __end_ofsetCursorPos@ln1:	
   262  0005                     _PORTA	set	5
   263  0008                     _PORTD	set	8
   264  0028                     _RA0	set	40
   265  002B                     _RA3	set	43
   266  002C                     _RA4	set	44
   267  002D                     _RA5	set	45
   268  002A                     _RA2	set	42
   269  0088                     _TRISD	set	136
   270  0085                     _TRISA	set	133
   271  009F                     _ADCON1	set	159
   272  0428                     _TRISA0	set	1064
   273                           
   274                           ; #config settings
   275  0000                     
   276                           	psect	cinit
   277  07E1                     start_initialization:	
   278  07E1                     __initialization:	
   279                           
   280                           ; Initialize objects allocated to BANK0
   281  07E1  1383               	bcf	3,7	;select IRP bank0
   282  07E2  303E               	movlw	low (__pdataBANK0+30)
   283  07E3  00FD               	movwf	btemp+-1
   284  07E4  3004               	movlw	high __pidataBANK0
   285  07E5  00FE               	movwf	btemp
   286  07E6  3081               	movlw	low __pidataBANK0
   287  07E7  00FF               	movwf	btemp+1
   288  07E8  3020               	movlw	low __pdataBANK0
   289  07E9  0084               	movwf	4
   290  07EA  120A  118A  2415  120A  118A  	fcall	init_ram0
   291                           
   292                           ; Clear objects allocated to BANK0
   293  07EF  01BE               	clrf	__pbssBANK0& (0+127)
   294  07F0  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   295  07F1  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   296  07F2  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   297  07F3  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   298  07F4  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   299  07F5  01C4               	clrf	(__pbssBANK0+6)& (0+127)
   300  07F6  01C5               	clrf	(__pbssBANK0+7)& (0+127)
   301  07F7  01C6               	clrf	(__pbssBANK0+8)& (0+127)
   302  07F8  01C7               	clrf	(__pbssBANK0+9)& (0+127)
   303  07F9  01C8               	clrf	(__pbssBANK0+10)& (0+127)
   304  07FA  01C9               	clrf	(__pbssBANK0+11)& (0+127)
   305  07FB  01CA               	clrf	(__pbssBANK0+12)& (0+127)
   306  07FC                     end_of_initialization:	
   307                           ;End of C runtime variable initialization code
   308                           
   309  07FC                     __end_of__initialization:	
   310  07FC  0183               	clrf	3
   311  07FD  120A  118A  2BFE   	ljmp	_main	;jump to C main() function
   312                           
   313                           	psect	bssBANK0
   314  003E                     __pbssBANK0:	
   315  003E                     _wd:	
   316  003E                     	ds	2
   317  0040                     read_byte@j:	
   318  0040                     	ds	1
   319  0041                     _pt10000:	
   320  0041                     	ds	1
   321  0042                     _pt1000:	
   322  0042                     	ds	1
   323  0043                     _pt100:	
   324  0043                     	ds	1
   325  0044                     _pt10:	
   326  0044                     	ds	1
   327  0045                     _intEntries:	
   328  0045                     	ds	1
   329  0046                     _tens:	
   330  0046                     	ds	1
   331  0047                     _TX:	
   332  0047                     	ds	1
   333  0048                     _TZ:	
   334  0048                     	ds	1
   335  0049                     _THV:	
   336  0049                     	ds	1
   337  004A                     _TLV:	
   338  004A                     	ds	1
   339                           
   340                           	psect	dataBANK0
   341  0020                     __pdataBANK0:	
   342  0020                     _table:	
   343  0020                     	ds	10
   344  002A                     _tUKus:	
   345  002A                     	ds	4
   346  002E                     _t63us:	
   347  002E                     	ds	4
   348  0032                     _t70us:	
   349  0032                     	ds	4
   350  0036                     _t430us:	
   351  0036                     	ds	4
   352  003A                     _t503us:	
   353  003A                     	ds	4
   354                           
   355                           	psect	inittext
   356  0411                     init_fetch0:	
   357                           ;	Called with low address in FSR and high address in W
   358                           
   359  0411  087E               	movf	btemp,w
   360  0412  008A               	movwf	10
   361  0413  087F               	movf	btemp+1,w
   362  0414  0082               	movwf	2
   363  0415                     init_ram0:	
   364                           ;Called with:
   365                           ;	high address of idata address in btemp 
   366                           ;	low address of idata address in btemp+1 
   367                           ;	low address of data in FSR
   368                           ;	high address + 1 of data in btemp-1
   369                           
   370  0415  120A  118A  2411  120A  118A  	fcall	init_fetch0
   371  041A  0080               	movwf	0
   372  041B  0A84               	incf	4,f
   373  041C  0804               	movf	4,w
   374  041D  067D               	xorwf	btemp+-1,w
   375  041E  1903               	btfsc	3,2
   376  041F  3400               	retlw	0
   377  0420  0AFF               	incf	btemp+1,f
   378  0421  1903               	btfsc	3,2
   379  0422  0AFE               	incf	btemp,f
   380  0423  2C15               	goto	init_ram0
   381                           
   382                           	psect	cstackCOMMON
   383  0070                     __pcstackCOMMON:	
   384  0070                     ?_writecmd:	
   385  0070                     ?_delay:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_init:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ??_init:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_lcd_init:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_writechar:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_delay2:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ??_delay2:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_write_byte:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_read_byte:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_display_temp:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_get_temp:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_main:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_reset:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?___awdiv:	
   425                           ; 2 bytes @ 0x0
   426                           
   427  0070                     ?___awmod:	
   428                           ; 2 bytes @ 0x0
   429                           
   430  0070                     ?___lwmod:	
   431                           ; 2 bytes @ 0x0
   432                           
   433  0070                     delay@t:	
   434                           ; 2 bytes @ 0x0
   435                           
   436  0070                     ___awdiv@divisor:	
   437                           ; 2 bytes @ 0x0
   438                           
   439  0070                     ___awmod@divisor:	
   440                           ; 2 bytes @ 0x0
   441                           
   442  0070                     ___lwmod@divisor:	
   443                           ; 2 bytes @ 0x0
   444                           
   445                           
   446                           ; 2 bytes @ 0x0
   447  0070                     	ds	1
   448  0071                     delay2@x:	
   449                           
   450                           ; 1 bytes @ 0x1
   451  0071                     	ds	1
   452  0072                     ??_delay:	
   453  0072                     delay2@y:	
   454                           ; 1 bytes @ 0x2
   455                           
   456  0072                     ___awdiv@dividend:	
   457                           ; 1 bytes @ 0x2
   458                           
   459  0072                     ___awmod@dividend:	
   460                           ; 2 bytes @ 0x2
   461                           
   462  0072                     ___lwmod@dividend:	
   463                           ; 2 bytes @ 0x2
   464                           
   465                           
   466                           ; 2 bytes @ 0x2
   467  0072                     	ds	1
   468  0073                     delay2@z:	
   469  0073                     delay@i:	
   470                           ; 1 bytes @ 0x3
   471                           
   472                           
   473                           ; 2 bytes @ 0x3
   474  0073                     	ds	1
   475  0074                     ??___awdiv:	
   476  0074                     ??___awmod:	
   477                           ; 1 bytes @ 0x4
   478                           
   479  0074                     ??___lwmod:	
   480                           ; 1 bytes @ 0x4
   481                           
   482  0074                     delay2@t:	
   483                           ; 1 bytes @ 0x4
   484                           
   485                           
   486                           ; 1 bytes @ 0x4
   487  0074                     	ds	1
   488  0075                     ??_writecmd:	
   489  0075                     ??_writechar:	
   490                           ; 1 bytes @ 0x5
   491                           
   492  0075                     ??_write_byte:	
   493                           ; 1 bytes @ 0x5
   494                           
   495  0075                     ??_read_byte:	
   496                           ; 1 bytes @ 0x5
   497                           
   498  0075                     ??_reset:	
   499                           ; 1 bytes @ 0x5
   500                           
   501  0075                     writechar@x:	
   502                           ; 1 bytes @ 0x5
   503                           
   504  0075                     writecmd@x:	
   505                           ; 1 bytes @ 0x5
   506                           
   507  0075                     reset@presence:	
   508                           ; 1 bytes @ 0x5
   509                           
   510  0075                     ___awdiv@counter:	
   511                           ; 1 bytes @ 0x5
   512                           
   513  0075                     ___awmod@counter:	
   514                           ; 1 bytes @ 0x5
   515                           
   516  0075                     ___lwmod@counter:	
   517                           ; 1 bytes @ 0x5
   518                           
   519                           
   520                           ; 1 bytes @ 0x5
   521  0075                     	ds	1
   522  0076                     ??_lcd_init:	
   523  0076                     ??_display_temp:	
   524                           ; 1 bytes @ 0x6
   525                           
   526  0076                     ?___lwdiv:	
   527                           ; 1 bytes @ 0x6
   528                           
   529  0076                     read_byte@value:	
   530                           ; 2 bytes @ 0x6
   531                           
   532  0076                     ___awdiv@sign:	
   533                           ; 1 bytes @ 0x6
   534                           
   535  0076                     ___awmod@sign:	
   536                           ; 1 bytes @ 0x6
   537                           
   538  0076                     ___lwdiv@divisor:	
   539                           ; 1 bytes @ 0x6
   540                           
   541                           
   542                           ; 2 bytes @ 0x6
   543  0076                     	ds	1
   544  0077                     write_byte@temp:	
   545  0077                     read_byte@i:	
   546                           ; 1 bytes @ 0x7
   547                           
   548  0077                     ___awdiv@quotient:	
   549                           ; 1 bytes @ 0x7
   550                           
   551                           
   552                           ; 2 bytes @ 0x7
   553  0077                     	ds	1
   554  0078                     write_byte@val:	
   555  0078                     ___lwdiv@dividend:	
   556                           ; 1 bytes @ 0x8
   557                           
   558                           
   559                           ; 2 bytes @ 0x8
   560  0078                     	ds	1
   561  0079                     write_byte@i:	
   562                           
   563                           ; 1 bytes @ 0x9
   564  0079                     	ds	1
   565  007A                     ??___lwdiv:	
   566                           
   567                           ; 1 bytes @ 0xA
   568  007A                     	ds	1
   569  007B                     ___lwdiv@quotient:	
   570                           
   571                           ; 2 bytes @ 0xB
   572  007B                     	ds	2
   573  007D                     ___lwdiv@counter:	
   574                           
   575                           ; 1 bytes @ 0xD
   576  007D                     	ds	1
   577  007E                     ??_main:	
   578                           
   579                           	psect	cstackBANK0
   580  004B                     __pcstackBANK0:	
   581                           ; 1 bytes @ 0xE
   582                           
   583  004B                     ??_get_temp:	
   584                           
   585                           ; 1 bytes @ 0x0
   586  004B                     	ds	4
   587  004F                     get_temp@i:	
   588                           
   589                           ; 2 bytes @ 0x4
   590  004F                     	ds	2
   591                           
   592                           	psect	maintext
   593  03FE                     __pmaintext:	
   594 ;;
   595 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   596 ;;
   597 ;; *************** function _main *****************
   598 ;; Defined at:
   599 ;;		line 285 in file "newmain.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : B00/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   613 ;;      Params:         0       0       0       0       0
   614 ;;      Locals:         0       0       0       0       0
   615 ;;      Temps:          0       0       0       0       0
   616 ;;      Totals:         0       0       0       0       0
   617 ;;Total ram usage:        0 bytes
   618 ;; Hardware stack levels required when called:    5
   619 ;; This function calls:
   620 ;;		_display_temp
   621 ;;		_get_temp
   622 ;;		_init
   623 ;; This function is called by:
   624 ;;		Startup code after reset
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           
   629                           ;psect for function _main
   630  03FE                     _main:	
   631  03FE                     l1508:	
   632                           ;incstack = 0
   633                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   634                           
   635                           
   636                           ;newmain.c: 286:     init();
   637  03FE  120A  118A  23E1  120A  118A  	fcall	_init
   638  0403                     l1510:	
   639                           
   640                           ;newmain.c: 289:         get_temp();
   641  0403  120A  118A  2698  120A  118A  	fcall	_get_temp
   642  0408                     l1512:	
   643                           
   644                           ;newmain.c: 290:         display_temp();
   645  0408  120A  118A  2466  120A  118A  	fcall	_display_temp
   646  040D  2C03               	goto	l1510
   647  040E  120A  118A  2800   	ljmp	start
   648  0411                     __end_of_main:	
   649                           
   650                           	psect	text1
   651  03E1                     __ptext1:	
   652 ;; *************** function _init *****************
   653 ;; Defined at:
   654 ;;		line 47 in file "newmain.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, status,2
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   668 ;;      Params:         0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0
   671 ;;      Totals:         0       0       0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		_main
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           
   682                           ;psect for function _init
   683  03E1                     _init:	
   684  03E1                     l1036:	
   685                           ;incstack = 0
   686                           ; Regs used in _init: [wreg+status,2]
   687                           
   688                           
   689                           ;newmain.c: 48:     ADCON1 = 0X07;
   690  03E1  3007               	movlw	7
   691  03E2  1683               	bsf	3,5	;RP0=1, select bank1
   692  03E3  1303               	bcf	3,6	;RP1=0, select bank1
   693  03E4  009F               	movwf	31	;volatile
   694  03E5                     l1038:	
   695                           
   696                           ;newmain.c: 49:     TRISA = 0X00;
   697  03E5  0185               	clrf	5	;volatile
   698  03E6                     l1040:	
   699                           
   700                           ;newmain.c: 50:     TRISD = 0X00;
   701  03E6  0188               	clrf	8	;volatile
   702  03E7                     l1042:	
   703                           
   704                           ;newmain.c: 51:     RA2 = 1;
   705  03E7  1283               	bcf	3,5	;RP0=0, select bank0
   706  03E8  1303               	bcf	3,6	;RP1=0, select bank0
   707  03E9  1505               	bsf	5,2	;volatile
   708  03EA                     l65:	
   709  03EA  0008               	return
   710  03EB                     __end_of_init:	
   711                           
   712                           	psect	text2
   713  0698                     __ptext2:	
   714 ;; *************** function _get_temp *****************
   715 ;; Defined at:
   716 ;;		line 237 in file "newmain.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  i               2    4[BANK0 ] int 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   730 ;;      Params:         0       0       0       0       0
   731 ;;      Locals:         0       2       0       0       0
   732 ;;      Temps:          0       4       0       0       0
   733 ;;      Totals:         0       6       0       0       0
   734 ;;Total ram usage:        6 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; Hardware stack levels required when called:    4
   737 ;; This function calls:
   738 ;;		___awdiv
   739 ;;		___awmod
   740 ;;		___lwdiv
   741 ;;		___lwmod
   742 ;;		_display_temp
   743 ;;		_read_byte
   744 ;;		_reset
   745 ;;		_write_byte
   746 ;; This function is called by:
   747 ;;		_main
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           
   752                           ;psect for function _get_temp
   753  0698                     _get_temp:	
   754  0698                     l1426:	
   755                           ;incstack = 0
   756                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   757                           
   758                           
   759                           ;newmain.c: 242:     int i;;newmain.c: 243:     TRISA0 = 1;
   760  0698  1683               	bsf	3,5	;RP0=1, select bank1
   761  0699  1303               	bcf	3,6	;RP1=0, select bank1
   762  069A  1405               	bsf	5,0	;volatile
   763  069B                     l1428:	
   764                           
   765                           ;newmain.c: 244:     reset();
   766  069B  120A  118A  24BF  120A  118A  	fcall	_reset
   767                           
   768                           ;newmain.c: 245:     write_byte(0XCC);
   769  06A0  30CC               	movlw	204
   770  06A1  120A  118A  2523  120A  118A  	fcall	_write_byte
   771                           
   772                           ;newmain.c: 246:     write_byte(0X44);
   773  06A6  3044               	movlw	68
   774  06A7  120A  118A  2523  120A  118A  	fcall	_write_byte
   775  06AC                     l1430:	
   776                           
   777                           ;newmain.c: 247:     for (i = 20; i > 0; i--) {
   778  06AC  3014               	movlw	20
   779  06AD  1283               	bcf	3,5	;RP0=0, select bank0
   780  06AE  1303               	bcf	3,6	;RP1=0, select bank0
   781  06AF  00CF               	movwf	get_temp@i
   782  06B0  3000               	movlw	0
   783  06B1  00D0               	movwf	get_temp@i+1
   784  06B2                     l1436:	
   785                           
   786                           ;newmain.c: 248:         display_temp();
   787  06B2  120A  118A  2466  120A  118A  	fcall	_display_temp
   788  06B7                     l1438:	
   789                           
   790                           ;newmain.c: 249:     }
   791  06B7  30FF               	movlw	255
   792  06B8  1283               	bcf	3,5	;RP0=0, select bank0
   793  06B9  1303               	bcf	3,6	;RP1=0, select bank0
   794  06BA  07CF               	addwf	get_temp@i,f
   795  06BB  1803               	skipnc
   796  06BC  0AD0               	incf	get_temp@i+1,f
   797  06BD  30FF               	movlw	255
   798  06BE  07D0               	addwf	get_temp@i+1,f
   799  06BF                     l1440:	
   800  06BF  0850               	movf	get_temp@i+1,w
   801  06C0  3A80               	xorlw	128
   802  06C1  00FF               	movwf	btemp+1
   803  06C2  3080               	movlw	128
   804  06C3  027F               	subwf	btemp+1,w
   805  06C4  1D03               	skipz
   806  06C5  2EC8               	goto	u975
   807  06C6  3001               	movlw	1
   808  06C7  024F               	subwf	get_temp@i,w
   809  06C8                     u975:	
   810  06C8  1803               	skipnc
   811  06C9  2ECB               	goto	u971
   812  06CA  2ECC               	goto	u970
   813  06CB                     u971:	
   814  06CB  2EB2               	goto	l1436
   815  06CC                     u970:	
   816  06CC                     l1442:	
   817                           
   818                           ;newmain.c: 250:     reset();
   819  06CC  120A  118A  24BF  120A  118A  	fcall	_reset
   820                           
   821                           ;newmain.c: 251:     write_byte(0XCC);
   822  06D1  30CC               	movlw	204
   823  06D2  120A  118A  2523  120A  118A  	fcall	_write_byte
   824                           
   825                           ;newmain.c: 252:     write_byte(0XBE);
   826  06D7  30BE               	movlw	190
   827  06D8  120A  118A  2523  120A  118A  	fcall	_write_byte
   828                           
   829                           ;newmain.c: 253:     TLV = read_byte();
   830  06DD  120A  118A  24ED  120A  118A  	fcall	_read_byte
   831  06E2  1283               	bcf	3,5	;RP0=0, select bank0
   832  06E3  1303               	bcf	3,6	;RP1=0, select bank0
   833  06E4  00CB               	movwf	??_get_temp
   834  06E5  084B               	movf	??_get_temp,w
   835  06E6  00CA               	movwf	_TLV
   836                           
   837                           ;newmain.c: 254:     THV = read_byte();
   838  06E7  120A  118A  24ED  120A  118A  	fcall	_read_byte
   839  06EC  1283               	bcf	3,5	;RP0=0, select bank0
   840  06ED  1303               	bcf	3,6	;RP1=0, select bank0
   841  06EE  00CB               	movwf	??_get_temp
   842  06EF  084B               	movf	??_get_temp,w
   843  06F0  00C9               	movwf	_THV
   844  06F1                     l1444:	
   845                           
   846                           ;newmain.c: 255:     TRISA0 = 1;
   847  06F1  1683               	bsf	3,5	;RP0=1, select bank1
   848  06F2  1303               	bcf	3,6	;RP1=0, select bank1
   849  06F3  1405               	bsf	5,0	;volatile
   850  06F4                     l1446:	
   851                           
   852                           ;newmain.c: 256:     TZ = (TLV >> 4) | ((THV << 4)&0X3f);
   853  06F4  1283               	bcf	3,5	;RP0=0, select bank0
   854  06F5  1303               	bcf	3,6	;RP1=0, select bank0
   855  06F6  0849               	movf	_THV,w
   856  06F7  00CB               	movwf	??_get_temp
   857  06F8  3004               	movlw	4
   858  06F9                     u985:	
   859  06F9  1003               	clrc
   860  06FA  0DCB               	rlf	??_get_temp,f
   861  06FB  3EFF               	addlw	-1
   862  06FC  1D03               	skipz
   863  06FD  2EF9               	goto	u985
   864  06FE  303F               	movlw	63
   865  06FF  054B               	andwf	??_get_temp,w
   866  0700  00CC               	movwf	??_get_temp+1
   867  0701  084A               	movf	_TLV,w
   868  0702  00CD               	movwf	??_get_temp+2
   869  0703  3004               	movlw	4
   870  0704                     u995:	
   871  0704  1003               	clrc
   872  0705  0CCD               	rrf	??_get_temp+2,f
   873  0706  3EFF               	addlw	-1
   874  0707  1D03               	skipz
   875  0708  2F04               	goto	u995
   876  0709  084D               	movf	??_get_temp+2,w
   877  070A  044C               	iorwf	??_get_temp+1,w
   878  070B  00CE               	movwf	??_get_temp+3
   879  070C  084E               	movf	??_get_temp+3,w
   880  070D  00C8               	movwf	_TZ
   881  070E                     l1448:	
   882                           
   883                           ;newmain.c: 257:     TX = TLV << 4;
   884  070E  084A               	movf	_TLV,w
   885  070F  00CB               	movwf	??_get_temp
   886  0710  3003               	movlw	3
   887  0711                     u1005:	
   888  0711  1003               	clrc
   889  0712  0DCB               	rlf	??_get_temp,f
   890  0713  3EFF               	addlw	-1
   891  0714  1D03               	skipz
   892  0715  2F11               	goto	u1005
   893  0716  1003               	clrc
   894  0717  0D4B               	rlf	??_get_temp,w
   895  0718  00CC               	movwf	??_get_temp+1
   896  0719  084C               	movf	??_get_temp+1,w
   897  071A  00C7               	movwf	_TX
   898  071B                     l1452:	
   899                           
   900                           ;newmain.c: 261:     intEntries = TZ % 10;
   901  071B  300A               	movlw	10
   902  071C  00F0               	movwf	___awmod@divisor
   903  071D  3000               	movlw	0
   904  071E  00F1               	movwf	___awmod@divisor+1
   905  071F  0848               	movf	_TZ,w
   906  0720  00CB               	movwf	??_get_temp
   907  0721  01CC               	clrf	??_get_temp+1
   908  0722  084B               	movf	??_get_temp,w
   909  0723  00F2               	movwf	___awmod@dividend
   910  0724  084C               	movf	??_get_temp+1,w
   911  0725  00F3               	movwf	___awmod@dividend+1
   912  0726  120A  118A  25D8  120A  118A  	fcall	___awmod
   913  072B  0870               	movf	?___awmod,w
   914  072C  1283               	bcf	3,5	;RP0=0, select bank0
   915  072D  1303               	bcf	3,6	;RP1=0, select bank0
   916  072E  00CD               	movwf	??_get_temp+2
   917  072F  084D               	movf	??_get_temp+2,w
   918  0730  00C5               	movwf	_intEntries
   919                           
   920                           ;newmain.c: 262:     tens = TZ / 10;
   921  0731  300A               	movlw	10
   922  0732  00F0               	movwf	___awdiv@divisor
   923  0733  3000               	movlw	0
   924  0734  00F1               	movwf	___awdiv@divisor+1
   925  0735  0848               	movf	_TZ,w
   926  0736  00CB               	movwf	??_get_temp
   927  0737  01CC               	clrf	??_get_temp+1
   928  0738  084B               	movf	??_get_temp,w
   929  0739  00F2               	movwf	___awdiv@dividend
   930  073A  084C               	movf	??_get_temp+1,w
   931  073B  00F3               	movwf	___awdiv@dividend+1
   932  073C  120A  118A  2631  120A  118A  	fcall	___awdiv
   933  0741  0870               	movf	?___awdiv,w
   934  0742  1283               	bcf	3,5	;RP0=0, select bank0
   935  0743  1303               	bcf	3,6	;RP1=0, select bank0
   936  0744  00CD               	movwf	??_get_temp+2
   937  0745  084D               	movf	??_get_temp+2,w
   938  0746  00C6               	movwf	_tens
   939  0747                     l1454:	
   940                           
   941                           ;newmain.c: 263:     wd = 0;
   942  0747  01BE               	clrf	_wd
   943  0748  01BF               	clrf	_wd+1
   944  0749                     l1456:	
   945                           
   946                           ;newmain.c: 264:     if (TX & 0x80) {
   947  0749  1FC7               	btfss	_TX,7
   948  074A  2F4C               	goto	u1011
   949  074B  2F4D               	goto	u1010
   950  074C                     u1011:	
   951  074C  2F55               	goto	l1460
   952  074D                     u1010:	
   953  074D                     l1458:	
   954                           
   955                           ;newmain.c: 265:         wd = wd + 5000;
   956  074D  083E               	movf	_wd,w
   957  074E  3E88               	addlw	136
   958  074F  00BE               	movwf	_wd
   959  0750  083F               	movf	_wd+1,w
   960  0751  1803               	skipnc
   961  0752  3E01               	addlw	1
   962  0753  3E13               	addlw	19
   963  0754  00BF               	movwf	_wd+1
   964  0755                     l1460:	
   965                           
   966                           ;newmain.c: 267:     if (TX & 0x40) {
   967  0755  1F47               	btfss	_TX,6
   968  0756  2F58               	goto	u1021
   969  0757  2F59               	goto	u1020
   970  0758                     u1021:	
   971  0758  2F61               	goto	l1464
   972  0759                     u1020:	
   973  0759                     l1462:	
   974                           
   975                           ;newmain.c: 268:         wd = wd + 2500;
   976  0759  083E               	movf	_wd,w
   977  075A  3EC4               	addlw	196
   978  075B  00BE               	movwf	_wd
   979  075C  083F               	movf	_wd+1,w
   980  075D  1803               	skipnc
   981  075E  3E01               	addlw	1
   982  075F  3E09               	addlw	9
   983  0760  00BF               	movwf	_wd+1
   984  0761                     l1464:	
   985                           
   986                           ;newmain.c: 270:     if (TX & 0x20) {
   987  0761  1EC7               	btfss	_TX,5
   988  0762  2F64               	goto	u1031
   989  0763  2F65               	goto	u1030
   990  0764                     u1031:	
   991  0764  2F6D               	goto	l1468
   992  0765                     u1030:	
   993  0765                     l1466:	
   994                           
   995                           ;newmain.c: 271:         wd = wd + 1250;
   996  0765  083E               	movf	_wd,w
   997  0766  3EE2               	addlw	226
   998  0767  00BE               	movwf	_wd
   999  0768  083F               	movf	_wd+1,w
  1000  0769  1803               	skipnc
  1001  076A  3E01               	addlw	1
  1002  076B  3E04               	addlw	4
  1003  076C  00BF               	movwf	_wd+1
  1004  076D                     l1468:	
  1005                           
  1006                           ;newmain.c: 273:     if (TX & 0x10) {
  1007  076D  1E47               	btfss	_TX,4
  1008  076E  2F70               	goto	u1041
  1009  076F  2F71               	goto	u1040
  1010  0770                     u1041:	
  1011  0770  2F79               	goto	l1472
  1012  0771                     u1040:	
  1013  0771                     l1470:	
  1014                           
  1015                           ;newmain.c: 274:         wd = wd + 625;
  1016  0771  083E               	movf	_wd,w
  1017  0772  3E71               	addlw	113
  1018  0773  00BE               	movwf	_wd
  1019  0774  083F               	movf	_wd+1,w
  1020  0775  1803               	skipnc
  1021  0776  3E01               	addlw	1
  1022  0777  3E02               	addlw	2
  1023  0778  00BF               	movwf	_wd+1
  1024  0779                     l1472:	
  1025                           
  1026                           ;newmain.c: 276:     pt10 = wd / 1000;
  1027  0779  30E8               	movlw	232
  1028  077A  00F6               	movwf	___lwdiv@divisor
  1029  077B  3003               	movlw	3
  1030  077C  00F7               	movwf	___lwdiv@divisor+1
  1031  077D  083F               	movf	_wd+1,w
  1032  077E  00F9               	movwf	___lwdiv@dividend+1
  1033  077F  083E               	movf	_wd,w
  1034  0780  00F8               	movwf	___lwdiv@dividend
  1035  0781  120A  118A  2594  120A  118A  	fcall	___lwdiv
  1036  0786  0876               	movf	?___lwdiv,w
  1037  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0789  00CB               	movwf	??_get_temp
  1040  078A  084B               	movf	??_get_temp,w
  1041  078B  00C4               	movwf	_pt10
  1042  078C                     l1474:	
  1043                           
  1044                           ;newmain.c: 277:     pt100 = (wd % 1000) / 100;
  1045  078C  3064               	movlw	100
  1046  078D  00F6               	movwf	___lwdiv@divisor
  1047  078E  3000               	movlw	0
  1048  078F  00F7               	movwf	___lwdiv@divisor+1
  1049  0790  083F               	movf	_wd+1,w
  1050  0791  00F3               	movwf	___lwmod@dividend+1
  1051  0792  083E               	movf	_wd,w
  1052  0793  00F2               	movwf	___lwmod@dividend
  1053  0794  30E8               	movlw	232
  1054  0795  00F0               	movwf	___lwmod@divisor
  1055  0796  3003               	movlw	3
  1056  0797  00F1               	movwf	___lwmod@divisor+1
  1057  0798  120A  118A  255A  120A  118A  	fcall	___lwmod
  1058  079D  0871               	movf	?___lwmod+1,w
  1059  079E  00F9               	movwf	___lwdiv@dividend+1
  1060  079F  0870               	movf	?___lwmod,w
  1061  07A0  00F8               	movwf	___lwdiv@dividend
  1062  07A1  120A  118A  2594  120A  118A  	fcall	___lwdiv
  1063  07A6  0876               	movf	?___lwdiv,w
  1064  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1065  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1066  07A9  00CB               	movwf	??_get_temp
  1067  07AA  084B               	movf	??_get_temp,w
  1068  07AB  00C3               	movwf	_pt100
  1069  07AC                     l1476:	
  1070                           
  1071                           ;newmain.c: 278:     pt1000 = (wd % 100) / 10;
  1072  07AC  300A               	movlw	10
  1073  07AD  00F6               	movwf	___lwdiv@divisor
  1074  07AE  3000               	movlw	0
  1075  07AF  00F7               	movwf	___lwdiv@divisor+1
  1076  07B0  083F               	movf	_wd+1,w
  1077  07B1  00F3               	movwf	___lwmod@dividend+1
  1078  07B2  083E               	movf	_wd,w
  1079  07B3  00F2               	movwf	___lwmod@dividend
  1080  07B4  3064               	movlw	100
  1081  07B5  00F0               	movwf	___lwmod@divisor
  1082  07B6  3000               	movlw	0
  1083  07B7  00F1               	movwf	___lwmod@divisor+1
  1084  07B8  120A  118A  255A  120A  118A  	fcall	___lwmod
  1085  07BD  0871               	movf	?___lwmod+1,w
  1086  07BE  00F9               	movwf	___lwdiv@dividend+1
  1087  07BF  0870               	movf	?___lwmod,w
  1088  07C0  00F8               	movwf	___lwdiv@dividend
  1089  07C1  120A  118A  2594  120A  118A  	fcall	___lwdiv
  1090  07C6  0876               	movf	?___lwdiv,w
  1091  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1092  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1093  07C9  00CB               	movwf	??_get_temp
  1094  07CA  084B               	movf	??_get_temp,w
  1095  07CB  00C2               	movwf	_pt1000
  1096  07CC                     l1478:	
  1097                           
  1098                           ;newmain.c: 279:     pt10000 = wd % 10;
  1099  07CC  300A               	movlw	10
  1100  07CD  00F0               	movwf	___lwmod@divisor
  1101  07CE  3000               	movlw	0
  1102  07CF  00F1               	movwf	___lwmod@divisor+1
  1103  07D0  083F               	movf	_wd+1,w
  1104  07D1  00F3               	movwf	___lwmod@dividend+1
  1105  07D2  083E               	movf	_wd,w
  1106  07D3  00F2               	movwf	___lwmod@dividend
  1107  07D4  120A  118A  255A  120A  118A  	fcall	___lwmod
  1108  07D9  0870               	movf	?___lwmod,w
  1109  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1110  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1111  07DC  00CB               	movwf	??_get_temp
  1112  07DD  084B               	movf	??_get_temp,w
  1113  07DE  00C1               	movwf	_pt10000
  1114  07DF                     l1480:	
  1115                           
  1116                           ;newmain.c: 280:     __nop();
  1117  07DF  0000               	nop
  1118  07E0                     l152:	
  1119  07E0  0008               	return
  1120  07E1                     __end_of_get_temp:	
  1121                           
  1122                           	psect	text3
  1123  0523                     __ptext3:	
  1124 ;; *************** function _write_byte *****************
  1125 ;; Defined at:
  1126 ;;		line 145 in file "newmain.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  val             1    wreg     unsigned char 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  val             1    8[COMMON] unsigned char 
  1131 ;;  i               1    9[COMMON] unsigned char 
  1132 ;;  temp            1    7[COMMON] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1142 ;;      Params:         0       0       0       0       0
  1143 ;;      Locals:         3       0       0       0       0
  1144 ;;      Temps:          2       0       0       0       0
  1145 ;;      Totals:         5       0       0       0       0
  1146 ;;Total ram usage:        5 bytes
  1147 ;; Hardware stack levels used:    1
  1148 ;; Hardware stack levels required when called:    1
  1149 ;; This function calls:
  1150 ;;		_delay2
  1151 ;; This function is called by:
  1152 ;;		_get_temp
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           
  1157                           ;psect for function _write_byte
  1158  0523                     _write_byte:	
  1159                           
  1160                           ;incstack = 0
  1161                           ; Regs used in _write_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1162                           ;write_byte@val stored from wreg
  1163  0523  00F8               	movwf	write_byte@val
  1164  0524                     l1176:	
  1165                           
  1166                           ;newmain.c: 146:     unsigned char i;;newmain.c: 147:     unsigned char temp;;newmain.c:
      +                           150:     for (i = 8; i > 0; i--) {
  1167  0524  3008               	movlw	8
  1168  0525  00F5               	movwf	??_write_byte
  1169  0526  0875               	movf	??_write_byte,w
  1170  0527  00F9               	movwf	write_byte@i
  1171  0528                     l1182:	
  1172                           
  1173                           ;newmain.c: 151:         temp = val & 0x01;
  1174  0528  0878               	movf	write_byte@val,w
  1175  0529  3901               	andlw	1
  1176  052A  00F5               	movwf	??_write_byte
  1177  052B  0875               	movf	??_write_byte,w
  1178  052C  00F7               	movwf	write_byte@temp
  1179  052D                     l1184:	
  1180                           
  1181                           ;newmain.c: 152:         RA0 = 0; TRISA0 = 0;
  1182  052D  1283               	bcf	3,5	;RP0=0, select bank0
  1183  052E  1303               	bcf	3,6	;RP1=0, select bank0
  1184  052F  1005               	bcf	5,0	;volatile
  1185  0530                     l1186:	
  1186  0530  1683               	bsf	3,5	;RP0=1, select bank1
  1187  0531  1303               	bcf	3,6	;RP1=0, select bank1
  1188  0532  1005               	bcf	5,0	;volatile
  1189  0533                     l1188:	
  1190                           
  1191                           ;newmain.c: 153:         __nop();
  1192  0533  0000               	nop
  1193  0534                     l1190:	
  1194                           
  1195                           ;newmain.c: 154:         __nop();
  1196  0534  0000               	nop
  1197  0535                     l1192:	
  1198                           
  1199                           ;newmain.c: 155:         __nop();
  1200  0535  0000               	nop
  1201  0536                     l1194:	
  1202                           
  1203                           ;newmain.c: 156:         __nop();
  1204  0536  0000               	nop
  1205  0537                     l1196:	
  1206                           
  1207                           ;newmain.c: 157:         __nop();
  1208  0537  0000               	nop
  1209  0538                     l1198:	
  1210                           
  1211                           ;newmain.c: 159:         if (temp == 1) {
  1212  0538  0377               	decf	write_byte@temp,w
  1213  0539  1D03               	btfss	3,2
  1214  053A  2D3C               	goto	u591
  1215  053B  2D3D               	goto	u590
  1216  053C                     u591:	
  1217  053C  2D40               	goto	l1202
  1218  053D                     u590:	
  1219  053D                     l1200:	
  1220                           
  1221                           ;newmain.c: 160:             TRISA0 = 1;
  1222  053D  1683               	bsf	3,5	;RP0=1, select bank1
  1223  053E  1303               	bcf	3,6	;RP1=0, select bank1
  1224  053F  1405               	bsf	5,0	;volatile
  1225  0540                     l1202:	
  1226                           
  1227                           ;newmain.c: 162:         delay2(t63us);
  1228  0540  302E               	movlw	(low (_t63us| 0))& (0+255)
  1229  0541  120A  118A  249F  120A  118A  	fcall	_delay2
  1230  0546                     l1204:	
  1231                           
  1232                           ;newmain.c: 163:         TRISA0 = 1;
  1233  0546  1683               	bsf	3,5	;RP0=1, select bank1
  1234  0547  1303               	bcf	3,6	;RP1=0, select bank1
  1235  0548  1405               	bsf	5,0	;volatile
  1236  0549                     l1206:	
  1237                           
  1238                           ;newmain.c: 164:         __nop();
  1239  0549  0000               	nop
  1240  054A                     l1208:	
  1241                           
  1242                           ;newmain.c: 165:         __nop();
  1243  054A  0000               	nop
  1244  054B                     l1210:	
  1245                           
  1246                           ;newmain.c: 166:         val = val >> 1;
  1247  054B  0878               	movf	write_byte@val,w
  1248  054C  00F5               	movwf	??_write_byte
  1249  054D  1003               	clrc
  1250  054E  0C75               	rrf	??_write_byte,w
  1251  054F  00F6               	movwf	??_write_byte+1
  1252  0550  0876               	movf	??_write_byte+1,w
  1253  0551  00F8               	movwf	write_byte@val
  1254  0552                     l1212:	
  1255                           
  1256                           ;newmain.c: 167:     }
  1257  0552  3001               	movlw	1
  1258  0553  02F9               	subwf	write_byte@i,f
  1259  0554                     l1214:	
  1260  0554  0879               	movf	write_byte@i,w
  1261  0555  1D03               	btfss	3,2
  1262  0556  2D58               	goto	u601
  1263  0557  2D59               	goto	u600
  1264  0558                     u601:	
  1265  0558  2D28               	goto	l1182
  1266  0559                     u600:	
  1267  0559                     l123:	
  1268  0559  0008               	return
  1269  055A                     __end_of_write_byte:	
  1270                           
  1271                           	psect	text4
  1272  04BF                     __ptext4:	
  1273 ;; *************** function _reset *****************
  1274 ;; Defined at:
  1275 ;;		line 221 in file "newmain.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  presence        1    5[COMMON] unsigned char 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  2  136[None  ] int 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1289 ;;      Params:         0       0       0       0       0
  1290 ;;      Locals:         1       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0
  1292 ;;      Totals:         1       0       0       0       0
  1293 ;;Total ram usage:        1 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    1
  1296 ;; This function calls:
  1297 ;;		_delay2
  1298 ;; This function is called by:
  1299 ;;		_get_temp
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           
  1304                           ;psect for function _reset
  1305  04BF                     _reset:	
  1306  04BF                     l1280:	
  1307                           ;incstack = 0
  1308                           ; Regs used in _reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1309                           
  1310                           
  1311                           ;newmain.c: 222:     char presence = 1;
  1312  04BF  01F5               	clrf	reset@presence
  1313  04C0  0AF5               	incf	reset@presence,f
  1314                           
  1315                           ;newmain.c: 223:     while (presence) {
  1316  04C1  2CE7               	goto	l1294
  1317  04C2                     l138:	
  1318                           
  1319                           ;newmain.c: 224:         RA0 = 0; TRISA0 = 0;
  1320  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  1321  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  1322  04C4  1005               	bcf	5,0	;volatile
  1323  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  1324  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  1325  04C7  1005               	bcf	5,0	;volatile
  1326  04C8                     l1282:	
  1327                           
  1328                           ;newmain.c: 225:         delay2(t503us);
  1329  04C8  303A               	movlw	(low (_t503us| 0))& (0+255)
  1330  04C9  120A  118A  249F  120A  118A  	fcall	_delay2
  1331  04CE                     l1284:	
  1332                           
  1333                           ;newmain.c: 226:         TRISA0 = 1;
  1334  04CE  1683               	bsf	3,5	;RP0=1, select bank1
  1335  04CF  1303               	bcf	3,6	;RP1=0, select bank1
  1336  04D0  1405               	bsf	5,0	;volatile
  1337                           
  1338                           ;newmain.c: 227:         delay2(t70us);
  1339  04D1  3032               	movlw	(low (_t70us| 0))& (0+255)
  1340  04D2  120A  118A  249F  120A  118A  	fcall	_delay2
  1341  04D7                     l1286:	
  1342                           
  1343                           ;newmain.c: 228:         if (RA0 == 1) {
  1344  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  1345  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  1346  04D9  1C05               	btfss	5,0	;volatile
  1347  04DA  2CDC               	goto	u631
  1348  04DB  2CDD               	goto	u630
  1349  04DC                     u631:	
  1350  04DC  2CE0               	goto	l1290
  1351  04DD                     u630:	
  1352  04DD                     l1288:	
  1353                           
  1354                           ;newmain.c: 229:             presence = 1;
  1355  04DD  01F5               	clrf	reset@presence
  1356  04DE  0AF5               	incf	reset@presence,f
  1357                           
  1358                           ;newmain.c: 230:         } else {
  1359  04DF  2CE1               	goto	l1292
  1360  04E0                     l1290:	
  1361                           
  1362                           ;newmain.c: 231:             presence = 0;
  1363  04E0  01F5               	clrf	reset@presence
  1364  04E1                     l1292:	
  1365                           
  1366                           ;newmain.c: 233:         delay2(t430us);
  1367  04E1  3036               	movlw	(low (_t430us| 0))& (0+255)
  1368  04E2  120A  118A  249F  120A  118A  	fcall	_delay2
  1369  04E7                     l1294:	
  1370                           
  1371                           ;newmain.c: 223:     while (presence) {
  1372  04E7  0875               	movf	reset@presence,w
  1373  04E8  1D03               	btfss	3,2
  1374  04E9  2CEB               	goto	u641
  1375  04EA  2CEC               	goto	u640
  1376  04EB                     u641:	
  1377  04EB  2CC2               	goto	l138
  1378  04EC                     u640:	
  1379  04EC                     l142:	
  1380  04EC  0008               	return
  1381  04ED                     __end_of_reset:	
  1382                           
  1383                           	psect	text5
  1384  04ED                     __ptext5:	
  1385 ;; *************** function _read_byte *****************
  1386 ;; Defined at:
  1387 ;;		line 170 in file "newmain.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  i               1    7[COMMON] unsigned char 
  1392 ;;  value           1    6[COMMON] unsigned char 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      unsigned char 
  1395 ;; Registers used:
  1396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1402 ;;      Params:         0       0       0       0       0
  1403 ;;      Locals:         2       0       0       0       0
  1404 ;;      Temps:          1       0       0       0       0
  1405 ;;      Totals:         3       0       0       0       0
  1406 ;;Total ram usage:        3 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    1
  1409 ;; This function calls:
  1410 ;;		_delay2
  1411 ;; This function is called by:
  1412 ;;		_get_temp
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           
  1417                           ;psect for function _read_byte
  1418  04ED                     _read_byte:	
  1419  04ED                     l1216:	
  1420                           ;incstack = 0
  1421                           ; Regs used in _read_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1422                           
  1423                           
  1424                           ;newmain.c: 171:     unsigned char i;;newmain.c: 172:     unsigned char value = 0;
  1425  04ED  01F6               	clrf	read_byte@value
  1426  04EE                     l1218:	
  1427                           
  1428                           ;newmain.c: 173:     static char j;;newmain.c: 175:     for (i = 8; i > 0; i--) {
  1429  04EE  3008               	movlw	8
  1430  04EF  00F5               	movwf	??_read_byte
  1431  04F0  0875               	movf	??_read_byte,w
  1432  04F1  00F7               	movwf	read_byte@i
  1433  04F2                     l1224:	
  1434                           
  1435                           ;newmain.c: 176:         value >>= 1;
  1436  04F2  1003               	clrc
  1437  04F3  0CF6               	rrf	read_byte@value,f
  1438  04F4                     l1226:	
  1439                           
  1440                           ;newmain.c: 177:         RA0 = 0; TRISA0 = 0;
  1441  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1442  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1443  04F6  1005               	bcf	5,0	;volatile
  1444  04F7                     l1228:	
  1445  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  1446  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  1447  04F9  1005               	bcf	5,0	;volatile
  1448  04FA                     l1230:	
  1449                           
  1450                           ;newmain.c: 178:         __nop();
  1451  04FA  0000               	nop
  1452  04FB                     l1232:	
  1453                           
  1454                           ;newmain.c: 179:         __nop();
  1455  04FB  0000               	nop
  1456  04FC                     l1234:	
  1457                           
  1458                           ;newmain.c: 180:         __nop();
  1459  04FC  0000               	nop
  1460  04FD                     l1236:	
  1461                           
  1462                           ;newmain.c: 181:         __nop();
  1463  04FD  0000               	nop
  1464  04FE                     l1238:	
  1465                           
  1466                           ;newmain.c: 182:         __nop();
  1467  04FE  0000               	nop
  1468  04FF                     l1240:	
  1469                           
  1470                           ;newmain.c: 183:         __nop();
  1471  04FF  0000               	nop
  1472  0500                     l1242:	
  1473                           
  1474                           ;newmain.c: 184:         TRISA0 = 1;
  1475  0500  1683               	bsf	3,5	;RP0=1, select bank1
  1476  0501  1303               	bcf	3,6	;RP1=0, select bank1
  1477  0502  1405               	bsf	5,0	;volatile
  1478  0503                     l1244:	
  1479                           
  1480                           ;newmain.c: 185:         __nop();
  1481  0503  0000               	nop
  1482  0504                     l1246:	
  1483                           
  1484                           ;newmain.c: 186:         __nop();
  1485  0504  0000               	nop
  1486  0505                     l1248:	
  1487                           
  1488                           ;newmain.c: 187:         __nop();
  1489  0505  0000               	nop
  1490  0506                     l1250:	
  1491                           
  1492                           ;newmain.c: 188:         __nop();
  1493  0506  0000               	nop
  1494  0507                     l1252:	
  1495                           
  1496                           ;newmain.c: 189:         __nop();
  1497  0507  0000               	nop
  1498  0508                     l1254:	
  1499                           
  1500                           ;newmain.c: 190:         j = RA0;
  1501  0508  3000               	movlw	0
  1502  0509  1283               	bcf	3,5	;RP0=0, select bank0
  1503  050A  1303               	bcf	3,6	;RP1=0, select bank0
  1504  050B  1805               	btfsc	5,0	;volatile
  1505  050C  3001               	movlw	1
  1506  050D  00C0               	movwf	read_byte@j
  1507  050E                     l1256:	
  1508                           
  1509                           ;newmain.c: 191:         if (j) value |= 0x80;
  1510  050E  0840               	movf	read_byte@j,w
  1511  050F  1903               	btfsc	3,2
  1512  0510  2D12               	goto	u611
  1513  0511  2D13               	goto	u610
  1514  0512                     u611:	
  1515  0512  2D14               	goto	l1260
  1516  0513                     u610:	
  1517  0513                     l1258:	
  1518  0513  17F6               	bsf	read_byte@value,7
  1519  0514                     l1260:	
  1520                           
  1521                           ;newmain.c: 192:         delay2(t63us);
  1522  0514  302E               	movlw	(low (_t63us| 0))& (0+255)
  1523  0515  120A  118A  249F  120A  118A  	fcall	_delay2
  1524  051A                     l1262:	
  1525                           
  1526                           ;newmain.c: 193:     }
  1527  051A  3001               	movlw	1
  1528  051B  02F7               	subwf	read_byte@i,f
  1529  051C                     l1264:	
  1530  051C  0877               	movf	read_byte@i,w
  1531  051D  1D03               	btfss	3,2
  1532  051E  2D20               	goto	u621
  1533  051F  2D21               	goto	u620
  1534  0520                     u621:	
  1535  0520  2CF2               	goto	l1224
  1536  0521                     u620:	
  1537  0521                     l1266:	
  1538                           
  1539                           ;newmain.c: 194:     return (value);
  1540  0521  0876               	movf	read_byte@value,w
  1541  0522                     l131:	
  1542  0522  0008               	return
  1543  0523                     __end_of_read_byte:	
  1544                           
  1545                           	psect	text6
  1546  0466                     __ptext6:	
  1547 ;; *************** function _display_temp *****************
  1548 ;; Defined at:
  1549 ;;		line 197 in file "newmain.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1563 ;;      Params:         0       0       0       0       0
  1564 ;;      Locals:         0       0       0       0       0
  1565 ;;      Temps:          0       0       0       0       0
  1566 ;;      Totals:         0       0       0       0       0
  1567 ;;Total ram usage:        0 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    3
  1570 ;; This function calls:
  1571 ;;		_delay2
  1572 ;;		_lcd_init
  1573 ;;		_writechar
  1574 ;; This function is called by:
  1575 ;;		_get_temp
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           
  1581                           ;psect for function _display_temp
  1582  0466                     _display_temp:	
  1583  0466                     l1270:	
  1584                           ;incstack = 0
  1585                           ; Regs used in _display_temp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1586                           
  1587                           
  1588                           ;newmain.c: 198:     lcd_init();
  1589  0466  120A  118A  23EB  120A  118A  	fcall	_lcd_init
  1590  046B                     l1272:	
  1591                           
  1592                           ;newmain.c: 199:     TRISA = 0X00;
  1593  046B  1683               	bsf	3,5	;RP0=1, select bank1
  1594  046C  1303               	bcf	3,6	;RP1=0, select bank1
  1595  046D  0185               	clrf	5	;volatile
  1596  046E                     l1274:	
  1597                           
  1598                           ;newmain.c: 201:     writechar(tens);
  1599  046E  1283               	bcf	3,5	;RP0=0, select bank0
  1600  046F  1303               	bcf	3,6	;RP1=0, select bank0
  1601  0470  0846               	movf	_tens,w
  1602  0471  120A  118A  2439  120A  118A  	fcall	_writechar
  1603  0476                     l1276:	
  1604                           
  1605                           ;newmain.c: 202:     PORTA = 0x3e;
  1606  0476  303E               	movlw	62
  1607  0477  1283               	bcf	3,5	;RP0=0, select bank0
  1608  0478  1303               	bcf	3,6	;RP1=0, select bank0
  1609  0479  0085               	movwf	5	;volatile
  1610  047A                     l1278:	
  1611                           
  1612                           ;newmain.c: 203:     delay2(tUKus);
  1613  047A  302A               	movlw	(low (_tUKus| 0))& (0+255)
  1614  047B  120A  118A  249F  120A  118A  	fcall	_delay2
  1615  0480                     l134:	
  1616  0480  0008               	return
  1617  0481                     __end_of_display_temp:	
  1618                           
  1619                           	psect	text7
  1620  0439                     __ptext7:	
  1621 ;; *************** function _writechar *****************
  1622 ;; Defined at:
  1623 ;;		line 65 in file "newmain.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  x               1    wreg     unsigned char 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  x               1    5[COMMON] unsigned char 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, status,0, pclath, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1637 ;;      Params:         0       0       0       0       0
  1638 ;;      Locals:         1       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0
  1640 ;;      Totals:         1       0       0       0       0
  1641 ;;Total ram usage:        1 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    1
  1644 ;; This function calls:
  1645 ;;		_delay
  1646 ;; This function is called by:
  1647 ;;		_display_temp
  1648 ;;		_writeString
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           
  1653                           ;psect for function _writechar
  1654  0439                     _writechar:	
  1655                           
  1656                           ;incstack = 0
  1657                           ; Regs used in _writechar: [wreg+status,2+status,0+pclath+cstack]
  1658                           ;writechar@x stored from wreg
  1659  0439  00F5               	movwf	writechar@x
  1660  043A                     l1158:	
  1661                           
  1662                           ;newmain.c: 66:     RA5 = 1;
  1663  043A  1283               	bcf	3,5	;RP0=0, select bank0
  1664  043B  1303               	bcf	3,6	;RP1=0, select bank0
  1665  043C  1685               	bsf	5,5	;volatile
  1666                           
  1667                           ;newmain.c: 67:     RA4 = 0;
  1668  043D  1205               	bcf	5,4	;volatile
  1669  043E                     l1160:	
  1670                           
  1671                           ;newmain.c: 68:     PORTD = x;
  1672  043E  0875               	movf	writechar@x,w
  1673  043F  0088               	movwf	8	;volatile
  1674  0440                     l1162:	
  1675                           
  1676                           ;newmain.c: 69:     RA3 = 0;
  1677  0440  1185               	bcf	5,3	;volatile
  1678  0441                     l1164:	
  1679                           
  1680                           ;newmain.c: 70:     delay(6000);
  1681  0441  3070               	movlw	112
  1682  0442  00F0               	movwf	delay@t
  1683  0443  3017               	movlw	23
  1684  0444  00F1               	movwf	delay@t+1
  1685  0445  120A  118A  244E  120A  118A  	fcall	_delay
  1686  044A                     l1166:	
  1687                           
  1688                           ;newmain.c: 71:     RA3 = 1;
  1689  044A  1283               	bcf	3,5	;RP0=0, select bank0
  1690  044B  1303               	bcf	3,6	;RP1=0, select bank0
  1691  044C  1585               	bsf	5,3	;volatile
  1692  044D                     l71:	
  1693  044D  0008               	return
  1694  044E                     __end_of_writechar:	
  1695                           
  1696                           	psect	text8
  1697  03EB                     __ptext8:	
  1698 ;; *************** function _lcd_init *****************
  1699 ;; Defined at:
  1700 ;;		line 57 in file "newmain.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0, pclath, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1714 ;;      Params:         0       0       0       0       0
  1715 ;;      Locals:         0       0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0
  1717 ;;      Totals:         0       0       0       0       0
  1718 ;;Total ram usage:        0 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    2
  1721 ;; This function calls:
  1722 ;;		_writecmd
  1723 ;; This function is called by:
  1724 ;;		_display_temp
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           
  1729                           ;psect for function _lcd_init
  1730  03EB                     _lcd_init:	
  1731  03EB                     l1156:	
  1732                           ;incstack = 0
  1733                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1734                           
  1735                           
  1736                           ;newmain.c: 58:     writecmd(0x0F);
  1737  03EB  300F               	movlw	15
  1738  03EC  120A  118A  2424  120A  118A  	fcall	_writecmd
  1739                           
  1740                           ;newmain.c: 59:     writecmd(0x01);
  1741  03F1  3001               	movlw	1
  1742  03F2  120A  118A  2424  120A  118A  	fcall	_writecmd
  1743                           
  1744                           ;newmain.c: 60:     writecmd(0x38);
  1745  03F7  3038               	movlw	56
  1746  03F8  120A  118A  2424  120A  118A  	fcall	_writecmd
  1747  03FD                     l68:	
  1748  03FD  0008               	return
  1749  03FE                     __end_of_lcd_init:	
  1750                           
  1751                           	psect	text9
  1752  0424                     __ptext9:	
  1753 ;; *************** function _writecmd *****************
  1754 ;; Defined at:
  1755 ;;		line 76 in file "newmain.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  x               1    wreg     unsigned char 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  x               1    5[COMMON] unsigned char 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0, pclath, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1769 ;;      Params:         0       0       0       0       0
  1770 ;;      Locals:         1       0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0
  1772 ;;      Totals:         1       0       0       0       0
  1773 ;;Total ram usage:        1 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    1
  1776 ;; This function calls:
  1777 ;;		_delay
  1778 ;; This function is called by:
  1779 ;;		_lcd_init
  1780 ;;		_setCursorPos
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           
  1785                           ;psect for function _writecmd
  1786  0424                     _writecmd:	
  1787                           
  1788                           ;incstack = 0
  1789                           ; Regs used in _writecmd: [wreg+status,2+status,0+pclath+cstack]
  1790                           ;writecmd@x stored from wreg
  1791  0424  00F5               	movwf	writecmd@x
  1792  0425                     l1146:	
  1793                           
  1794                           ;newmain.c: 77:     RA5 = 0;
  1795  0425  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0426  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0427  1285               	bcf	5,5	;volatile
  1798                           
  1799                           ;newmain.c: 78:     RA4 = 0;
  1800  0428  1205               	bcf	5,4	;volatile
  1801  0429                     l1148:	
  1802                           
  1803                           ;newmain.c: 79:     PORTD = x;
  1804  0429  0875               	movf	writecmd@x,w
  1805  042A  0088               	movwf	8	;volatile
  1806  042B                     l1150:	
  1807                           
  1808                           ;newmain.c: 80:     RA3 = 0;
  1809  042B  1185               	bcf	5,3	;volatile
  1810  042C                     l1152:	
  1811                           
  1812                           ;newmain.c: 81:     delay(6000);
  1813  042C  3070               	movlw	112
  1814  042D  00F0               	movwf	delay@t
  1815  042E  3017               	movlw	23
  1816  042F  00F1               	movwf	delay@t+1
  1817  0430  120A  118A  244E  120A  118A  	fcall	_delay
  1818  0435                     l1154:	
  1819                           
  1820                           ;newmain.c: 82:     RA3 = 1;
  1821  0435  1283               	bcf	3,5	;RP0=0, select bank0
  1822  0436  1303               	bcf	3,6	;RP1=0, select bank0
  1823  0437  1585               	bsf	5,3	;volatile
  1824  0438                     l74:	
  1825  0438  0008               	return
  1826  0439                     __end_of_writecmd:	
  1827                           
  1828                           	psect	text10
  1829  044E                     __ptext10:	
  1830 ;; *************** function _delay *****************
  1831 ;; Defined at:
  1832 ;;		line 87 in file "newmain.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  t               2    0[COMMON] int 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  i               2    3[COMMON] int 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1846 ;;      Params:         2       0       0       0       0
  1847 ;;      Locals:         2       0       0       0       0
  1848 ;;      Temps:          1       0       0       0       0
  1849 ;;      Totals:         5       0       0       0       0
  1850 ;;Total ram usage:        5 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; This function calls:
  1853 ;;		Nothing
  1854 ;; This function is called by:
  1855 ;;		_writechar
  1856 ;;		_writecmd
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function _delay
  1862  044E                     _delay:	
  1863  044E                     l1142:	
  1864                           ;incstack = 0
  1865                           ; Regs used in _delay: [wreg+status,2]
  1866                           
  1867                           
  1868                           ;newmain.c: 88:     int i;;newmain.c: 89:     for (i = 0; i < t; i++);
  1869  044E  01F3               	clrf	delay@i
  1870  044F  01F4               	clrf	delay@i+1
  1871  0450  2C57               	goto	l77
  1872  0451                     l1144:	
  1873  0451  3001               	movlw	1
  1874  0452  07F3               	addwf	delay@i,f
  1875  0453  1803               	skipnc
  1876  0454  0AF4               	incf	delay@i+1,f
  1877  0455  3000               	movlw	0
  1878  0456  07F4               	addwf	delay@i+1,f
  1879  0457                     l77:	
  1880  0457  0874               	movf	delay@i+1,w
  1881  0458  3A80               	xorlw	128
  1882  0459  00F2               	movwf	??_delay
  1883  045A  0871               	movf	delay@t+1,w
  1884  045B  3A80               	xorlw	128
  1885  045C  0272               	subwf	??_delay,w
  1886  045D  1D03               	skipz
  1887  045E  2C61               	goto	u565
  1888  045F  0870               	movf	delay@t,w
  1889  0460  0273               	subwf	delay@i,w
  1890  0461                     u565:	
  1891  0461  1C03               	skipc
  1892  0462  2C64               	goto	u561
  1893  0463  2C65               	goto	u560
  1894  0464                     u561:	
  1895  0464  2C51               	goto	l1144
  1896  0465                     u560:	
  1897  0465                     l80:	
  1898  0465  0008               	return
  1899  0466                     __end_of_delay:	
  1900                           
  1901                           	psect	text11
  1902  049F                     __ptext11:	
  1903 ;; *************** function _delay2 *****************
  1904 ;; Defined at:
  1905 ;;		line 132 in file "newmain.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  t               1    wreg     PTR int 
  1908 ;;		 -> t430us(4), t70us(4), t503us(4), tUKus(4), 
  1909 ;;		 -> t63us(4), 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  t               1    4[COMMON] PTR int 
  1912 ;;		 -> t430us(4), t70us(4), t503us(4), tUKus(4), 
  1913 ;;		 -> t63us(4), 
  1914 ;;  z               1    3[COMMON] unsigned char 
  1915 ;;  y               1    2[COMMON] unsigned char 
  1916 ;;  x               1    1[COMMON] unsigned char 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      void 
  1919 ;; Registers used:
  1920 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1926 ;;      Params:         0       0       0       0       0
  1927 ;;      Locals:         4       0       0       0       0
  1928 ;;      Temps:          1       0       0       0       0
  1929 ;;      Totals:         5       0       0       0       0
  1930 ;;Total ram usage:        5 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; This function calls:
  1933 ;;		Nothing
  1934 ;; This function is called by:
  1935 ;;		_write_byte
  1936 ;;		_read_byte
  1937 ;;		_display_temp
  1938 ;;		_reset
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           
  1943                           ;psect for function _delay2
  1944  049F                     _delay2:	
  1945                           
  1946                           ;incstack = 0
  1947                           ; Regs used in _delay2: [wreg-fsr0h+status,2+status,0]
  1948                           ;delay2@t stored from wreg
  1949  049F  00F4               	movwf	delay2@t
  1950  04A0                     l1168:	
  1951                           
  1952                           ;newmain.c: 133:     char x = t[0];
  1953  04A0  0874               	movf	delay2@t,w
  1954  04A1  0084               	movwf	4
  1955  04A2  1383               	bcf	3,7	;select IRP bank0
  1956  04A3  0800               	movf	0,w
  1957  04A4  00F0               	movwf	??_delay2
  1958  04A5  0870               	movf	??_delay2,w
  1959  04A6  00F1               	movwf	delay2@x
  1960  04A7                     l1170:	
  1961                           
  1962                           ;newmain.c: 134:     char y = t[1];
  1963  04A7  0874               	movf	delay2@t,w
  1964  04A8  3E02               	addlw	2
  1965  04A9  0084               	movwf	4
  1966  04AA  0800               	movf	0,w
  1967  04AB  00F0               	movwf	??_delay2
  1968  04AC  0870               	movf	??_delay2,w
  1969  04AD  00F2               	movwf	delay2@y
  1970  04AE                     l1172:	
  1971                           
  1972                           ;newmain.c: 138:         z = y;
  1973  04AE  0872               	movf	delay2@y,w
  1974  04AF  00F0               	movwf	??_delay2
  1975  04B0  0870               	movf	??_delay2,w
  1976  04B1  00F3               	movwf	delay2@z
  1977  04B2                     l114:	
  1978                           ;newmain.c: 139:         do {
  1979                           
  1980                           
  1981                           ;newmain.c: 141:         } while (--z);
  1982  04B2  3001               	movlw	1
  1983  04B3  02F3               	subwf	delay2@z,f
  1984  04B4  1D03               	btfss	3,2
  1985  04B5  2CB7               	goto	u571
  1986  04B6  2CB8               	goto	u570
  1987  04B7                     u571:	
  1988  04B7  2CB2               	goto	l114
  1989  04B8                     u570:	
  1990  04B8                     l1174:	
  1991                           
  1992                           ;newmain.c: 142:     } while (--x);
  1993  04B8  3001               	movlw	1
  1994  04B9  02F1               	subwf	delay2@x,f
  1995  04BA  1D03               	btfss	3,2
  1996  04BB  2CBD               	goto	u581
  1997  04BC  2CBE               	goto	u580
  1998  04BD                     u581:	
  1999  04BD  2CAE               	goto	l1172
  2000  04BE                     u580:	
  2001  04BE                     l117:	
  2002  04BE  0008               	return
  2003  04BF                     __end_of_delay2:	
  2004                           
  2005                           	psect	text12
  2006  055A                     __ptext12:	
  2007 ;; *************** function ___lwmod *****************
  2008 ;; Defined at:
  2009 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  divisor         2    0[COMMON] unsigned int 
  2012 ;;  dividend        2    2[COMMON] unsigned int 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  counter         1    5[COMMON] unsigned char 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  2    0[COMMON] unsigned int 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2024 ;;      Params:         4       0       0       0       0
  2025 ;;      Locals:         1       0       0       0       0
  2026 ;;      Temps:          1       0       0       0       0
  2027 ;;      Totals:         6       0       0       0       0
  2028 ;;Total ram usage:        6 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		_get_temp
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           
  2038                           ;psect for function ___lwmod
  2039  055A                     ___lwmod:	
  2040  055A                     l1404:	
  2041                           ;incstack = 0
  2042                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2043                           
  2044  055A  0870               	movf	___lwmod@divisor,w
  2045  055B  0471               	iorwf	___lwmod@divisor+1,w
  2046  055C  1903               	btfsc	3,2
  2047  055D  2D5F               	goto	u911
  2048  055E  2D60               	goto	u910
  2049  055F                     u911:	
  2050  055F  2D8F               	goto	l1422
  2051  0560                     u910:	
  2052  0560                     l1406:	
  2053  0560  01F5               	clrf	___lwmod@counter
  2054  0561  0AF5               	incf	___lwmod@counter,f
  2055  0562  2D6E               	goto	l1412
  2056  0563                     l1408:	
  2057  0563  3001               	movlw	1
  2058  0564                     u925:	
  2059  0564  1003               	clrc
  2060  0565  0DF0               	rlf	___lwmod@divisor,f
  2061  0566  0DF1               	rlf	___lwmod@divisor+1,f
  2062  0567  3EFF               	addlw	-1
  2063  0568  1D03               	skipz
  2064  0569  2D64               	goto	u925
  2065  056A                     l1410:	
  2066  056A  3001               	movlw	1
  2067  056B  00F4               	movwf	??___lwmod
  2068  056C  0874               	movf	??___lwmod,w
  2069  056D  07F5               	addwf	___lwmod@counter,f
  2070  056E                     l1412:	
  2071  056E  1FF1               	btfss	___lwmod@divisor+1,7
  2072  056F  2D71               	goto	u931
  2073  0570  2D72               	goto	u930
  2074  0571                     u931:	
  2075  0571  2D63               	goto	l1408
  2076  0572                     u930:	
  2077  0572                     l1414:	
  2078  0572  0871               	movf	___lwmod@divisor+1,w
  2079  0573  0273               	subwf	___lwmod@dividend+1,w
  2080  0574  1D03               	skipz
  2081  0575  2D78               	goto	u945
  2082  0576  0870               	movf	___lwmod@divisor,w
  2083  0577  0272               	subwf	___lwmod@dividend,w
  2084  0578                     u945:	
  2085  0578  1C03               	skipc
  2086  0579  2D7B               	goto	u941
  2087  057A  2D7C               	goto	u940
  2088  057B                     u941:	
  2089  057B  2D82               	goto	l1418
  2090  057C                     u940:	
  2091  057C                     l1416:	
  2092  057C  0870               	movf	___lwmod@divisor,w
  2093  057D  02F2               	subwf	___lwmod@dividend,f
  2094  057E  0871               	movf	___lwmod@divisor+1,w
  2095  057F  1C03               	skipc
  2096  0580  03F3               	decf	___lwmod@dividend+1,f
  2097  0581  02F3               	subwf	___lwmod@dividend+1,f
  2098  0582                     l1418:	
  2099  0582  3001               	movlw	1
  2100  0583                     u955:	
  2101  0583  1003               	clrc
  2102  0584  0CF1               	rrf	___lwmod@divisor+1,f
  2103  0585  0CF0               	rrf	___lwmod@divisor,f
  2104  0586  3EFF               	addlw	-1
  2105  0587  1D03               	skipz
  2106  0588  2D83               	goto	u955
  2107  0589                     l1420:	
  2108  0589  3001               	movlw	1
  2109  058A  02F5               	subwf	___lwmod@counter,f
  2110  058B  1D03               	btfss	3,2
  2111  058C  2D8E               	goto	u961
  2112  058D  2D8F               	goto	u960
  2113  058E                     u961:	
  2114  058E  2D72               	goto	l1414
  2115  058F                     u960:	
  2116  058F                     l1422:	
  2117  058F  0873               	movf	___lwmod@dividend+1,w
  2118  0590  00F1               	movwf	?___lwmod+1
  2119  0591  0872               	movf	___lwmod@dividend,w
  2120  0592  00F0               	movwf	?___lwmod
  2121  0593                     l528:	
  2122  0593  0008               	return
  2123  0594                     __end_of___lwmod:	
  2124                           
  2125                           	psect	text13
  2126  0594                     __ptext13:	
  2127 ;; *************** function ___lwdiv *****************
  2128 ;; Defined at:
  2129 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  divisor         2    6[COMMON] unsigned int 
  2132 ;;  dividend        2    8[COMMON] unsigned int 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  quotient        2   11[COMMON] unsigned int 
  2135 ;;  counter         1   13[COMMON] unsigned char 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  2    6[COMMON] unsigned int 
  2138 ;; Registers used:
  2139 ;;		wreg, status,2, status,0
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2145 ;;      Params:         4       0       0       0       0
  2146 ;;      Locals:         3       0       0       0       0
  2147 ;;      Temps:          1       0       0       0       0
  2148 ;;      Totals:         8       0       0       0       0
  2149 ;;Total ram usage:        8 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_get_temp
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function ___lwdiv
  2160  0594                     ___lwdiv:	
  2161  0594                     l1378:	
  2162                           ;incstack = 0
  2163                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2164                           
  2165  0594  01FB               	clrf	___lwdiv@quotient
  2166  0595  01FC               	clrf	___lwdiv@quotient+1
  2167  0596                     l1380:	
  2168  0596  0876               	movf	___lwdiv@divisor,w
  2169  0597  0477               	iorwf	___lwdiv@divisor+1,w
  2170  0598  1903               	btfsc	3,2
  2171  0599  2D9B               	goto	u841
  2172  059A  2D9C               	goto	u840
  2173  059B                     u841:	
  2174  059B  2DD3               	goto	l1400
  2175  059C                     u840:	
  2176  059C                     l1382:	
  2177  059C  01FD               	clrf	___lwdiv@counter
  2178  059D  0AFD               	incf	___lwdiv@counter,f
  2179  059E  2DAA               	goto	l1388
  2180  059F                     l1384:	
  2181  059F  3001               	movlw	1
  2182  05A0                     u855:	
  2183  05A0  1003               	clrc
  2184  05A1  0DF6               	rlf	___lwdiv@divisor,f
  2185  05A2  0DF7               	rlf	___lwdiv@divisor+1,f
  2186  05A3  3EFF               	addlw	-1
  2187  05A4  1D03               	skipz
  2188  05A5  2DA0               	goto	u855
  2189  05A6                     l1386:	
  2190  05A6  3001               	movlw	1
  2191  05A7  00FA               	movwf	??___lwdiv
  2192  05A8  087A               	movf	??___lwdiv,w
  2193  05A9  07FD               	addwf	___lwdiv@counter,f
  2194  05AA                     l1388:	
  2195  05AA  1FF7               	btfss	___lwdiv@divisor+1,7
  2196  05AB  2DAD               	goto	u861
  2197  05AC  2DAE               	goto	u860
  2198  05AD                     u861:	
  2199  05AD  2D9F               	goto	l1384
  2200  05AE                     u860:	
  2201  05AE                     l1390:	
  2202  05AE  3001               	movlw	1
  2203  05AF                     u875:	
  2204  05AF  1003               	clrc
  2205  05B0  0DFB               	rlf	___lwdiv@quotient,f
  2206  05B1  0DFC               	rlf	___lwdiv@quotient+1,f
  2207  05B2  3EFF               	addlw	-1
  2208  05B3  1D03               	skipz
  2209  05B4  2DAF               	goto	u875
  2210  05B5  0877               	movf	___lwdiv@divisor+1,w
  2211  05B6  0279               	subwf	___lwdiv@dividend+1,w
  2212  05B7  1D03               	skipz
  2213  05B8  2DBB               	goto	u885
  2214  05B9  0876               	movf	___lwdiv@divisor,w
  2215  05BA  0278               	subwf	___lwdiv@dividend,w
  2216  05BB                     u885:	
  2217  05BB  1C03               	skipc
  2218  05BC  2DBE               	goto	u881
  2219  05BD  2DBF               	goto	u880
  2220  05BE                     u881:	
  2221  05BE  2DC6               	goto	l1396
  2222  05BF                     u880:	
  2223  05BF                     l1392:	
  2224  05BF  0876               	movf	___lwdiv@divisor,w
  2225  05C0  02F8               	subwf	___lwdiv@dividend,f
  2226  05C1  0877               	movf	___lwdiv@divisor+1,w
  2227  05C2  1C03               	skipc
  2228  05C3  03F9               	decf	___lwdiv@dividend+1,f
  2229  05C4  02F9               	subwf	___lwdiv@dividend+1,f
  2230  05C5                     l1394:	
  2231  05C5  147B               	bsf	___lwdiv@quotient,0
  2232  05C6                     l1396:	
  2233  05C6  3001               	movlw	1
  2234  05C7                     u895:	
  2235  05C7  1003               	clrc
  2236  05C8  0CF7               	rrf	___lwdiv@divisor+1,f
  2237  05C9  0CF6               	rrf	___lwdiv@divisor,f
  2238  05CA  3EFF               	addlw	-1
  2239  05CB  1D03               	skipz
  2240  05CC  2DC7               	goto	u895
  2241  05CD                     l1398:	
  2242  05CD  3001               	movlw	1
  2243  05CE  02FD               	subwf	___lwdiv@counter,f
  2244  05CF  1D03               	btfss	3,2
  2245  05D0  2DD2               	goto	u901
  2246  05D1  2DD3               	goto	u900
  2247  05D2                     u901:	
  2248  05D2  2DAE               	goto	l1390
  2249  05D3                     u900:	
  2250  05D3                     l1400:	
  2251  05D3  087C               	movf	___lwdiv@quotient+1,w
  2252  05D4  00F7               	movwf	?___lwdiv+1
  2253  05D5  087B               	movf	___lwdiv@quotient,w
  2254  05D6  00F6               	movwf	?___lwdiv
  2255  05D7                     l518:	
  2256  05D7  0008               	return
  2257  05D8                     __end_of___lwdiv:	
  2258                           
  2259                           	psect	text14
  2260  05D8                     __ptext14:	
  2261 ;; *************** function ___awmod *****************
  2262 ;; Defined at:
  2263 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  divisor         2    0[COMMON] int 
  2266 ;;  dividend        2    2[COMMON] int 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  sign            1    6[COMMON] unsigned char 
  2269 ;;  counter         1    5[COMMON] unsigned char 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  2    0[COMMON] int 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, status,0
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2279 ;;      Params:         4       0       0       0       0
  2280 ;;      Locals:         2       0       0       0       0
  2281 ;;      Temps:          1       0       0       0       0
  2282 ;;      Totals:         7       0       0       0       0
  2283 ;;Total ram usage:        7 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; This function calls:
  2286 ;;		Nothing
  2287 ;; This function is called by:
  2288 ;;		_get_temp
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           
  2293                           ;psect for function ___awmod
  2294  05D8                     ___awmod:	
  2295  05D8                     l1340:	
  2296                           ;incstack = 0
  2297                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2298                           
  2299  05D8  01F6               	clrf	___awmod@sign
  2300  05D9                     l1342:	
  2301  05D9  1FF3               	btfss	___awmod@dividend+1,7
  2302  05DA  2DDC               	goto	u751
  2303  05DB  2DDD               	goto	u750
  2304  05DC                     u751:	
  2305  05DC  2DE4               	goto	l1348
  2306  05DD                     u750:	
  2307  05DD                     l1344:	
  2308  05DD  09F2               	comf	___awmod@dividend,f
  2309  05DE  09F3               	comf	___awmod@dividend+1,f
  2310  05DF  0AF2               	incf	___awmod@dividend,f
  2311  05E0  1903               	skipnz
  2312  05E1  0AF3               	incf	___awmod@dividend+1,f
  2313  05E2                     l1346:	
  2314  05E2  01F6               	clrf	___awmod@sign
  2315  05E3  0AF6               	incf	___awmod@sign,f
  2316  05E4                     l1348:	
  2317  05E4  1FF1               	btfss	___awmod@divisor+1,7
  2318  05E5  2DE7               	goto	u761
  2319  05E6  2DE8               	goto	u760
  2320  05E7                     u761:	
  2321  05E7  2DED               	goto	l1352
  2322  05E8                     u760:	
  2323  05E8                     l1350:	
  2324  05E8  09F0               	comf	___awmod@divisor,f
  2325  05E9  09F1               	comf	___awmod@divisor+1,f
  2326  05EA  0AF0               	incf	___awmod@divisor,f
  2327  05EB  1903               	skipnz
  2328  05EC  0AF1               	incf	___awmod@divisor+1,f
  2329  05ED                     l1352:	
  2330  05ED  0870               	movf	___awmod@divisor,w
  2331  05EE  0471               	iorwf	___awmod@divisor+1,w
  2332  05EF  1903               	btfsc	3,2
  2333  05F0  2DF2               	goto	u771
  2334  05F1  2DF3               	goto	u770
  2335  05F2                     u771:	
  2336  05F2  2E22               	goto	l1370
  2337  05F3                     u770:	
  2338  05F3                     l1354:	
  2339  05F3  01F5               	clrf	___awmod@counter
  2340  05F4  0AF5               	incf	___awmod@counter,f
  2341  05F5  2E01               	goto	l1360
  2342  05F6                     l1356:	
  2343  05F6  3001               	movlw	1
  2344  05F7                     u785:	
  2345  05F7  1003               	clrc
  2346  05F8  0DF0               	rlf	___awmod@divisor,f
  2347  05F9  0DF1               	rlf	___awmod@divisor+1,f
  2348  05FA  3EFF               	addlw	-1
  2349  05FB  1D03               	skipz
  2350  05FC  2DF7               	goto	u785
  2351  05FD                     l1358:	
  2352  05FD  3001               	movlw	1
  2353  05FE  00F4               	movwf	??___awmod
  2354  05FF  0874               	movf	??___awmod,w
  2355  0600  07F5               	addwf	___awmod@counter,f
  2356  0601                     l1360:	
  2357  0601  1FF1               	btfss	___awmod@divisor+1,7
  2358  0602  2E04               	goto	u791
  2359  0603  2E05               	goto	u790
  2360  0604                     u791:	
  2361  0604  2DF6               	goto	l1356
  2362  0605                     u790:	
  2363  0605                     l1362:	
  2364  0605  0871               	movf	___awmod@divisor+1,w
  2365  0606  0273               	subwf	___awmod@dividend+1,w
  2366  0607  1D03               	skipz
  2367  0608  2E0B               	goto	u805
  2368  0609  0870               	movf	___awmod@divisor,w
  2369  060A  0272               	subwf	___awmod@dividend,w
  2370  060B                     u805:	
  2371  060B  1C03               	skipc
  2372  060C  2E0E               	goto	u801
  2373  060D  2E0F               	goto	u800
  2374  060E                     u801:	
  2375  060E  2E15               	goto	l1366
  2376  060F                     u800:	
  2377  060F                     l1364:	
  2378  060F  0870               	movf	___awmod@divisor,w
  2379  0610  02F2               	subwf	___awmod@dividend,f
  2380  0611  0871               	movf	___awmod@divisor+1,w
  2381  0612  1C03               	skipc
  2382  0613  03F3               	decf	___awmod@dividend+1,f
  2383  0614  02F3               	subwf	___awmod@dividend+1,f
  2384  0615                     l1366:	
  2385  0615  3001               	movlw	1
  2386  0616                     u815:	
  2387  0616  1003               	clrc
  2388  0617  0CF1               	rrf	___awmod@divisor+1,f
  2389  0618  0CF0               	rrf	___awmod@divisor,f
  2390  0619  3EFF               	addlw	-1
  2391  061A  1D03               	skipz
  2392  061B  2E16               	goto	u815
  2393  061C                     l1368:	
  2394  061C  3001               	movlw	1
  2395  061D  02F5               	subwf	___awmod@counter,f
  2396  061E  1D03               	btfss	3,2
  2397  061F  2E21               	goto	u821
  2398  0620  2E22               	goto	u820
  2399  0621                     u821:	
  2400  0621  2E05               	goto	l1362
  2401  0622                     u820:	
  2402  0622                     l1370:	
  2403  0622  0876               	movf	___awmod@sign,w
  2404  0623  1903               	btfsc	3,2
  2405  0624  2E26               	goto	u831
  2406  0625  2E27               	goto	u830
  2407  0626                     u831:	
  2408  0626  2E2C               	goto	l1374
  2409  0627                     u830:	
  2410  0627                     l1372:	
  2411  0627  09F2               	comf	___awmod@dividend,f
  2412  0628  09F3               	comf	___awmod@dividend+1,f
  2413  0629  0AF2               	incf	___awmod@dividend,f
  2414  062A  1903               	skipnz
  2415  062B  0AF3               	incf	___awmod@dividend+1,f
  2416  062C                     l1374:	
  2417  062C  0873               	movf	___awmod@dividend+1,w
  2418  062D  00F1               	movwf	?___awmod+1
  2419  062E  0872               	movf	___awmod@dividend,w
  2420  062F  00F0               	movwf	?___awmod
  2421  0630                     l412:	
  2422  0630  0008               	return
  2423  0631                     __end_of___awmod:	
  2424                           
  2425                           	psect	text15
  2426  0631                     __ptext15:	
  2427 ;; *************** function ___awdiv *****************
  2428 ;; Defined at:
  2429 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  divisor         2    0[COMMON] int 
  2432 ;;  dividend        2    2[COMMON] int 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  quotient        2    7[COMMON] int 
  2435 ;;  sign            1    6[COMMON] unsigned char 
  2436 ;;  counter         1    5[COMMON] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  2    0[COMMON] int 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2446 ;;      Params:         4       0       0       0       0
  2447 ;;      Locals:         4       0       0       0       0
  2448 ;;      Temps:          1       0       0       0       0
  2449 ;;      Totals:         9       0       0       0       0
  2450 ;;Total ram usage:        9 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; This function calls:
  2453 ;;		Nothing
  2454 ;; This function is called by:
  2455 ;;		_get_temp
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           
  2460                           ;psect for function ___awdiv
  2461  0631                     ___awdiv:	
  2462  0631                     l1296:	
  2463                           ;incstack = 0
  2464                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2465                           
  2466  0631  01F6               	clrf	___awdiv@sign
  2467  0632                     l1298:	
  2468  0632  1FF1               	btfss	___awdiv@divisor+1,7
  2469  0633  2E35               	goto	u651
  2470  0634  2E36               	goto	u650
  2471  0635                     u651:	
  2472  0635  2E3D               	goto	l1304
  2473  0636                     u650:	
  2474  0636                     l1300:	
  2475  0636  09F0               	comf	___awdiv@divisor,f
  2476  0637  09F1               	comf	___awdiv@divisor+1,f
  2477  0638  0AF0               	incf	___awdiv@divisor,f
  2478  0639  1903               	skipnz
  2479  063A  0AF1               	incf	___awdiv@divisor+1,f
  2480  063B                     l1302:	
  2481  063B  01F6               	clrf	___awdiv@sign
  2482  063C  0AF6               	incf	___awdiv@sign,f
  2483  063D                     l1304:	
  2484  063D  1FF3               	btfss	___awdiv@dividend+1,7
  2485  063E  2E40               	goto	u661
  2486  063F  2E41               	goto	u660
  2487  0640                     u661:	
  2488  0640  2E4A               	goto	l1310
  2489  0641                     u660:	
  2490  0641                     l1306:	
  2491  0641  09F2               	comf	___awdiv@dividend,f
  2492  0642  09F3               	comf	___awdiv@dividend+1,f
  2493  0643  0AF2               	incf	___awdiv@dividend,f
  2494  0644  1903               	skipnz
  2495  0645  0AF3               	incf	___awdiv@dividend+1,f
  2496  0646                     l1308:	
  2497  0646  3001               	movlw	1
  2498  0647  00F4               	movwf	??___awdiv
  2499  0648  0874               	movf	??___awdiv,w
  2500  0649  06F6               	xorwf	___awdiv@sign,f
  2501  064A                     l1310:	
  2502  064A  01F7               	clrf	___awdiv@quotient
  2503  064B  01F8               	clrf	___awdiv@quotient+1
  2504  064C                     l1312:	
  2505  064C  0870               	movf	___awdiv@divisor,w
  2506  064D  0471               	iorwf	___awdiv@divisor+1,w
  2507  064E  1903               	btfsc	3,2
  2508  064F  2E51               	goto	u671
  2509  0650  2E52               	goto	u670
  2510  0651                     u671:	
  2511  0651  2E89               	goto	l1332
  2512  0652                     u670:	
  2513  0652                     l1314:	
  2514  0652  01F5               	clrf	___awdiv@counter
  2515  0653  0AF5               	incf	___awdiv@counter,f
  2516  0654  2E60               	goto	l1320
  2517  0655                     l1316:	
  2518  0655  3001               	movlw	1
  2519  0656                     u685:	
  2520  0656  1003               	clrc
  2521  0657  0DF0               	rlf	___awdiv@divisor,f
  2522  0658  0DF1               	rlf	___awdiv@divisor+1,f
  2523  0659  3EFF               	addlw	-1
  2524  065A  1D03               	skipz
  2525  065B  2E56               	goto	u685
  2526  065C                     l1318:	
  2527  065C  3001               	movlw	1
  2528  065D  00F4               	movwf	??___awdiv
  2529  065E  0874               	movf	??___awdiv,w
  2530  065F  07F5               	addwf	___awdiv@counter,f
  2531  0660                     l1320:	
  2532  0660  1FF1               	btfss	___awdiv@divisor+1,7
  2533  0661  2E63               	goto	u691
  2534  0662  2E64               	goto	u690
  2535  0663                     u691:	
  2536  0663  2E55               	goto	l1316
  2537  0664                     u690:	
  2538  0664                     l1322:	
  2539  0664  3001               	movlw	1
  2540  0665                     u705:	
  2541  0665  1003               	clrc
  2542  0666  0DF7               	rlf	___awdiv@quotient,f
  2543  0667  0DF8               	rlf	___awdiv@quotient+1,f
  2544  0668  3EFF               	addlw	-1
  2545  0669  1D03               	skipz
  2546  066A  2E65               	goto	u705
  2547  066B  0871               	movf	___awdiv@divisor+1,w
  2548  066C  0273               	subwf	___awdiv@dividend+1,w
  2549  066D  1D03               	skipz
  2550  066E  2E71               	goto	u715
  2551  066F  0870               	movf	___awdiv@divisor,w
  2552  0670  0272               	subwf	___awdiv@dividend,w
  2553  0671                     u715:	
  2554  0671  1C03               	skipc
  2555  0672  2E74               	goto	u711
  2556  0673  2E75               	goto	u710
  2557  0674                     u711:	
  2558  0674  2E7C               	goto	l1328
  2559  0675                     u710:	
  2560  0675                     l1324:	
  2561  0675  0870               	movf	___awdiv@divisor,w
  2562  0676  02F2               	subwf	___awdiv@dividend,f
  2563  0677  0871               	movf	___awdiv@divisor+1,w
  2564  0678  1C03               	skipc
  2565  0679  03F3               	decf	___awdiv@dividend+1,f
  2566  067A  02F3               	subwf	___awdiv@dividend+1,f
  2567  067B                     l1326:	
  2568  067B  1477               	bsf	___awdiv@quotient,0
  2569  067C                     l1328:	
  2570  067C  3001               	movlw	1
  2571  067D                     u725:	
  2572  067D  1003               	clrc
  2573  067E  0CF1               	rrf	___awdiv@divisor+1,f
  2574  067F  0CF0               	rrf	___awdiv@divisor,f
  2575  0680  3EFF               	addlw	-1
  2576  0681  1D03               	skipz
  2577  0682  2E7D               	goto	u725
  2578  0683                     l1330:	
  2579  0683  3001               	movlw	1
  2580  0684  02F5               	subwf	___awdiv@counter,f
  2581  0685  1D03               	btfss	3,2
  2582  0686  2E88               	goto	u731
  2583  0687  2E89               	goto	u730
  2584  0688                     u731:	
  2585  0688  2E64               	goto	l1322
  2586  0689                     u730:	
  2587  0689                     l1332:	
  2588  0689  0876               	movf	___awdiv@sign,w
  2589  068A  1903               	btfsc	3,2
  2590  068B  2E8D               	goto	u741
  2591  068C  2E8E               	goto	u740
  2592  068D                     u741:	
  2593  068D  2E93               	goto	l1336
  2594  068E                     u740:	
  2595  068E                     l1334:	
  2596  068E  09F7               	comf	___awdiv@quotient,f
  2597  068F  09F8               	comf	___awdiv@quotient+1,f
  2598  0690  0AF7               	incf	___awdiv@quotient,f
  2599  0691  1903               	skipnz
  2600  0692  0AF8               	incf	___awdiv@quotient+1,f
  2601  0693                     l1336:	
  2602  0693  0878               	movf	___awdiv@quotient+1,w
  2603  0694  00F1               	movwf	?___awdiv+1
  2604  0695  0877               	movf	___awdiv@quotient,w
  2605  0696  00F0               	movwf	?___awdiv
  2606  0697                     l399:	
  2607  0697  0008               	return
  2608  0698                     __end_of___awdiv:	
  2609  007E                     btemp	set	126	;btemp
  2610  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    8
    Data        30
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6      49
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    delay2@t	PTR int  size(1) Largest target is 4
		 -> t430us(BANK0[4]), t70us(BANK0[4]), t503us(BANK0[4]), tUKus(BANK0[4]), 
		 -> t63us(BANK0[4]), 


Critical Paths under _main in COMMON

    _get_temp->___lwdiv
    _write_byte->_delay2
    _reset->_delay2
    _read_byte->_delay2
    _display_temp->_writechar
    _writechar->_delay
    _lcd_init->_writecmd
    _writecmd->_delay
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    _main->_get_temp

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4824
                       _display_temp
                           _get_temp
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             6     6      0    4073
                                              0 BANK0      6     6      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                       _display_temp
                          _read_byte
                              _reset
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     425
                                              5 COMMON     5     5      0
                             _delay2
 ---------------------------------------------------------------------------------
 (2) _reset                                                1     1      0     336
                                              5 COMMON     1     1      0
                             _delay2
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     382
                                              5 COMMON     3     3      0
                             _delay2
 ---------------------------------------------------------------------------------
 (2) _display_temp                                         0     0      0     751
                             _delay2
                           _lcd_init
                          _writechar
 ---------------------------------------------------------------------------------
 (3) _writechar                                            1     1      0     220
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _lcd_init                                             0     0      0     220
                           _writecmd
 ---------------------------------------------------------------------------------
 (4) _writecmd                                             1     1      0     220
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                5     3      2     198
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _delay2                                               5     5      0     311
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_temp
     _delay2
     _lcd_init
       _writecmd
         _delay
     _writechar
       _delay
   _get_temp
     ___awdiv
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _display_temp
       _delay2
       _lcd_init
         _writecmd
           _delay
       _writechar
         _delay
     _read_byte
       _delay2
     _reset
       _delay2
     _write_byte
       _delay2
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6      31       5       61.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3F      12        0.0%
ABS                  0      0      3F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 01 16:59:32 2019

                      pc 0002                       l71 044D                       l80 0465  
                     l65 03EA                       l74 0438                       l68 03FD  
                     l77 0457                       _TX 0047                       _TZ 0048  
           ___awdiv@sign 0076                       _wd 003E                       fsr 0004  
                    l114 04B2                      l131 0522                      l123 0559  
                    l117 04BE                      l134 0480                      l142 04EC  
                    l152 07E0                      l138 04C2                      l412 0630  
                    l518 05D7                      l528 0593                      l399 0697  
                    _RA0 0028                      _RA2 002A                      _RA3 002B  
                    _RA4 002C                      _RA5 002D                      u600 0559  
                    u601 0558                      u610 0513                      u611 0512  
                    u620 0521                      u621 0520                      u710 0675  
                    u630 04DD                      u711 0674                      u631 04DC  
                    u800 060F                      u560 0465                      u640 04EC  
                    u705 0665                      u801 060E                      u561 0464  
                    u641 04EB                      u730 0689                      u650 0636  
                    u570 04B8                      u731 0688                      u715 0671  
                    u651 0635                      u571 04B7                      u740 068E  
                    u660 0641                      u820 0622                      u900 05D3  
                    u580 04BE                      u741 068D                      u725 067D  
                    u661 0640                      u821 0621                      u805 060B  
                    u901 05D2                      u581 04BD                      u565 0461  
                    u670 0652                      u830 0627                      u750 05DD  
                    u910 0560                      u590 053D                      u671 0651  
                    u831 0626                      u815 0616                      u751 05DC  
                    u911 055F                      u591 053C                      u760 05E8  
                    u840 059C                      u761 05E7                      u841 059B  
                    u690 0664                      u770 05F3                      u930 0572  
                    u691 0663                      u771 05F2                      u931 0571  
                    u860 05AE                      u940 057C                      u685 0656  
                    u861 05AD                      u941 057B                      u925 0564  
                    u790 0605                      u791 0604                      u855 05A0  
                    u880 05BF                      u960 058F                      u785 05F7  
                    u881 05BE                      u961 058E                      u945 0578  
                    u970 06CC                      u875 05AF                      u955 0583  
                    u971 06CB                      u885 05BB                      _THV 0049  
                    u895 05C7                      u975 06C8            ?_display_temp 0070  
                    u985 06F9                      u995 0704                      _TLV 004A  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     l1200 053D  
                   l1040 03E6                     l1210 054B                     l1202 0540  
                   l1042 03E7                     l1300 0636                     l1212 0552  
                   l1204 0546                     l1036 03E1                     l1310 064A  
                   l1302 063B                     l1142 044E                     l1150 042B  
                   l1230 04FA                     l1214 0554                     l1206 0549  
                   l1038 03E5                     l1320 0660                     l1312 064C  
                   l1304 063D                     l1400 05D3                     l1144 0451  
                   l1152 042C                     l1160 043E                     l1240 04FF  
                   l1232 04FB                     l1224 04F2                     l1216 04ED  
                   l1208 054A                     l1330 0683                     l1322 0664  
                   l1314 0652                     l1306 0641                     l1410 056A  
                   l1170 04A7                     l1154 0435                     l1146 0425  
                   l1162 0440                     l1250 0506                     l1242 0500  
                   l1234 04FC                     l1226 04F4                     l1218 04EE  
                   l1324 0675                     l1316 0655                     l1332 0689  
                   l1308 0646                     l1340 05D8                     l1420 0589  
                   l1412 056E                     l1404 055A                     l1172 04AE  
                   l1148 0429                     l1156 03EB                     l1164 0441  
                   l1260 0514                     l1252 0507                     l1244 0503  
                   l1236 04FD                     l1228 04F7                     l1334 068E  
                   l1326 067B                     l1318 065C                     l1350 05E8  
                   l1342 05D9                     l1414 0572                     l1406 0560  
                   l1422 058F                     l1174 04B8                     l1166 044A  
                   l1158 043A                     l1270 0466                     l1262 051A  
                   l1254 0508                     l1246 0504                     l1238 04FE  
                   l1190 0534                     l1182 0528                     l1430 06AC  
                   l1510 0403                     l1336 0693                     l1328 067C  
                   l1360 0601                     l1352 05ED                     l1344 05DD  
                   l1416 057C                     l1408 0563                     l1168 04A0  
                   l1272 046B                     l1264 051C                     l1256 050E  
                   l1248 0505                     l1280 04BF                     l1192 0535  
                   l1184 052D                     l1176 0524                     l1440 06BF  
                   l1512 0408                     l1362 0605                     l1354 05F3  
                   l1370 0622                     l1346 05E2                     l1418 0582  
                   l1274 046E                     l1266 0521                     l1258 0513  
                   l1290 04E0                     l1282 04C8                     l1194 0536  
                   l1186 0530                     l1442 06CC                     l1426 0698  
                   l1372 0627                     l1364 060F                     l1356 05F6  
                   l1348 05E4                     l1380 0596                     l1276 0476  
                   l1292 04E1                     l1284 04CE                     l1196 0537  
                   l1188 0533                     l1460 0755                     l1452 071B  
                   l1444 06F1                     l1436 06B2                     l1428 069B  
                   l1508 03FE                     l1374 062C                     l1366 0615  
                   l1358 05FD                     l1390 05AE                     l1382 059C  
                   l1278 047A                     l1286 04D7                     l1294 04E7  
                   l1198 0538                     l1470 0771                     l1462 0759  
                   l1454 0747                     l1446 06F4                     l1438 06B7  
                   l1296 0631                     l1368 061C                     l1392 05BF  
                   l1384 059F                     l1288 04DD                     l1480 07DF  
                   l1472 0779                     l1464 0761                     l1456 0749  
                   l1448 070E                     l1298 0632                     l1394 05C5  
                   l1386 05A6                     l1378 0594                     l1474 078C  
                   l1466 0765                     l1458 074D                     l1396 05C6  
                   l1388 05AA                     l1476 07AC                     l1468 076D  
                   l1398 05CD                     l1478 07CC                     u1010 074D  
                   u1011 074C                     u1020 0759                     u1021 0758  
                   u1005 0711                     u1030 0765                     u1031 0764  
                   u1040 0771                     u1041 0770                     _pt10 0044  
                   _main 03FE                     _init 03E1                     _tens 0046  
                   btemp 007E            write_byte@val 0078                     start 0000  
                  ?_main 0070           ??_display_temp 0076                    ?_init 0070  
        __end_of___awdiv 0698            __CFG_WDTE$OFF 0000          __end_of___awmod 0631  
        ___awdiv@divisor 0070          __end_of___lwdiv 05D8          __end_of___lwmod 0594  
        ___awdiv@counter 0075                    _PORTA 0005                    _PORTD 0008  
                  _TRISA 0085                    _TRISD 0088            __CFG_PWRTE$ON 0000  
                  _t70us 0032                    _t63us 002E                    _pt100 0043  
                  _delay 044E                    _tUKus 002A                    _table 0020  
                  _reset 04BF           write_byte@temp 0077           __CFG_BOREN$OFF 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E1             __end_of_main 0411             __end_of_init 03EB  
                 ??_main 007E                   ??_init 0070                   ?_delay 0070  
                 _ADCON1 009F                   ?_reset 0070         ___awdiv@dividend 0072  
                 _TRISA0 0428                   _t430us 0036                   _t503us 003A  
       __end_of_lcd_init 03FE         __end_of_get_temp 07E1                   _pt1000 0042  
              ??___awdiv 0074                ??___awmod 0074                   _delay2 049F  
              ??___lwdiv 007A                ??___lwmod 0074                   delay@i 0073  
                 delay@t 0070         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075         __end_of_writecmd 0439  __end_of__initialization 07FC  
   __end_of_display_temp 0481           __pcstackCOMMON 0070             __pidataBANK0 0481  
          __end_of_delay 0466            __end_of_reset 04ED                  ??_delay 0072  
                ??_reset 0075               __pbssBANK0 003E       __size_of_read_byte 0036  
             __pmaintext 03FE                  ?_delay2 0070                ?_lcd_init 0070  
              ?_get_temp 0070               __stringtab 0003       __size_of_writechar 0015  
             _intEntries 0045                  ___awdiv 0631                  ___awmod 05D8  
                _pt10000 0041          __size_of_delay2 0020                  ___lwdiv 0594  
                ___lwmod 055A                  __ptext1 03E1                  __ptext2 0698  
                __ptext3 0523                  __ptext4 04BF                  __ptext5 04ED  
                __ptext6 0466                  __ptext7 0439                  __ptext8 03EB  
                __ptext9 0424                ?_writecmd 0070                  delay2@t 0074  
                delay2@x 0071                  delay2@y 0072                  delay2@z 0073  
       ___awmod@dividend 0072        __end_of_read_byte 0523               ??_lcd_init 0076  
             ??_get_temp 004B    __size_of_display_temp 001B     end_of_initialization 07FC  
             ??_writecmd 0075             _display_temp 0466        __end_of_writechar 044E  
         __end_of_delay2 04BF               _write_byte 0523      start_initialization 07E1  
          reset@presence 0075               init_fetch0 0411                 ??_delay2 0070  
            __pdataBANK0 0020               read_byte@i 0077               read_byte@j 0040  
              ___latbits 0002            __pcstackBANK0 004B        __size_of_lcd_init 0013  
      __size_of_get_temp 0149          setCursorPos@ln1 000F          setCursorPos@ln2 000D  
        setCursorPos@ln3 000B          setCursorPos@ln4 0009         ___lwdiv@dividend 0078  
               ?___awdiv 0070                 ?___awmod 0070                 ?___lwdiv 0076  
               ?___lwmod 0070              ?_write_byte 0070                __pstrings 0003  
      __size_of_writecmd 0015         ___lwdiv@quotient 007B           __size_of_delay 0018  
              _read_byte 04ED           __size_of_reset 002E              __stringbase 0008  
              get_temp@i 004F              write_byte@i 0079                _writechar 0439  
             ?_read_byte 0070  __end_ofsetCursorPos@ln1 0011  __end_ofsetCursorPos@ln2 000F  
__end_ofsetCursorPos@ln3 000D  __end_ofsetCursorPos@ln4 000B      __size_of_write_byte 0037  
       __size_of___awdiv 0067         __size_of___awmod 0059         __size_of___lwdiv 0044  
       __size_of___lwmod 003A       __end_of__stringtab 0009          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007D                 __ptext10 044E                 __ptext11 049F  
               __ptext12 055A                 __ptext13 0594                 __ptext14 05D8  
               __ptext15 0631               ?_writechar 0070                 _lcd_init 03EB  
               _get_temp 0698            __size_of_main 0013            __size_of_init 000A  
             writechar@x 0075                 _writecmd 0424           read_byte@value 0076  
               init_ram0 0415              ??_read_byte 0075         ___lwmod@dividend 0072  
              stringcode 0003                writecmd@x 0075             ??_write_byte 0075  
        ___lwmod@divisor 0070          ___lwmod@counter 0075                 stringdir 0003  
               stringtab 0003              ??_writechar 0075       __end_of_write_byte 055A  
