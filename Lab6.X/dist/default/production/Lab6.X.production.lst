

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 08 17:04:13 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184                           
   185                           	psect	idataBANK0
   186  0451                     __pidataBANK0:	
   187                           
   188                           ;initializer for _table
   189  0451  34C0               	retlw	192
   190  0452  34F9               	retlw	249
   191  0453  34A4               	retlw	164
   192  0454  34B0               	retlw	176
   193  0455  3499               	retlw	153
   194  0456  3492               	retlw	146
   195  0457  3482               	retlw	130
   196  0458  34F8               	retlw	248
   197  0459  3480               	retlw	128
   198  045A  3490               	retlw	144
   199                           
   200                           ;initializer for _tUKus
   201  045B  3401               	retlw	1
   202  045C  3400               	retlw	0
   203  045D  3446               	retlw	70
   204  045E  3400               	retlw	0
   205                           
   206                           ;initializer for _t63us
   207  045F  3402               	retlw	2
   208  0460  3400               	retlw	0
   209  0461  3407               	retlw	7
   210  0462  3400               	retlw	0
   211                           
   212                           ;initializer for _t70us
   213  0463  3402               	retlw	2
   214  0464  3400               	retlw	0
   215  0465  3408               	retlw	8
   216  0466  3400               	retlw	0
   217                           
   218                           ;initializer for _t430us
   219  0467  3402               	retlw	2
   220  0468  3400               	retlw	0
   221  0469  343C               	retlw	60
   222  046A  3400               	retlw	0
   223                           
   224                           ;initializer for _t503us
   225  046B  3402               	retlw	2
   226  046C  3400               	retlw	0
   227  046D  3446               	retlw	70
   228  046E  3400               	retlw	0
   229                           
   230                           	psect	strings
   231  0003                     __pstrings:	
   232  0003                     stringtab:	
   233  0003                     __stringtab:	
   234  0003                     stringcode:	
   235                           ;	String table - string pointers are 1 byte each
   236                           
   237  0003                     stringdir:	
   238  0003  3000               	movlw	high stringdir
   239  0004  008A               	movwf	10
   240  0005  0804               	movf	4,w
   241  0006  0A84               	incf	4,f
   242  0007  0782               	addwf	2,f
   243  0008                     __stringbase:	
   244  0008  3400               	retlw	0
   245  0009                     __end_of__stringtab:	
   246  0009                     setCursorPos@ln4:	
   247  0009  34D8               	retlw	216
   248  000A  3400               	retlw	0
   249  000B                     __end_ofsetCursorPos@ln4:	
   250  000B                     setCursorPos@ln3:	
   251  000B  34C8               	retlw	200
   252  000C  3400               	retlw	0
   253  000D                     __end_ofsetCursorPos@ln3:	
   254  000D                     setCursorPos@ln2:	
   255  000D  34D0               	retlw	208
   256  000E  3400               	retlw	0
   257  000F                     __end_ofsetCursorPos@ln2:	
   258  000F                     setCursorPos@ln1:	
   259  000F  34C0               	retlw	192
   260  0010  3400               	retlw	0
   261  0011                     __end_ofsetCursorPos@ln1:	
   262  0008                     _PORTD	set	8
   263  0038                     _RC0	set	56
   264  002B                     _RA3	set	43
   265  002C                     _RA4	set	44
   266  002D                     _RA5	set	45
   267  002A                     _RA2	set	42
   268  0087                     _TRISC	set	135
   269  0088                     _TRISD	set	136
   270  0085                     _TRISA	set	133
   271  009F                     _ADCON1	set	159
   272  0438                     _TRISC0	set	1080
   273                           
   274                           ; #config settings
   275  0000                     
   276                           	psect	cinit
   277  07E1                     start_initialization:	
   278  07E1                     __initialization:	
   279                           
   280                           ; Initialize objects allocated to BANK0
   281  07E1  1383               	bcf	3,7	;select IRP bank0
   282  07E2  303E               	movlw	low (__pdataBANK0+30)
   283  07E3  00FD               	movwf	btemp+-1
   284  07E4  3004               	movlw	high __pidataBANK0
   285  07E5  00FE               	movwf	btemp
   286  07E6  3051               	movlw	low __pidataBANK0
   287  07E7  00FF               	movwf	btemp+1
   288  07E8  3020               	movlw	low __pdataBANK0
   289  07E9  0084               	movwf	4
   290  07EA  120A  118A  2400  120A  118A  	fcall	init_ram0
   291                           
   292                           ; Clear objects allocated to BANK0
   293  07EF  01BE               	clrf	__pbssBANK0& (0+127)
   294  07F0  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   295  07F1  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   296  07F2  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   297  07F3  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   298  07F4  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   299  07F5  01C4               	clrf	(__pbssBANK0+6)& (0+127)
   300  07F6  01C5               	clrf	(__pbssBANK0+7)& (0+127)
   301  07F7  01C6               	clrf	(__pbssBANK0+8)& (0+127)
   302  07F8  01C7               	clrf	(__pbssBANK0+9)& (0+127)
   303  07F9  01C8               	clrf	(__pbssBANK0+10)& (0+127)
   304  07FA  01C9               	clrf	(__pbssBANK0+11)& (0+127)
   305  07FB  01CA               	clrf	(__pbssBANK0+12)& (0+127)
   306  07FC                     end_of_initialization:	
   307                           ;End of C runtime variable initialization code
   308                           
   309  07FC                     __end_of__initialization:	
   310  07FC  0183               	clrf	3
   311  07FD  120A  118A  2BE9   	ljmp	_main	;jump to C main() function
   312                           
   313                           	psect	bssBANK0
   314  003E                     __pbssBANK0:	
   315  003E                     _wd:	
   316  003E                     	ds	2
   317  0040                     read_byte@j:	
   318  0040                     	ds	1
   319  0041                     _pt10000:	
   320  0041                     	ds	1
   321  0042                     _pt1000:	
   322  0042                     	ds	1
   323  0043                     _pt100:	
   324  0043                     	ds	1
   325  0044                     _pt10:	
   326  0044                     	ds	1
   327  0045                     _intEntries:	
   328  0045                     	ds	1
   329  0046                     _tens:	
   330  0046                     	ds	1
   331  0047                     _TX:	
   332  0047                     	ds	1
   333  0048                     _TZ:	
   334  0048                     	ds	1
   335  0049                     _THV:	
   336  0049                     	ds	1
   337  004A                     _TLV:	
   338  004A                     	ds	1
   339                           
   340                           	psect	dataBANK0
   341  0020                     __pdataBANK0:	
   342  0020                     _table:	
   343  0020                     	ds	10
   344  002A                     _tUKus:	
   345  002A                     	ds	4
   346  002E                     _t63us:	
   347  002E                     	ds	4
   348  0032                     _t70us:	
   349  0032                     	ds	4
   350  0036                     _t430us:	
   351  0036                     	ds	4
   352  003A                     _t503us:	
   353  003A                     	ds	4
   354                           
   355                           	psect	inittext
   356  03FC                     init_fetch0:	
   357                           ;	Called with low address in FSR and high address in W
   358                           
   359  03FC  087E               	movf	btemp,w
   360  03FD  008A               	movwf	10
   361  03FE  087F               	movf	btemp+1,w
   362  03FF  0082               	movwf	2
   363  0400                     init_ram0:	
   364                           ;Called with:
   365                           ;	high address of idata address in btemp 
   366                           ;	low address of idata address in btemp+1 
   367                           ;	low address of data in FSR
   368                           ;	high address + 1 of data in btemp-1
   369                           
   370  0400  120A  118A  23FC  120A  118A  	fcall	init_fetch0
   371  0405  0080               	movwf	0
   372  0406  0A84               	incf	4,f
   373  0407  0804               	movf	4,w
   374  0408  067D               	xorwf	btemp+-1,w
   375  0409  1903               	btfsc	3,2
   376  040A  3400               	retlw	0
   377  040B  0AFF               	incf	btemp+1,f
   378  040C  1903               	btfsc	3,2
   379  040D  0AFE               	incf	btemp,f
   380  040E  2C00               	goto	init_ram0
   381                           
   382                           	psect	cstackCOMMON
   383  0070                     __pcstackCOMMON:	
   384  0070                     ?_writecmd:	
   385  0070                     ?_delay:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_init:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ??_init:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_lcd_init:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_writechar:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_delay2:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ??_delay2:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_write_byte:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_read_byte:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_display_temp:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_get_temp:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_main:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_reset:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?___awdiv:	
   425                           ; 2 bytes @ 0x0
   426                           
   427  0070                     ?___awmod:	
   428                           ; 2 bytes @ 0x0
   429                           
   430  0070                     ?___lwmod:	
   431                           ; 2 bytes @ 0x0
   432                           
   433  0070                     delay@t:	
   434                           ; 2 bytes @ 0x0
   435                           
   436  0070                     ___awdiv@divisor:	
   437                           ; 2 bytes @ 0x0
   438                           
   439  0070                     ___awmod@divisor:	
   440                           ; 2 bytes @ 0x0
   441                           
   442  0070                     ___lwmod@divisor:	
   443                           ; 2 bytes @ 0x0
   444                           
   445                           
   446                           ; 2 bytes @ 0x0
   447  0070                     	ds	1
   448  0071                     delay2@x:	
   449                           
   450                           ; 1 bytes @ 0x1
   451  0071                     	ds	1
   452  0072                     ??_delay:	
   453  0072                     delay2@y:	
   454                           ; 1 bytes @ 0x2
   455                           
   456  0072                     ___awdiv@dividend:	
   457                           ; 1 bytes @ 0x2
   458                           
   459  0072                     ___awmod@dividend:	
   460                           ; 2 bytes @ 0x2
   461                           
   462  0072                     ___lwmod@dividend:	
   463                           ; 2 bytes @ 0x2
   464                           
   465                           
   466                           ; 2 bytes @ 0x2
   467  0072                     	ds	1
   468  0073                     delay2@z:	
   469  0073                     delay@i:	
   470                           ; 1 bytes @ 0x3
   471                           
   472                           
   473                           ; 2 bytes @ 0x3
   474  0073                     	ds	1
   475  0074                     ??___awdiv:	
   476  0074                     ??___awmod:	
   477                           ; 1 bytes @ 0x4
   478                           
   479  0074                     ??___lwmod:	
   480                           ; 1 bytes @ 0x4
   481                           
   482  0074                     delay2@t:	
   483                           ; 1 bytes @ 0x4
   484                           
   485                           
   486                           ; 1 bytes @ 0x4
   487  0074                     	ds	1
   488  0075                     ??_writecmd:	
   489  0075                     ??_writechar:	
   490                           ; 1 bytes @ 0x5
   491                           
   492  0075                     ??_write_byte:	
   493                           ; 1 bytes @ 0x5
   494                           
   495  0075                     ??_read_byte:	
   496                           ; 1 bytes @ 0x5
   497                           
   498  0075                     ??_reset:	
   499                           ; 1 bytes @ 0x5
   500                           
   501  0075                     writechar@x:	
   502                           ; 1 bytes @ 0x5
   503                           
   504  0075                     writecmd@x:	
   505                           ; 1 bytes @ 0x5
   506                           
   507  0075                     reset@presence:	
   508                           ; 1 bytes @ 0x5
   509                           
   510  0075                     ___awdiv@counter:	
   511                           ; 1 bytes @ 0x5
   512                           
   513  0075                     ___awmod@counter:	
   514                           ; 1 bytes @ 0x5
   515                           
   516  0075                     ___lwmod@counter:	
   517                           ; 1 bytes @ 0x5
   518                           
   519                           
   520                           ; 1 bytes @ 0x5
   521  0075                     	ds	1
   522  0076                     ??_lcd_init:	
   523  0076                     ??_display_temp:	
   524                           ; 1 bytes @ 0x6
   525                           
   526  0076                     ?___lwdiv:	
   527                           ; 1 bytes @ 0x6
   528                           
   529  0076                     read_byte@value:	
   530                           ; 2 bytes @ 0x6
   531                           
   532  0076                     ___awdiv@sign:	
   533                           ; 1 bytes @ 0x6
   534                           
   535  0076                     ___awmod@sign:	
   536                           ; 1 bytes @ 0x6
   537                           
   538  0076                     ___lwdiv@divisor:	
   539                           ; 1 bytes @ 0x6
   540                           
   541                           
   542                           ; 2 bytes @ 0x6
   543  0076                     	ds	1
   544  0077                     write_byte@temp:	
   545  0077                     read_byte@i:	
   546                           ; 1 bytes @ 0x7
   547                           
   548  0077                     ___awdiv@quotient:	
   549                           ; 1 bytes @ 0x7
   550                           
   551                           
   552                           ; 2 bytes @ 0x7
   553  0077                     	ds	1
   554  0078                     write_byte@val:	
   555  0078                     ___lwdiv@dividend:	
   556                           ; 1 bytes @ 0x8
   557                           
   558                           
   559                           ; 2 bytes @ 0x8
   560  0078                     	ds	1
   561  0079                     write_byte@i:	
   562                           
   563                           ; 1 bytes @ 0x9
   564  0079                     	ds	1
   565  007A                     ??___lwdiv:	
   566                           
   567                           ; 1 bytes @ 0xA
   568  007A                     	ds	1
   569  007B                     ___lwdiv@quotient:	
   570                           
   571                           ; 2 bytes @ 0xB
   572  007B                     	ds	2
   573  007D                     ___lwdiv@counter:	
   574                           
   575                           ; 1 bytes @ 0xD
   576  007D                     	ds	1
   577  007E                     ??_main:	
   578                           
   579                           	psect	cstackBANK0
   580  004B                     __pcstackBANK0:	
   581                           ; 1 bytes @ 0xE
   582                           
   583  004B                     ??_get_temp:	
   584                           
   585                           ; 1 bytes @ 0x0
   586  004B                     	ds	4
   587                           
   588                           	psect	maintext
   589  03E9                     __pmaintext:	
   590 ;;
   591 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   592 ;;
   593 ;; *************** function _main *****************
   594 ;; Defined at:
   595 ;;		line 311 in file "newmain.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;		None
   598 ;; Auto vars:     Size  Location     Type
   599 ;;		None
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : B00/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   609 ;;      Params:         0       0       0       0       0
   610 ;;      Locals:         0       0       0       0       0
   611 ;;      Temps:          0       0       0       0       0
   612 ;;      Totals:         0       0       0       0       0
   613 ;;Total ram usage:        0 bytes
   614 ;; Hardware stack levels required when called:    4
   615 ;; This function calls:
   616 ;;		_get_temp
   617 ;;		_init
   618 ;;		_lcd_init
   619 ;; This function is called by:
   620 ;;		Startup code after reset
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           
   625                           ;psect for function _main
   626  03E9                     _main:	
   627  03E9                     l1473:	
   628                           ;incstack = 0
   629                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   630                           
   631                           
   632                           ;newmain.c: 312:     init();
   633  03E9  120A  118A  23CB  120A  118A  	fcall	_init
   634  03EE                     l154:	
   635                           ;newmain.c: 314:     while (1) {
   636                           
   637                           
   638                           ;newmain.c: 315:         lcd_init();
   639  03EE  120A  118A  23D6  120A  118A  	fcall	_lcd_init
   640  03F3                     l1475:	
   641                           
   642                           ;newmain.c: 316:         get_temp();
   643  03F3  120A  118A  26B4  120A  118A  	fcall	_get_temp
   644  03F8  2BEE               	goto	l154
   645  03F9  120A  118A  2800   	ljmp	start
   646  03FC                     __end_of_main:	
   647                           
   648                           	psect	text1
   649  03D6                     __ptext1:	
   650 ;; *************** function _lcd_init *****************
   651 ;; Defined at:
   652 ;;		line 66 in file "newmain.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, status,2, status,0, pclath, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         0       0       0       0       0
   667 ;;      Locals:         0       0       0       0       0
   668 ;;      Temps:          0       0       0       0       0
   669 ;;      Totals:         0       0       0       0       0
   670 ;;Total ram usage:        0 bytes
   671 ;; Hardware stack levels used:    1
   672 ;; Hardware stack levels required when called:    2
   673 ;; This function calls:
   674 ;;		_writecmd
   675 ;; This function is called by:
   676 ;;		_main
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           
   681                           ;psect for function _lcd_init
   682  03D6                     _lcd_init:	
   683  03D6                     l1397:	
   684                           ;incstack = 0
   685                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   686                           
   687                           
   688                           ;newmain.c: 67:     writecmd(0x0F);
   689  03D6  300F               	movlw	15
   690  03D7  120A  118A  2424  120A  118A  	fcall	_writecmd
   691                           
   692                           ;newmain.c: 68:     writecmd(0x38);
   693  03DC  3038               	movlw	56
   694  03DD  120A  118A  2424  120A  118A  	fcall	_writecmd
   695                           
   696                           ;newmain.c: 69:     writecmd(0x01);
   697  03E2  3001               	movlw	1
   698  03E3  120A  118A  2424  120A  118A  	fcall	_writecmd
   699  03E8                     l68:	
   700  03E8  0008               	return
   701  03E9                     __end_of_lcd_init:	
   702                           
   703                           	psect	text2
   704  03CB                     __ptext2:	
   705 ;; *************** function _init *****************
   706 ;; Defined at:
   707 ;;		line 55 in file "newmain.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;		None
   710 ;; Auto vars:     Size  Location     Type
   711 ;;		None
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg, status,2
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   721 ;;      Params:         0       0       0       0       0
   722 ;;      Locals:         0       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0
   724 ;;      Totals:         0       0       0       0       0
   725 ;;Total ram usage:        0 bytes
   726 ;; Hardware stack levels used:    1
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function _init
   736  03CB                     _init:	
   737  03CB                     l1023:	
   738                           ;incstack = 0
   739                           ; Regs used in _init: [wreg+status,2]
   740                           
   741                           
   742                           ;newmain.c: 56:     ADCON1 = 0X07;
   743  03CB  3007               	movlw	7
   744  03CC  1683               	bsf	3,5	;RP0=1, select bank1
   745  03CD  1303               	bcf	3,6	;RP1=0, select bank1
   746  03CE  009F               	movwf	31	;volatile
   747  03CF                     l1025:	
   748                           
   749                           ;newmain.c: 57:     TRISA = 0X00;
   750  03CF  0185               	clrf	5	;volatile
   751  03D0                     l1027:	
   752                           
   753                           ;newmain.c: 58:     TRISD = 0X00;
   754  03D0  0188               	clrf	8	;volatile
   755  03D1                     l1029:	
   756                           
   757                           ;newmain.c: 59:     TRISC = 0x00;
   758  03D1  0187               	clrf	7	;volatile
   759  03D2                     l1031:	
   760                           
   761                           ;newmain.c: 60:     RA2 = 1;
   762  03D2  1283               	bcf	3,5	;RP0=0, select bank0
   763  03D3  1303               	bcf	3,6	;RP1=0, select bank0
   764  03D4  1505               	bsf	5,2	;volatile
   765  03D5                     l65:	
   766  03D5  0008               	return
   767  03D6                     __end_of_init:	
   768                           
   769                           	psect	text3
   770  06B4                     __ptext3:	
   771 ;; *************** function _get_temp *****************
   772 ;; Defined at:
   773 ;;		line 263 in file "newmain.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  i               2    0        int 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   787 ;;      Params:         0       0       0       0       0
   788 ;;      Locals:         0       0       0       0       0
   789 ;;      Temps:          0       4       0       0       0
   790 ;;      Totals:         0       4       0       0       0
   791 ;;Total ram usage:        4 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    3
   794 ;; This function calls:
   795 ;;		___awdiv
   796 ;;		___awmod
   797 ;;		___lwdiv
   798 ;;		___lwmod
   799 ;;		_display_temp
   800 ;;		_read_byte
   801 ;;		_reset
   802 ;;		_write_byte
   803 ;; This function is called by:
   804 ;;		_main
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           
   809                           ;psect for function _get_temp
   810  06B4                     _get_temp:	
   811  06B4                     l1399:	
   812                           ;incstack = 0
   813                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   814                           
   815                           
   816                           ;newmain.c: 268:     int i;;newmain.c: 269:     TRISC0 = 1;
   817  06B4  1683               	bsf	3,5	;RP0=1, select bank1
   818  06B5  1303               	bcf	3,6	;RP1=0, select bank1
   819  06B6  1407               	bsf	7,0	;volatile
   820  06B7                     l1401:	
   821                           
   822                           ;newmain.c: 270:     reset();
   823  06B7  120A  118A  248F  120A  118A  	fcall	_reset
   824                           
   825                           ;newmain.c: 271:     write_byte(0XCC);
   826  06BC  30CC               	movlw	204
   827  06BD  120A  118A  24F3  120A  118A  	fcall	_write_byte
   828                           
   829                           ;newmain.c: 272:     write_byte(0X44);
   830  06C2  3044               	movlw	68
   831  06C3  120A  118A  24F3  120A  118A  	fcall	_write_byte
   832  06C8                     l1403:	
   833                           
   834                           ;newmain.c: 276:     display_temp();
   835  06C8  120A  118A  25A8  120A  118A  	fcall	_display_temp
   836  06CD                     l1405:	
   837                           
   838                           ;newmain.c: 277:     reset();
   839  06CD  120A  118A  248F  120A  118A  	fcall	_reset
   840  06D2                     l1407:	
   841                           
   842                           ;newmain.c: 278:     write_byte(0XCC);
   843  06D2  30CC               	movlw	204
   844  06D3  120A  118A  24F3  120A  118A  	fcall	_write_byte
   845  06D8                     l1409:	
   846                           
   847                           ;newmain.c: 279:     write_byte(0XBE);
   848  06D8  30BE               	movlw	190
   849  06D9  120A  118A  24F3  120A  118A  	fcall	_write_byte
   850  06DE                     l1411:	
   851                           
   852                           ;newmain.c: 280:     TLV = read_byte();
   853  06DE  120A  118A  24BD  120A  118A  	fcall	_read_byte
   854  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   855  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   856  06E5  00CB               	movwf	??_get_temp
   857  06E6  084B               	movf	??_get_temp,w
   858  06E7  00CA               	movwf	_TLV
   859  06E8                     l1413:	
   860                           
   861                           ;newmain.c: 281:     THV = read_byte();
   862  06E8  120A  118A  24BD  120A  118A  	fcall	_read_byte
   863  06ED  1283               	bcf	3,5	;RP0=0, select bank0
   864  06EE  1303               	bcf	3,6	;RP1=0, select bank0
   865  06EF  00CB               	movwf	??_get_temp
   866  06F0  084B               	movf	??_get_temp,w
   867  06F1  00C9               	movwf	_THV
   868  06F2                     l1415:	
   869                           
   870                           ;newmain.c: 282:     TRISC0 = 1;
   871  06F2  1683               	bsf	3,5	;RP0=1, select bank1
   872  06F3  1303               	bcf	3,6	;RP1=0, select bank1
   873  06F4  1407               	bsf	7,0	;volatile
   874  06F5                     l1417:	
   875                           
   876                           ;newmain.c: 283:     TZ = (TLV >> 4) | ((THV << 4)&0X3f);
   877  06F5  1283               	bcf	3,5	;RP0=0, select bank0
   878  06F6  1303               	bcf	3,6	;RP1=0, select bank0
   879  06F7  0849               	movf	_THV,w
   880  06F8  00CB               	movwf	??_get_temp
   881  06F9  3004               	movlw	4
   882  06FA                     u965:	
   883  06FA  1003               	clrc
   884  06FB  0DCB               	rlf	??_get_temp,f
   885  06FC  3EFF               	addlw	-1
   886  06FD  1D03               	skipz
   887  06FE  2EFA               	goto	u965
   888  06FF  303F               	movlw	63
   889  0700  054B               	andwf	??_get_temp,w
   890  0701  00CC               	movwf	??_get_temp+1
   891  0702  084A               	movf	_TLV,w
   892  0703  00CD               	movwf	??_get_temp+2
   893  0704  3004               	movlw	4
   894  0705                     u975:	
   895  0705  1003               	clrc
   896  0706  0CCD               	rrf	??_get_temp+2,f
   897  0707  3EFF               	addlw	-1
   898  0708  1D03               	skipz
   899  0709  2F05               	goto	u975
   900  070A  084D               	movf	??_get_temp+2,w
   901  070B  044C               	iorwf	??_get_temp+1,w
   902  070C  00CE               	movwf	??_get_temp+3
   903  070D  084E               	movf	??_get_temp+3,w
   904  070E  00C8               	movwf	_TZ
   905  070F                     l1419:	
   906                           
   907                           ;newmain.c: 284:     TX = TLV << 4;
   908  070F  084A               	movf	_TLV,w
   909  0710  00CB               	movwf	??_get_temp
   910  0711  3003               	movlw	3
   911  0712                     u985:	
   912  0712  1003               	clrc
   913  0713  0DCB               	rlf	??_get_temp,f
   914  0714  3EFF               	addlw	-1
   915  0715  1D03               	skipz
   916  0716  2F12               	goto	u985
   917  0717  1003               	clrc
   918  0718  0D4B               	rlf	??_get_temp,w
   919  0719  00CC               	movwf	??_get_temp+1
   920  071A  084C               	movf	??_get_temp+1,w
   921  071B  00C7               	movwf	_TX
   922                           
   923                           ;newmain.c: 288:     intEntries = TZ % 10;
   924  071C  300A               	movlw	10
   925  071D  00F0               	movwf	___awmod@divisor
   926  071E  3000               	movlw	0
   927  071F  00F1               	movwf	___awmod@divisor+1
   928  0720  0848               	movf	_TZ,w
   929  0721  00CB               	movwf	??_get_temp
   930  0722  01CC               	clrf	??_get_temp+1
   931  0723  084B               	movf	??_get_temp,w
   932  0724  00F2               	movwf	___awmod@dividend
   933  0725  084C               	movf	??_get_temp+1,w
   934  0726  00F3               	movwf	___awmod@dividend+1
   935  0727  120A  118A  25F4  120A  118A  	fcall	___awmod
   936  072C  0870               	movf	?___awmod,w
   937  072D  1283               	bcf	3,5	;RP0=0, select bank0
   938  072E  1303               	bcf	3,6	;RP1=0, select bank0
   939  072F  00CD               	movwf	??_get_temp+2
   940  0730  084D               	movf	??_get_temp+2,w
   941  0731  00C5               	movwf	_intEntries
   942                           
   943                           ;newmain.c: 289:     tens = TZ / 10;
   944  0732  300A               	movlw	10
   945  0733  00F0               	movwf	___awdiv@divisor
   946  0734  3000               	movlw	0
   947  0735  00F1               	movwf	___awdiv@divisor+1
   948  0736  0848               	movf	_TZ,w
   949  0737  00CB               	movwf	??_get_temp
   950  0738  01CC               	clrf	??_get_temp+1
   951  0739  084B               	movf	??_get_temp,w
   952  073A  00F2               	movwf	___awdiv@dividend
   953  073B  084C               	movf	??_get_temp+1,w
   954  073C  00F3               	movwf	___awdiv@dividend+1
   955  073D  120A  118A  264D  120A  118A  	fcall	___awdiv
   956  0742  0870               	movf	?___awdiv,w
   957  0743  1283               	bcf	3,5	;RP0=0, select bank0
   958  0744  1303               	bcf	3,6	;RP1=0, select bank0
   959  0745  00CD               	movwf	??_get_temp+2
   960  0746  084D               	movf	??_get_temp+2,w
   961  0747  00C6               	movwf	_tens
   962  0748                     l1421:	
   963                           
   964                           ;newmain.c: 290:     wd = 0;
   965  0748  01BE               	clrf	_wd
   966  0749  01BF               	clrf	_wd+1
   967  074A                     l1423:	
   968                           
   969                           ;newmain.c: 291:     if (TX & 0x80) {
   970  074A  1FC7               	btfss	_TX,7
   971  074B  2F4D               	goto	u991
   972  074C  2F4E               	goto	u990
   973  074D                     u991:	
   974  074D  2F56               	goto	l1427
   975  074E                     u990:	
   976  074E                     l1425:	
   977                           
   978                           ;newmain.c: 292:         wd = wd + 5000;
   979  074E  083E               	movf	_wd,w
   980  074F  3E88               	addlw	136
   981  0750  00BE               	movwf	_wd
   982  0751  083F               	movf	_wd+1,w
   983  0752  1803               	skipnc
   984  0753  3E01               	addlw	1
   985  0754  3E13               	addlw	19
   986  0755  00BF               	movwf	_wd+1
   987  0756                     l1427:	
   988                           
   989                           ;newmain.c: 294:     if (TX & 0x40) {
   990  0756  1F47               	btfss	_TX,6
   991  0757  2F59               	goto	u1001
   992  0758  2F5A               	goto	u1000
   993  0759                     u1001:	
   994  0759  2F62               	goto	l1431
   995  075A                     u1000:	
   996  075A                     l1429:	
   997                           
   998                           ;newmain.c: 295:         wd = wd + 2500;
   999  075A  083E               	movf	_wd,w
  1000  075B  3EC4               	addlw	196
  1001  075C  00BE               	movwf	_wd
  1002  075D  083F               	movf	_wd+1,w
  1003  075E  1803               	skipnc
  1004  075F  3E01               	addlw	1
  1005  0760  3E09               	addlw	9
  1006  0761  00BF               	movwf	_wd+1
  1007  0762                     l1431:	
  1008                           
  1009                           ;newmain.c: 297:     if (TX & 0x20) {
  1010  0762  1EC7               	btfss	_TX,5
  1011  0763  2F65               	goto	u1011
  1012  0764  2F66               	goto	u1010
  1013  0765                     u1011:	
  1014  0765  2F6E               	goto	l1435
  1015  0766                     u1010:	
  1016  0766                     l1433:	
  1017                           
  1018                           ;newmain.c: 298:         wd = wd + 1250;
  1019  0766  083E               	movf	_wd,w
  1020  0767  3EE2               	addlw	226
  1021  0768  00BE               	movwf	_wd
  1022  0769  083F               	movf	_wd+1,w
  1023  076A  1803               	skipnc
  1024  076B  3E01               	addlw	1
  1025  076C  3E04               	addlw	4
  1026  076D  00BF               	movwf	_wd+1
  1027  076E                     l1435:	
  1028                           
  1029                           ;newmain.c: 300:     if (TX & 0x10) {
  1030  076E  1E47               	btfss	_TX,4
  1031  076F  2F71               	goto	u1021
  1032  0770  2F72               	goto	u1020
  1033  0771                     u1021:	
  1034  0771  2F7A               	goto	l1439
  1035  0772                     u1020:	
  1036  0772                     l1437:	
  1037                           
  1038                           ;newmain.c: 301:         wd = wd + 625;
  1039  0772  083E               	movf	_wd,w
  1040  0773  3E71               	addlw	113
  1041  0774  00BE               	movwf	_wd
  1042  0775  083F               	movf	_wd+1,w
  1043  0776  1803               	skipnc
  1044  0777  3E01               	addlw	1
  1045  0778  3E02               	addlw	2
  1046  0779  00BF               	movwf	_wd+1
  1047  077A                     l1439:	
  1048                           
  1049                           ;newmain.c: 303:     pt10 = wd / 1000;
  1050  077A  30E8               	movlw	232
  1051  077B  00F6               	movwf	___lwdiv@divisor
  1052  077C  3003               	movlw	3
  1053  077D  00F7               	movwf	___lwdiv@divisor+1
  1054  077E  083F               	movf	_wd+1,w
  1055  077F  00F9               	movwf	___lwdiv@dividend+1
  1056  0780  083E               	movf	_wd,w
  1057  0781  00F8               	movwf	___lwdiv@dividend
  1058  0782  120A  118A  2564  120A  118A  	fcall	___lwdiv
  1059  0787  0876               	movf	?___lwdiv,w
  1060  0788  1283               	bcf	3,5	;RP0=0, select bank0
  1061  0789  1303               	bcf	3,6	;RP1=0, select bank0
  1062  078A  00CB               	movwf	??_get_temp
  1063  078B  084B               	movf	??_get_temp,w
  1064  078C  00C4               	movwf	_pt10
  1065  078D                     l1441:	
  1066                           
  1067                           ;newmain.c: 304:     pt100 = (wd % 1000) / 100;
  1068  078D  3064               	movlw	100
  1069  078E  00F6               	movwf	___lwdiv@divisor
  1070  078F  3000               	movlw	0
  1071  0790  00F7               	movwf	___lwdiv@divisor+1
  1072  0791  083F               	movf	_wd+1,w
  1073  0792  00F3               	movwf	___lwmod@dividend+1
  1074  0793  083E               	movf	_wd,w
  1075  0794  00F2               	movwf	___lwmod@dividend
  1076  0795  30E8               	movlw	232
  1077  0796  00F0               	movwf	___lwmod@divisor
  1078  0797  3003               	movlw	3
  1079  0798  00F1               	movwf	___lwmod@divisor+1
  1080  0799  120A  118A  252A  120A  118A  	fcall	___lwmod
  1081  079E  0871               	movf	?___lwmod+1,w
  1082  079F  00F9               	movwf	___lwdiv@dividend+1
  1083  07A0  0870               	movf	?___lwmod,w
  1084  07A1  00F8               	movwf	___lwdiv@dividend
  1085  07A2  120A  118A  2564  120A  118A  	fcall	___lwdiv
  1086  07A7  0876               	movf	?___lwdiv,w
  1087  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1088  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1089  07AA  00CB               	movwf	??_get_temp
  1090  07AB  084B               	movf	??_get_temp,w
  1091  07AC  00C3               	movwf	_pt100
  1092  07AD                     l1443:	
  1093                           
  1094                           ;newmain.c: 305:     pt1000 = (wd % 100) / 10;
  1095  07AD  300A               	movlw	10
  1096  07AE  00F6               	movwf	___lwdiv@divisor
  1097  07AF  3000               	movlw	0
  1098  07B0  00F7               	movwf	___lwdiv@divisor+1
  1099  07B1  083F               	movf	_wd+1,w
  1100  07B2  00F3               	movwf	___lwmod@dividend+1
  1101  07B3  083E               	movf	_wd,w
  1102  07B4  00F2               	movwf	___lwmod@dividend
  1103  07B5  3064               	movlw	100
  1104  07B6  00F0               	movwf	___lwmod@divisor
  1105  07B7  3000               	movlw	0
  1106  07B8  00F1               	movwf	___lwmod@divisor+1
  1107  07B9  120A  118A  252A  120A  118A  	fcall	___lwmod
  1108  07BE  0871               	movf	?___lwmod+1,w
  1109  07BF  00F9               	movwf	___lwdiv@dividend+1
  1110  07C0  0870               	movf	?___lwmod,w
  1111  07C1  00F8               	movwf	___lwdiv@dividend
  1112  07C2  120A  118A  2564  120A  118A  	fcall	___lwdiv
  1113  07C7  0876               	movf	?___lwdiv,w
  1114  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1115  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1116  07CA  00CB               	movwf	??_get_temp
  1117  07CB  084B               	movf	??_get_temp,w
  1118  07CC  00C2               	movwf	_pt1000
  1119  07CD                     l1445:	
  1120                           
  1121                           ;newmain.c: 306:     pt10000 = wd % 10;
  1122  07CD  300A               	movlw	10
  1123  07CE  00F0               	movwf	___lwmod@divisor
  1124  07CF  3000               	movlw	0
  1125  07D0  00F1               	movwf	___lwmod@divisor+1
  1126  07D1  083F               	movf	_wd+1,w
  1127  07D2  00F3               	movwf	___lwmod@dividend+1
  1128  07D3  083E               	movf	_wd,w
  1129  07D4  00F2               	movwf	___lwmod@dividend
  1130  07D5  120A  118A  252A  120A  118A  	fcall	___lwmod
  1131  07DA  0870               	movf	?___lwmod,w
  1132  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  1133  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  1134  07DD  00CB               	movwf	??_get_temp
  1135  07DE  084B               	movf	??_get_temp,w
  1136  07DF  00C1               	movwf	_pt10000
  1137  07E0                     l149:	
  1138  07E0  0008               	return
  1139  07E1                     __end_of_get_temp:	
  1140                           
  1141                           	psect	text4
  1142  04F3                     __ptext4:	
  1143 ;; *************** function _write_byte *****************
  1144 ;; Defined at:
  1145 ;;		line 156 in file "newmain.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  val             1    wreg     unsigned char 
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  val             1    8[COMMON] unsigned char 
  1150 ;;  i               1    9[COMMON] unsigned char 
  1151 ;;  temp            1    7[COMMON] unsigned char 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         0       0       0       0       0
  1162 ;;      Locals:         3       0       0       0       0
  1163 ;;      Temps:          2       0       0       0       0
  1164 ;;      Totals:         5       0       0       0       0
  1165 ;;Total ram usage:        5 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    1
  1168 ;; This function calls:
  1169 ;;		_delay2
  1170 ;; This function is called by:
  1171 ;;		_get_temp
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           
  1176                           ;psect for function _write_byte
  1177  04F3                     _write_byte:	
  1178                           
  1179                           ;incstack = 0
  1180                           ; Regs used in _write_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1181                           ;write_byte@val stored from wreg
  1182  04F3  00F8               	movwf	write_byte@val
  1183  04F4                     l1155:	
  1184                           
  1185                           ;newmain.c: 157:     unsigned char i;;newmain.c: 158:     unsigned char temp;;newmain.c:
      +                           161:     for (i = 8; i > 0; i--) {
  1186  04F4  3008               	movlw	8
  1187  04F5  00F5               	movwf	??_write_byte
  1188  04F6  0875               	movf	??_write_byte,w
  1189  04F7  00F9               	movwf	write_byte@i
  1190  04F8                     l1161:	
  1191                           
  1192                           ;newmain.c: 162:         temp = val & 0x01;
  1193  04F8  0878               	movf	write_byte@val,w
  1194  04F9  3901               	andlw	1
  1195  04FA  00F5               	movwf	??_write_byte
  1196  04FB  0875               	movf	??_write_byte,w
  1197  04FC  00F7               	movwf	write_byte@temp
  1198  04FD                     l1163:	
  1199                           
  1200                           ;newmain.c: 163:         RC0 = 0; TRISC0 = 0;
  1201  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  1202  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  1203  04FF  1007               	bcf	7,0	;volatile
  1204  0500                     l1165:	
  1205  0500  1683               	bsf	3,5	;RP0=1, select bank1
  1206  0501  1303               	bcf	3,6	;RP1=0, select bank1
  1207  0502  1007               	bcf	7,0	;volatile
  1208  0503                     l1167:	
  1209                           
  1210                           ;newmain.c: 164:         __nop();
  1211  0503  0000               	nop
  1212  0504                     l1169:	
  1213                           
  1214                           ;newmain.c: 165:         __nop();
  1215  0504  0000               	nop
  1216  0505                     l1171:	
  1217                           
  1218                           ;newmain.c: 166:         __nop();
  1219  0505  0000               	nop
  1220  0506                     l1173:	
  1221                           
  1222                           ;newmain.c: 167:         __nop();
  1223  0506  0000               	nop
  1224  0507                     l1175:	
  1225                           
  1226                           ;newmain.c: 168:         __nop();
  1227  0507  0000               	nop
  1228  0508                     l1177:	
  1229                           
  1230                           ;newmain.c: 170:         if (temp == 1) {
  1231  0508  0377               	decf	write_byte@temp,w
  1232  0509  1D03               	btfss	3,2
  1233  050A  2D0C               	goto	u581
  1234  050B  2D0D               	goto	u580
  1235  050C                     u581:	
  1236  050C  2D10               	goto	l1181
  1237  050D                     u580:	
  1238  050D                     l1179:	
  1239                           
  1240                           ;newmain.c: 171:             TRISC0 = 1;
  1241  050D  1683               	bsf	3,5	;RP0=1, select bank1
  1242  050E  1303               	bcf	3,6	;RP1=0, select bank1
  1243  050F  1407               	bsf	7,0	;volatile
  1244  0510                     l1181:	
  1245                           
  1246                           ;newmain.c: 173:         delay2(t63us);
  1247  0510  302E               	movlw	(low (_t63us| 0))& (0+255)
  1248  0511  120A  118A  246F  120A  118A  	fcall	_delay2
  1249  0516                     l1183:	
  1250                           
  1251                           ;newmain.c: 174:         TRISC0 = 1;
  1252  0516  1683               	bsf	3,5	;RP0=1, select bank1
  1253  0517  1303               	bcf	3,6	;RP1=0, select bank1
  1254  0518  1407               	bsf	7,0	;volatile
  1255  0519                     l1185:	
  1256                           
  1257                           ;newmain.c: 175:         __nop();
  1258  0519  0000               	nop
  1259  051A                     l1187:	
  1260                           
  1261                           ;newmain.c: 176:         __nop();
  1262  051A  0000               	nop
  1263  051B                     l1189:	
  1264                           
  1265                           ;newmain.c: 177:         val = val >> 1;
  1266  051B  0878               	movf	write_byte@val,w
  1267  051C  00F5               	movwf	??_write_byte
  1268  051D  1003               	clrc
  1269  051E  0C75               	rrf	??_write_byte,w
  1270  051F  00F6               	movwf	??_write_byte+1
  1271  0520  0876               	movf	??_write_byte+1,w
  1272  0521  00F8               	movwf	write_byte@val
  1273  0522                     l1191:	
  1274                           
  1275                           ;newmain.c: 178:     }
  1276  0522  3001               	movlw	1
  1277  0523  02F9               	subwf	write_byte@i,f
  1278  0524                     l1193:	
  1279  0524  0879               	movf	write_byte@i,w
  1280  0525  1D03               	btfss	3,2
  1281  0526  2D28               	goto	u591
  1282  0527  2D29               	goto	u590
  1283  0528                     u591:	
  1284  0528  2CF8               	goto	l1161
  1285  0529                     u590:	
  1286  0529                     l123:	
  1287  0529  0008               	return
  1288  052A                     __end_of_write_byte:	
  1289                           
  1290                           	psect	text5
  1291  048F                     __ptext5:	
  1292 ;; *************** function _reset *****************
  1293 ;; Defined at:
  1294 ;;		line 247 in file "newmain.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  presence        1    5[COMMON] unsigned char 
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  2  136[None  ] int 
  1301 ;; Registers used:
  1302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1308 ;;      Params:         0       0       0       0       0
  1309 ;;      Locals:         1       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0
  1311 ;;      Totals:         1       0       0       0       0
  1312 ;;Total ram usage:        1 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    1
  1315 ;; This function calls:
  1316 ;;		_delay2
  1317 ;; This function is called by:
  1318 ;;		_get_temp
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           
  1323                           ;psect for function _reset
  1324  048F                     _reset:	
  1325  048F                     l1251:	
  1326                           ;incstack = 0
  1327                           ; Regs used in _reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1328                           
  1329                           
  1330                           ;newmain.c: 248:     char presence = 1;
  1331  048F  01F5               	clrf	reset@presence
  1332  0490  0AF5               	incf	reset@presence,f
  1333                           
  1334                           ;newmain.c: 249:     while (presence) {
  1335  0491  2CB7               	goto	l1265
  1336  0492                     l138:	
  1337                           
  1338                           ;newmain.c: 250:         RC0 = 0; TRISC0 = 0;
  1339  0492  1283               	bcf	3,5	;RP0=0, select bank0
  1340  0493  1303               	bcf	3,6	;RP1=0, select bank0
  1341  0494  1007               	bcf	7,0	;volatile
  1342  0495  1683               	bsf	3,5	;RP0=1, select bank1
  1343  0496  1303               	bcf	3,6	;RP1=0, select bank1
  1344  0497  1007               	bcf	7,0	;volatile
  1345  0498                     l1253:	
  1346                           
  1347                           ;newmain.c: 251:         delay2(t503us);
  1348  0498  303A               	movlw	(low (_t503us| 0))& (0+255)
  1349  0499  120A  118A  246F  120A  118A  	fcall	_delay2
  1350  049E                     l1255:	
  1351                           
  1352                           ;newmain.c: 252:         TRISC0 = 1;
  1353  049E  1683               	bsf	3,5	;RP0=1, select bank1
  1354  049F  1303               	bcf	3,6	;RP1=0, select bank1
  1355  04A0  1407               	bsf	7,0	;volatile
  1356                           
  1357                           ;newmain.c: 253:         delay2(t70us);
  1358  04A1  3032               	movlw	(low (_t70us| 0))& (0+255)
  1359  04A2  120A  118A  246F  120A  118A  	fcall	_delay2
  1360  04A7                     l1257:	
  1361                           
  1362                           ;newmain.c: 254:         if (RC0 == 1) {
  1363  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  1364  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  1365  04A9  1C07               	btfss	7,0	;volatile
  1366  04AA  2CAC               	goto	u621
  1367  04AB  2CAD               	goto	u620
  1368  04AC                     u621:	
  1369  04AC  2CB0               	goto	l1261
  1370  04AD                     u620:	
  1371  04AD                     l1259:	
  1372                           
  1373                           ;newmain.c: 255:             presence = 1;
  1374  04AD  01F5               	clrf	reset@presence
  1375  04AE  0AF5               	incf	reset@presence,f
  1376                           
  1377                           ;newmain.c: 256:         } else {
  1378  04AF  2CB1               	goto	l1263
  1379  04B0                     l1261:	
  1380                           
  1381                           ;newmain.c: 257:             presence = 0;
  1382  04B0  01F5               	clrf	reset@presence
  1383  04B1                     l1263:	
  1384                           
  1385                           ;newmain.c: 259:         delay2(t430us);
  1386  04B1  3036               	movlw	(low (_t430us| 0))& (0+255)
  1387  04B2  120A  118A  246F  120A  118A  	fcall	_delay2
  1388  04B7                     l1265:	
  1389                           
  1390                           ;newmain.c: 249:     while (presence) {
  1391  04B7  0875               	movf	reset@presence,w
  1392  04B8  1D03               	btfss	3,2
  1393  04B9  2CBB               	goto	u631
  1394  04BA  2CBC               	goto	u630
  1395  04BB                     u631:	
  1396  04BB  2C92               	goto	l138
  1397  04BC                     u630:	
  1398  04BC                     l142:	
  1399  04BC  0008               	return
  1400  04BD                     __end_of_reset:	
  1401                           
  1402                           	psect	text6
  1403  04BD                     __ptext6:	
  1404 ;; *************** function _read_byte *****************
  1405 ;; Defined at:
  1406 ;;		line 181 in file "newmain.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  i               1    7[COMMON] unsigned char 
  1411 ;;  value           1    6[COMMON] unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      unsigned char 
  1414 ;; Registers used:
  1415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1421 ;;      Params:         0       0       0       0       0
  1422 ;;      Locals:         2       0       0       0       0
  1423 ;;      Temps:          1       0       0       0       0
  1424 ;;      Totals:         3       0       0       0       0
  1425 ;;Total ram usage:        3 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    1
  1428 ;; This function calls:
  1429 ;;		_delay2
  1430 ;; This function is called by:
  1431 ;;		_get_temp
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           
  1436                           ;psect for function _read_byte
  1437  04BD                     _read_byte:	
  1438  04BD                     l1195:	
  1439                           ;incstack = 0
  1440                           ; Regs used in _read_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1441                           
  1442                           
  1443                           ;newmain.c: 182:     unsigned char i;;newmain.c: 183:     unsigned char value = 0;
  1444  04BD  01F6               	clrf	read_byte@value
  1445  04BE                     l1197:	
  1446                           
  1447                           ;newmain.c: 184:     static char j;;newmain.c: 186:     for (i = 8; i > 0; i--) {
  1448  04BE  3008               	movlw	8
  1449  04BF  00F5               	movwf	??_read_byte
  1450  04C0  0875               	movf	??_read_byte,w
  1451  04C1  00F7               	movwf	read_byte@i
  1452  04C2                     l1203:	
  1453                           
  1454                           ;newmain.c: 187:         value >>= 1;
  1455  04C2  1003               	clrc
  1456  04C3  0CF6               	rrf	read_byte@value,f
  1457  04C4                     l1205:	
  1458                           
  1459                           ;newmain.c: 188:         RC0 = 0; TRISC0 = 0;
  1460  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  1461  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  1462  04C6  1007               	bcf	7,0	;volatile
  1463  04C7                     l1207:	
  1464  04C7  1683               	bsf	3,5	;RP0=1, select bank1
  1465  04C8  1303               	bcf	3,6	;RP1=0, select bank1
  1466  04C9  1007               	bcf	7,0	;volatile
  1467  04CA                     l1209:	
  1468                           
  1469                           ;newmain.c: 189:         __nop();
  1470  04CA  0000               	nop
  1471  04CB                     l1211:	
  1472                           
  1473                           ;newmain.c: 190:         __nop();
  1474  04CB  0000               	nop
  1475  04CC                     l1213:	
  1476                           
  1477                           ;newmain.c: 191:         __nop();
  1478  04CC  0000               	nop
  1479  04CD                     l1215:	
  1480                           
  1481                           ;newmain.c: 192:         __nop();
  1482  04CD  0000               	nop
  1483  04CE                     l1217:	
  1484                           
  1485                           ;newmain.c: 193:         __nop();
  1486  04CE  0000               	nop
  1487  04CF                     l1219:	
  1488                           
  1489                           ;newmain.c: 194:         __nop();
  1490  04CF  0000               	nop
  1491  04D0                     l1221:	
  1492                           
  1493                           ;newmain.c: 195:         TRISC0 = 1;
  1494  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  1495  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  1496  04D2  1407               	bsf	7,0	;volatile
  1497  04D3                     l1223:	
  1498                           
  1499                           ;newmain.c: 196:         __nop();
  1500  04D3  0000               	nop
  1501  04D4                     l1225:	
  1502                           
  1503                           ;newmain.c: 197:         __nop();
  1504  04D4  0000               	nop
  1505  04D5                     l1227:	
  1506                           
  1507                           ;newmain.c: 198:         __nop();
  1508  04D5  0000               	nop
  1509  04D6                     l1229:	
  1510                           
  1511                           ;newmain.c: 199:         __nop();
  1512  04D6  0000               	nop
  1513  04D7                     l1231:	
  1514                           
  1515                           ;newmain.c: 200:         __nop();
  1516  04D7  0000               	nop
  1517  04D8                     l1233:	
  1518                           
  1519                           ;newmain.c: 201:         j = RC0;
  1520  04D8  3000               	movlw	0
  1521  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1522  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1523  04DB  1807               	btfsc	7,0	;volatile
  1524  04DC  3001               	movlw	1
  1525  04DD  00C0               	movwf	read_byte@j
  1526  04DE                     l1235:	
  1527                           
  1528                           ;newmain.c: 202:         if (j) value |= 0x80;
  1529  04DE  0840               	movf	read_byte@j,w
  1530  04DF  1903               	btfsc	3,2
  1531  04E0  2CE2               	goto	u601
  1532  04E1  2CE3               	goto	u600
  1533  04E2                     u601:	
  1534  04E2  2CE4               	goto	l1239
  1535  04E3                     u600:	
  1536  04E3                     l1237:	
  1537  04E3  17F6               	bsf	read_byte@value,7
  1538  04E4                     l1239:	
  1539                           
  1540                           ;newmain.c: 203:         delay2(t63us);
  1541  04E4  302E               	movlw	(low (_t63us| 0))& (0+255)
  1542  04E5  120A  118A  246F  120A  118A  	fcall	_delay2
  1543  04EA                     l1241:	
  1544                           
  1545                           ;newmain.c: 204:     }
  1546  04EA  3001               	movlw	1
  1547  04EB  02F7               	subwf	read_byte@i,f
  1548  04EC                     l1243:	
  1549  04EC  0877               	movf	read_byte@i,w
  1550  04ED  1D03               	btfss	3,2
  1551  04EE  2CF0               	goto	u611
  1552  04EF  2CF1               	goto	u610
  1553  04F0                     u611:	
  1554  04F0  2CC2               	goto	l1203
  1555  04F1                     u610:	
  1556  04F1                     l1245:	
  1557                           
  1558                           ;newmain.c: 205:     return (value);
  1559  04F1  0876               	movf	read_byte@value,w
  1560  04F2                     l131:	
  1561  04F2  0008               	return
  1562  04F3                     __end_of_read_byte:	
  1563                           
  1564                           	psect	text7
  1565  046F                     __ptext7:	
  1566 ;; *************** function _delay2 *****************
  1567 ;; Defined at:
  1568 ;;		line 143 in file "newmain.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  t               1    wreg     PTR int 
  1571 ;;		 -> t430us(4), t70us(4), t503us(4), t63us(4), 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  t               1    4[COMMON] PTR int 
  1574 ;;		 -> t430us(4), t70us(4), t503us(4), t63us(4), 
  1575 ;;  z               1    3[COMMON] unsigned char 
  1576 ;;  y               1    2[COMMON] unsigned char 
  1577 ;;  x               1    1[COMMON] unsigned char 
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1587 ;;      Params:         0       0       0       0       0
  1588 ;;      Locals:         4       0       0       0       0
  1589 ;;      Temps:          1       0       0       0       0
  1590 ;;      Totals:         5       0       0       0       0
  1591 ;;Total ram usage:        5 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_write_byte
  1597 ;;		_read_byte
  1598 ;;		_reset
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           
  1603                           ;psect for function _delay2
  1604  046F                     _delay2:	
  1605                           
  1606                           ;incstack = 0
  1607                           ; Regs used in _delay2: [wreg-fsr0h+status,2+status,0]
  1608                           ;delay2@t stored from wreg
  1609  046F  00F4               	movwf	delay2@t
  1610  0470                     l1147:	
  1611                           
  1612                           ;newmain.c: 144:     char x = t[0];
  1613  0470  0874               	movf	delay2@t,w
  1614  0471  0084               	movwf	4
  1615  0472  1383               	bcf	3,7	;select IRP bank0
  1616  0473  0800               	movf	0,w
  1617  0474  00F0               	movwf	??_delay2
  1618  0475  0870               	movf	??_delay2,w
  1619  0476  00F1               	movwf	delay2@x
  1620  0477                     l1149:	
  1621                           
  1622                           ;newmain.c: 145:     char y = t[1];
  1623  0477  0874               	movf	delay2@t,w
  1624  0478  3E02               	addlw	2
  1625  0479  0084               	movwf	4
  1626  047A  0800               	movf	0,w
  1627  047B  00F0               	movwf	??_delay2
  1628  047C  0870               	movf	??_delay2,w
  1629  047D  00F2               	movwf	delay2@y
  1630  047E                     l1151:	
  1631                           
  1632                           ;newmain.c: 149:         z = y;
  1633  047E  0872               	movf	delay2@y,w
  1634  047F  00F0               	movwf	??_delay2
  1635  0480  0870               	movf	??_delay2,w
  1636  0481  00F3               	movwf	delay2@z
  1637  0482                     l114:	
  1638                           ;newmain.c: 150:         do {
  1639                           
  1640                           
  1641                           ;newmain.c: 152:         } while (--z);
  1642  0482  3001               	movlw	1
  1643  0483  02F3               	subwf	delay2@z,f
  1644  0484  1D03               	btfss	3,2
  1645  0485  2C87               	goto	u561
  1646  0486  2C88               	goto	u560
  1647  0487                     u561:	
  1648  0487  2C82               	goto	l114
  1649  0488                     u560:	
  1650  0488                     l1153:	
  1651                           
  1652                           ;newmain.c: 153:     } while (--x);
  1653  0488  3001               	movlw	1
  1654  0489  02F1               	subwf	delay2@x,f
  1655  048A  1D03               	btfss	3,2
  1656  048B  2C8D               	goto	u571
  1657  048C  2C8E               	goto	u570
  1658  048D                     u571:	
  1659  048D  2C7E               	goto	l1151
  1660  048E                     u570:	
  1661  048E                     l117:	
  1662  048E  0008               	return
  1663  048F                     __end_of_delay2:	
  1664                           
  1665                           	psect	text8
  1666  05A8                     __ptext8:	
  1667 ;; *************** function _display_temp *****************
  1668 ;; Defined at:
  1669 ;;		line 208 in file "newmain.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, pclath, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1683 ;;      Params:         0       0       0       0       0
  1684 ;;      Locals:         0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0
  1686 ;;      Totals:         0       0       0       0       0
  1687 ;;Total ram usage:        0 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    2
  1690 ;; This function calls:
  1691 ;;		_delay
  1692 ;;		_writechar
  1693 ;;		_writecmd
  1694 ;; This function is called by:
  1695 ;;		_get_temp
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           
  1700                           ;psect for function _display_temp
  1701  05A8                     _display_temp:	
  1702  05A8                     l1249:	
  1703                           ;incstack = 0
  1704                           ; Regs used in _display_temp: [wreg+status,2+status,0+pclath+cstack]
  1705                           
  1706                           
  1707                           ;newmain.c: 211:     writecmd(0x01);
  1708  05A8  3001               	movlw	1
  1709  05A9  120A  118A  2424  120A  118A  	fcall	_writecmd
  1710                           
  1711                           ;newmain.c: 212:     writechar(tens + 48);
  1712  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1713  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1714  05B0  0846               	movf	_tens,w
  1715  05B1  3E30               	addlw	48
  1716  05B2  120A  118A  240F  120A  118A  	fcall	_writechar
  1717                           
  1718                           ;newmain.c: 213:     writechar(intEntries + 48);
  1719  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1720  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1721  05B9  0845               	movf	_intEntries,w
  1722  05BA  3E30               	addlw	48
  1723  05BB  120A  118A  240F  120A  118A  	fcall	_writechar
  1724                           
  1725                           ;newmain.c: 214:     writechar('.');
  1726  05C0  302E               	movlw	46
  1727  05C1  120A  118A  240F  120A  118A  	fcall	_writechar
  1728                           
  1729                           ;newmain.c: 215:     writechar(pt10 + 48);
  1730  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  1731  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  1732  05C8  0844               	movf	_pt10,w
  1733  05C9  3E30               	addlw	48
  1734  05CA  120A  118A  240F  120A  118A  	fcall	_writechar
  1735                           
  1736                           ;newmain.c: 216:     writechar(pt100 + 48);
  1737  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1738  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1739  05D1  0843               	movf	_pt100,w
  1740  05D2  3E30               	addlw	48
  1741  05D3  120A  118A  240F  120A  118A  	fcall	_writechar
  1742                           
  1743                           ;newmain.c: 217:     writechar(pt1000 + 48);
  1744  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  1745  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  1746  05DA  0842               	movf	_pt1000,w
  1747  05DB  3E30               	addlw	48
  1748  05DC  120A  118A  240F  120A  118A  	fcall	_writechar
  1749                           
  1750                           ;newmain.c: 218:     writechar(pt10000 + 48);
  1751  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  1752  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  1753  05E3  0841               	movf	_pt10000,w
  1754  05E4  3E30               	addlw	48
  1755  05E5  120A  118A  240F  120A  118A  	fcall	_writechar
  1756                           
  1757                           ;newmain.c: 219:     delay(10000);
  1758  05EA  3010               	movlw	16
  1759  05EB  00F0               	movwf	delay@t
  1760  05EC  3027               	movlw	39
  1761  05ED  00F1               	movwf	delay@t+1
  1762  05EE  120A  118A  2439  120A  118A  	fcall	_delay
  1763  05F3                     l134:	
  1764  05F3  0008               	return
  1765  05F4                     __end_of_display_temp:	
  1766                           
  1767                           	psect	text9
  1768  0424                     __ptext9:	
  1769 ;; *************** function _writecmd *****************
  1770 ;; Defined at:
  1771 ;;		line 87 in file "newmain.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  x               1    wreg     unsigned char 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  x               1    5[COMMON] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0, pclath, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1785 ;;      Params:         0       0       0       0       0
  1786 ;;      Locals:         1       0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0
  1788 ;;      Totals:         1       0       0       0       0
  1789 ;;Total ram usage:        1 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:    1
  1792 ;; This function calls:
  1793 ;;		_delay
  1794 ;; This function is called by:
  1795 ;;		_lcd_init
  1796 ;;		_display_temp
  1797 ;;		_setCursorPos
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           
  1802                           ;psect for function _writecmd
  1803  0424                     _writecmd:	
  1804                           
  1805                           ;incstack = 0
  1806                           ; Regs used in _writecmd: [wreg+status,2+status,0+pclath+cstack]
  1807                           ;writecmd@x stored from wreg
  1808  0424  00F5               	movwf	writecmd@x
  1809  0425                     l1127:	
  1810                           
  1811                           ;newmain.c: 88:     RA5 = 0;
  1812  0425  1283               	bcf	3,5	;RP0=0, select bank0
  1813  0426  1303               	bcf	3,6	;RP1=0, select bank0
  1814  0427  1285               	bcf	5,5	;volatile
  1815                           
  1816                           ;newmain.c: 89:     RA4 = 0;
  1817  0428  1205               	bcf	5,4	;volatile
  1818  0429                     l1129:	
  1819                           
  1820                           ;newmain.c: 90:     PORTD = x;
  1821  0429  0875               	movf	writecmd@x,w
  1822  042A  0088               	movwf	8	;volatile
  1823  042B                     l1131:	
  1824                           
  1825                           ;newmain.c: 91:     RA3 = 0;
  1826  042B  1185               	bcf	5,3	;volatile
  1827  042C                     l1133:	
  1828                           
  1829                           ;newmain.c: 92:     delay(60);
  1830  042C  303C               	movlw	60
  1831  042D  00F0               	movwf	delay@t
  1832  042E  3000               	movlw	0
  1833  042F  00F1               	movwf	delay@t+1
  1834  0430  120A  118A  2439  120A  118A  	fcall	_delay
  1835  0435                     l1135:	
  1836                           
  1837                           ;newmain.c: 93:     RA3 = 1;
  1838  0435  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0436  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0437  1585               	bsf	5,3	;volatile
  1841  0438                     l74:	
  1842  0438  0008               	return
  1843  0439                     __end_of_writecmd:	
  1844                           
  1845                           	psect	text10
  1846  040F                     __ptext10:	
  1847 ;; *************** function _writechar *****************
  1848 ;; Defined at:
  1849 ;;		line 76 in file "newmain.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  x               1    wreg     unsigned char 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  x               1    5[COMMON] unsigned char 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0, pclath, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1863 ;;      Params:         0       0       0       0       0
  1864 ;;      Locals:         1       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0
  1866 ;;      Totals:         1       0       0       0       0
  1867 ;;Total ram usage:        1 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    1
  1870 ;; This function calls:
  1871 ;;		_delay
  1872 ;; This function is called by:
  1873 ;;		_display_temp
  1874 ;;		_writeString
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function _writechar
  1880  040F                     _writechar:	
  1881                           
  1882                           ;incstack = 0
  1883                           ; Regs used in _writechar: [wreg+status,2+status,0+pclath+cstack]
  1884                           ;writechar@x stored from wreg
  1885  040F  00F5               	movwf	writechar@x
  1886  0410                     l1137:	
  1887                           
  1888                           ;newmain.c: 77:     RA5 = 1;
  1889  0410  1283               	bcf	3,5	;RP0=0, select bank0
  1890  0411  1303               	bcf	3,6	;RP1=0, select bank0
  1891  0412  1685               	bsf	5,5	;volatile
  1892                           
  1893                           ;newmain.c: 78:     RA4 = 0;
  1894  0413  1205               	bcf	5,4	;volatile
  1895  0414                     l1139:	
  1896                           
  1897                           ;newmain.c: 79:     PORTD = x;
  1898  0414  0875               	movf	writechar@x,w
  1899  0415  0088               	movwf	8	;volatile
  1900  0416                     l1141:	
  1901                           
  1902                           ;newmain.c: 80:     RA3 = 0;
  1903  0416  1185               	bcf	5,3	;volatile
  1904  0417                     l1143:	
  1905                           
  1906                           ;newmain.c: 81:     delay(60);
  1907  0417  303C               	movlw	60
  1908  0418  00F0               	movwf	delay@t
  1909  0419  3000               	movlw	0
  1910  041A  00F1               	movwf	delay@t+1
  1911  041B  120A  118A  2439  120A  118A  	fcall	_delay
  1912  0420                     l1145:	
  1913                           
  1914                           ;newmain.c: 82:     RA3 = 1;
  1915  0420  1283               	bcf	3,5	;RP0=0, select bank0
  1916  0421  1303               	bcf	3,6	;RP1=0, select bank0
  1917  0422  1585               	bsf	5,3	;volatile
  1918  0423                     l71:	
  1919  0423  0008               	return
  1920  0424                     __end_of_writechar:	
  1921                           
  1922                           	psect	text11
  1923  0439                     __ptext11:	
  1924 ;; *************** function _delay *****************
  1925 ;; Defined at:
  1926 ;;		line 98 in file "newmain.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  t               2    0[COMMON] int 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  i               2    3[COMMON] int 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1940 ;;      Params:         2       0       0       0       0
  1941 ;;      Locals:         2       0       0       0       0
  1942 ;;      Temps:          1       0       0       0       0
  1943 ;;      Totals:         5       0       0       0       0
  1944 ;;Total ram usage:        5 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; This function calls:
  1947 ;;		Nothing
  1948 ;; This function is called by:
  1949 ;;		_writechar
  1950 ;;		_writecmd
  1951 ;;		_display_temp
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           
  1956                           ;psect for function _delay
  1957  0439                     _delay:	
  1958  0439                     l1123:	
  1959                           ;incstack = 0
  1960                           ; Regs used in _delay: [wreg+status,2]
  1961                           
  1962                           
  1963                           ;newmain.c: 99:     int i;;newmain.c: 100:     for (i = 0; i < t; i++);
  1964  0439  01F3               	clrf	delay@i
  1965  043A  01F4               	clrf	delay@i+1
  1966  043B  2C42               	goto	l77
  1967  043C                     l1125:	
  1968  043C  3001               	movlw	1
  1969  043D  07F3               	addwf	delay@i,f
  1970  043E  1803               	skipnc
  1971  043F  0AF4               	incf	delay@i+1,f
  1972  0440  3000               	movlw	0
  1973  0441  07F4               	addwf	delay@i+1,f
  1974  0442                     l77:	
  1975  0442  0874               	movf	delay@i+1,w
  1976  0443  3A80               	xorlw	128
  1977  0444  00F2               	movwf	??_delay
  1978  0445  0871               	movf	delay@t+1,w
  1979  0446  3A80               	xorlw	128
  1980  0447  0272               	subwf	??_delay,w
  1981  0448  1D03               	skipz
  1982  0449  2C4C               	goto	u555
  1983  044A  0870               	movf	delay@t,w
  1984  044B  0273               	subwf	delay@i,w
  1985  044C                     u555:	
  1986  044C  1C03               	skipc
  1987  044D  2C4F               	goto	u551
  1988  044E  2C50               	goto	u550
  1989  044F                     u551:	
  1990  044F  2C3C               	goto	l1125
  1991  0450                     u550:	
  1992  0450                     l80:	
  1993  0450  0008               	return
  1994  0451                     __end_of_delay:	
  1995                           
  1996                           	psect	text12
  1997  052A                     __ptext12:	
  1998 ;; *************** function ___lwmod *****************
  1999 ;; Defined at:
  2000 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  divisor         2    0[COMMON] unsigned int 
  2003 ;;  dividend        2    2[COMMON] unsigned int 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  counter         1    5[COMMON] unsigned char 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  2    0[COMMON] unsigned int 
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2015 ;;      Params:         4       0       0       0       0
  2016 ;;      Locals:         1       0       0       0       0
  2017 ;;      Temps:          1       0       0       0       0
  2018 ;;      Totals:         6       0       0       0       0
  2019 ;;Total ram usage:        6 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_get_temp
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           
  2029                           ;psect for function ___lwmod
  2030  052A                     ___lwmod:	
  2031  052A                     l1375:	
  2032                           ;incstack = 0
  2033                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2034                           
  2035  052A  0870               	movf	___lwmod@divisor,w
  2036  052B  0471               	iorwf	___lwmod@divisor+1,w
  2037  052C  1903               	btfsc	3,2
  2038  052D  2D2F               	goto	u901
  2039  052E  2D30               	goto	u900
  2040  052F                     u901:	
  2041  052F  2D5F               	goto	l1393
  2042  0530                     u900:	
  2043  0530                     l1377:	
  2044  0530  01F5               	clrf	___lwmod@counter
  2045  0531  0AF5               	incf	___lwmod@counter,f
  2046  0532  2D3E               	goto	l1383
  2047  0533                     l1379:	
  2048  0533  3001               	movlw	1
  2049  0534                     u915:	
  2050  0534  1003               	clrc
  2051  0535  0DF0               	rlf	___lwmod@divisor,f
  2052  0536  0DF1               	rlf	___lwmod@divisor+1,f
  2053  0537  3EFF               	addlw	-1
  2054  0538  1D03               	skipz
  2055  0539  2D34               	goto	u915
  2056  053A                     l1381:	
  2057  053A  3001               	movlw	1
  2058  053B  00F4               	movwf	??___lwmod
  2059  053C  0874               	movf	??___lwmod,w
  2060  053D  07F5               	addwf	___lwmod@counter,f
  2061  053E                     l1383:	
  2062  053E  1FF1               	btfss	___lwmod@divisor+1,7
  2063  053F  2D41               	goto	u921
  2064  0540  2D42               	goto	u920
  2065  0541                     u921:	
  2066  0541  2D33               	goto	l1379
  2067  0542                     u920:	
  2068  0542                     l1385:	
  2069  0542  0871               	movf	___lwmod@divisor+1,w
  2070  0543  0273               	subwf	___lwmod@dividend+1,w
  2071  0544  1D03               	skipz
  2072  0545  2D48               	goto	u935
  2073  0546  0870               	movf	___lwmod@divisor,w
  2074  0547  0272               	subwf	___lwmod@dividend,w
  2075  0548                     u935:	
  2076  0548  1C03               	skipc
  2077  0549  2D4B               	goto	u931
  2078  054A  2D4C               	goto	u930
  2079  054B                     u931:	
  2080  054B  2D52               	goto	l1389
  2081  054C                     u930:	
  2082  054C                     l1387:	
  2083  054C  0870               	movf	___lwmod@divisor,w
  2084  054D  02F2               	subwf	___lwmod@dividend,f
  2085  054E  0871               	movf	___lwmod@divisor+1,w
  2086  054F  1C03               	skipc
  2087  0550  03F3               	decf	___lwmod@dividend+1,f
  2088  0551  02F3               	subwf	___lwmod@dividend+1,f
  2089  0552                     l1389:	
  2090  0552  3001               	movlw	1
  2091  0553                     u945:	
  2092  0553  1003               	clrc
  2093  0554  0CF1               	rrf	___lwmod@divisor+1,f
  2094  0555  0CF0               	rrf	___lwmod@divisor,f
  2095  0556  3EFF               	addlw	-1
  2096  0557  1D03               	skipz
  2097  0558  2D53               	goto	u945
  2098  0559                     l1391:	
  2099  0559  3001               	movlw	1
  2100  055A  02F5               	subwf	___lwmod@counter,f
  2101  055B  1D03               	btfss	3,2
  2102  055C  2D5E               	goto	u951
  2103  055D  2D5F               	goto	u950
  2104  055E                     u951:	
  2105  055E  2D42               	goto	l1385
  2106  055F                     u950:	
  2107  055F                     l1393:	
  2108  055F  0873               	movf	___lwmod@dividend+1,w
  2109  0560  00F1               	movwf	?___lwmod+1
  2110  0561  0872               	movf	___lwmod@dividend,w
  2111  0562  00F0               	movwf	?___lwmod
  2112  0563                     l525:	
  2113  0563  0008               	return
  2114  0564                     __end_of___lwmod:	
  2115                           
  2116                           	psect	text13
  2117  0564                     __ptext13:	
  2118 ;; *************** function ___lwdiv *****************
  2119 ;; Defined at:
  2120 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  divisor         2    6[COMMON] unsigned int 
  2123 ;;  dividend        2    8[COMMON] unsigned int 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  quotient        2   11[COMMON] unsigned int 
  2126 ;;  counter         1   13[COMMON] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  2    6[COMMON] unsigned int 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2136 ;;      Params:         4       0       0       0       0
  2137 ;;      Locals:         3       0       0       0       0
  2138 ;;      Temps:          1       0       0       0       0
  2139 ;;      Totals:         8       0       0       0       0
  2140 ;;Total ram usage:        8 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_get_temp
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function ___lwdiv
  2151  0564                     ___lwdiv:	
  2152  0564                     l1349:	
  2153                           ;incstack = 0
  2154                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2155                           
  2156  0564  01FB               	clrf	___lwdiv@quotient
  2157  0565  01FC               	clrf	___lwdiv@quotient+1
  2158  0566                     l1351:	
  2159  0566  0876               	movf	___lwdiv@divisor,w
  2160  0567  0477               	iorwf	___lwdiv@divisor+1,w
  2161  0568  1903               	btfsc	3,2
  2162  0569  2D6B               	goto	u831
  2163  056A  2D6C               	goto	u830
  2164  056B                     u831:	
  2165  056B  2DA3               	goto	l1371
  2166  056C                     u830:	
  2167  056C                     l1353:	
  2168  056C  01FD               	clrf	___lwdiv@counter
  2169  056D  0AFD               	incf	___lwdiv@counter,f
  2170  056E  2D7A               	goto	l1359
  2171  056F                     l1355:	
  2172  056F  3001               	movlw	1
  2173  0570                     u845:	
  2174  0570  1003               	clrc
  2175  0571  0DF6               	rlf	___lwdiv@divisor,f
  2176  0572  0DF7               	rlf	___lwdiv@divisor+1,f
  2177  0573  3EFF               	addlw	-1
  2178  0574  1D03               	skipz
  2179  0575  2D70               	goto	u845
  2180  0576                     l1357:	
  2181  0576  3001               	movlw	1
  2182  0577  00FA               	movwf	??___lwdiv
  2183  0578  087A               	movf	??___lwdiv,w
  2184  0579  07FD               	addwf	___lwdiv@counter,f
  2185  057A                     l1359:	
  2186  057A  1FF7               	btfss	___lwdiv@divisor+1,7
  2187  057B  2D7D               	goto	u851
  2188  057C  2D7E               	goto	u850
  2189  057D                     u851:	
  2190  057D  2D6F               	goto	l1355
  2191  057E                     u850:	
  2192  057E                     l1361:	
  2193  057E  3001               	movlw	1
  2194  057F                     u865:	
  2195  057F  1003               	clrc
  2196  0580  0DFB               	rlf	___lwdiv@quotient,f
  2197  0581  0DFC               	rlf	___lwdiv@quotient+1,f
  2198  0582  3EFF               	addlw	-1
  2199  0583  1D03               	skipz
  2200  0584  2D7F               	goto	u865
  2201  0585  0877               	movf	___lwdiv@divisor+1,w
  2202  0586  0279               	subwf	___lwdiv@dividend+1,w
  2203  0587  1D03               	skipz
  2204  0588  2D8B               	goto	u875
  2205  0589  0876               	movf	___lwdiv@divisor,w
  2206  058A  0278               	subwf	___lwdiv@dividend,w
  2207  058B                     u875:	
  2208  058B  1C03               	skipc
  2209  058C  2D8E               	goto	u871
  2210  058D  2D8F               	goto	u870
  2211  058E                     u871:	
  2212  058E  2D96               	goto	l1367
  2213  058F                     u870:	
  2214  058F                     l1363:	
  2215  058F  0876               	movf	___lwdiv@divisor,w
  2216  0590  02F8               	subwf	___lwdiv@dividend,f
  2217  0591  0877               	movf	___lwdiv@divisor+1,w
  2218  0592  1C03               	skipc
  2219  0593  03F9               	decf	___lwdiv@dividend+1,f
  2220  0594  02F9               	subwf	___lwdiv@dividend+1,f
  2221  0595                     l1365:	
  2222  0595  147B               	bsf	___lwdiv@quotient,0
  2223  0596                     l1367:	
  2224  0596  3001               	movlw	1
  2225  0597                     u885:	
  2226  0597  1003               	clrc
  2227  0598  0CF7               	rrf	___lwdiv@divisor+1,f
  2228  0599  0CF6               	rrf	___lwdiv@divisor,f
  2229  059A  3EFF               	addlw	-1
  2230  059B  1D03               	skipz
  2231  059C  2D97               	goto	u885
  2232  059D                     l1369:	
  2233  059D  3001               	movlw	1
  2234  059E  02FD               	subwf	___lwdiv@counter,f
  2235  059F  1D03               	btfss	3,2
  2236  05A0  2DA2               	goto	u891
  2237  05A1  2DA3               	goto	u890
  2238  05A2                     u891:	
  2239  05A2  2D7E               	goto	l1361
  2240  05A3                     u890:	
  2241  05A3                     l1371:	
  2242  05A3  087C               	movf	___lwdiv@quotient+1,w
  2243  05A4  00F7               	movwf	?___lwdiv+1
  2244  05A5  087B               	movf	___lwdiv@quotient,w
  2245  05A6  00F6               	movwf	?___lwdiv
  2246  05A7                     l515:	
  2247  05A7  0008               	return
  2248  05A8                     __end_of___lwdiv:	
  2249                           
  2250                           	psect	text14
  2251  05F4                     __ptext14:	
  2252 ;; *************** function ___awmod *****************
  2253 ;; Defined at:
  2254 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  divisor         2    0[COMMON] int 
  2257 ;;  dividend        2    2[COMMON] int 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  sign            1    6[COMMON] unsigned char 
  2260 ;;  counter         1    5[COMMON] unsigned char 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  2    0[COMMON] int 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2270 ;;      Params:         4       0       0       0       0
  2271 ;;      Locals:         2       0       0       0       0
  2272 ;;      Temps:          1       0       0       0       0
  2273 ;;      Totals:         7       0       0       0       0
  2274 ;;Total ram usage:        7 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_get_temp
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function ___awmod
  2285  05F4                     ___awmod:	
  2286  05F4                     l1311:	
  2287                           ;incstack = 0
  2288                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2289                           
  2290  05F4  01F6               	clrf	___awmod@sign
  2291  05F5                     l1313:	
  2292  05F5  1FF3               	btfss	___awmod@dividend+1,7
  2293  05F6  2DF8               	goto	u741
  2294  05F7  2DF9               	goto	u740
  2295  05F8                     u741:	
  2296  05F8  2E00               	goto	l1319
  2297  05F9                     u740:	
  2298  05F9                     l1315:	
  2299  05F9  09F2               	comf	___awmod@dividend,f
  2300  05FA  09F3               	comf	___awmod@dividend+1,f
  2301  05FB  0AF2               	incf	___awmod@dividend,f
  2302  05FC  1903               	skipnz
  2303  05FD  0AF3               	incf	___awmod@dividend+1,f
  2304  05FE                     l1317:	
  2305  05FE  01F6               	clrf	___awmod@sign
  2306  05FF  0AF6               	incf	___awmod@sign,f
  2307  0600                     l1319:	
  2308  0600  1FF1               	btfss	___awmod@divisor+1,7
  2309  0601  2E03               	goto	u751
  2310  0602  2E04               	goto	u750
  2311  0603                     u751:	
  2312  0603  2E09               	goto	l1323
  2313  0604                     u750:	
  2314  0604                     l1321:	
  2315  0604  09F0               	comf	___awmod@divisor,f
  2316  0605  09F1               	comf	___awmod@divisor+1,f
  2317  0606  0AF0               	incf	___awmod@divisor,f
  2318  0607  1903               	skipnz
  2319  0608  0AF1               	incf	___awmod@divisor+1,f
  2320  0609                     l1323:	
  2321  0609  0870               	movf	___awmod@divisor,w
  2322  060A  0471               	iorwf	___awmod@divisor+1,w
  2323  060B  1903               	btfsc	3,2
  2324  060C  2E0E               	goto	u761
  2325  060D  2E0F               	goto	u760
  2326  060E                     u761:	
  2327  060E  2E3E               	goto	l1341
  2328  060F                     u760:	
  2329  060F                     l1325:	
  2330  060F  01F5               	clrf	___awmod@counter
  2331  0610  0AF5               	incf	___awmod@counter,f
  2332  0611  2E1D               	goto	l1331
  2333  0612                     l1327:	
  2334  0612  3001               	movlw	1
  2335  0613                     u775:	
  2336  0613  1003               	clrc
  2337  0614  0DF0               	rlf	___awmod@divisor,f
  2338  0615  0DF1               	rlf	___awmod@divisor+1,f
  2339  0616  3EFF               	addlw	-1
  2340  0617  1D03               	skipz
  2341  0618  2E13               	goto	u775
  2342  0619                     l1329:	
  2343  0619  3001               	movlw	1
  2344  061A  00F4               	movwf	??___awmod
  2345  061B  0874               	movf	??___awmod,w
  2346  061C  07F5               	addwf	___awmod@counter,f
  2347  061D                     l1331:	
  2348  061D  1FF1               	btfss	___awmod@divisor+1,7
  2349  061E  2E20               	goto	u781
  2350  061F  2E21               	goto	u780
  2351  0620                     u781:	
  2352  0620  2E12               	goto	l1327
  2353  0621                     u780:	
  2354  0621                     l1333:	
  2355  0621  0871               	movf	___awmod@divisor+1,w
  2356  0622  0273               	subwf	___awmod@dividend+1,w
  2357  0623  1D03               	skipz
  2358  0624  2E27               	goto	u795
  2359  0625  0870               	movf	___awmod@divisor,w
  2360  0626  0272               	subwf	___awmod@dividend,w
  2361  0627                     u795:	
  2362  0627  1C03               	skipc
  2363  0628  2E2A               	goto	u791
  2364  0629  2E2B               	goto	u790
  2365  062A                     u791:	
  2366  062A  2E31               	goto	l1337
  2367  062B                     u790:	
  2368  062B                     l1335:	
  2369  062B  0870               	movf	___awmod@divisor,w
  2370  062C  02F2               	subwf	___awmod@dividend,f
  2371  062D  0871               	movf	___awmod@divisor+1,w
  2372  062E  1C03               	skipc
  2373  062F  03F3               	decf	___awmod@dividend+1,f
  2374  0630  02F3               	subwf	___awmod@dividend+1,f
  2375  0631                     l1337:	
  2376  0631  3001               	movlw	1
  2377  0632                     u805:	
  2378  0632  1003               	clrc
  2379  0633  0CF1               	rrf	___awmod@divisor+1,f
  2380  0634  0CF0               	rrf	___awmod@divisor,f
  2381  0635  3EFF               	addlw	-1
  2382  0636  1D03               	skipz
  2383  0637  2E32               	goto	u805
  2384  0638                     l1339:	
  2385  0638  3001               	movlw	1
  2386  0639  02F5               	subwf	___awmod@counter,f
  2387  063A  1D03               	btfss	3,2
  2388  063B  2E3D               	goto	u811
  2389  063C  2E3E               	goto	u810
  2390  063D                     u811:	
  2391  063D  2E21               	goto	l1333
  2392  063E                     u810:	
  2393  063E                     l1341:	
  2394  063E  0876               	movf	___awmod@sign,w
  2395  063F  1903               	btfsc	3,2
  2396  0640  2E42               	goto	u821
  2397  0641  2E43               	goto	u820
  2398  0642                     u821:	
  2399  0642  2E48               	goto	l1345
  2400  0643                     u820:	
  2401  0643                     l1343:	
  2402  0643  09F2               	comf	___awmod@dividend,f
  2403  0644  09F3               	comf	___awmod@dividend+1,f
  2404  0645  0AF2               	incf	___awmod@dividend,f
  2405  0646  1903               	skipnz
  2406  0647  0AF3               	incf	___awmod@dividend+1,f
  2407  0648                     l1345:	
  2408  0648  0873               	movf	___awmod@dividend+1,w
  2409  0649  00F1               	movwf	?___awmod+1
  2410  064A  0872               	movf	___awmod@dividend,w
  2411  064B  00F0               	movwf	?___awmod
  2412  064C                     l409:	
  2413  064C  0008               	return
  2414  064D                     __end_of___awmod:	
  2415                           
  2416                           	psect	text15
  2417  064D                     __ptext15:	
  2418 ;; *************** function ___awdiv *****************
  2419 ;; Defined at:
  2420 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  divisor         2    0[COMMON] int 
  2423 ;;  dividend        2    2[COMMON] int 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  quotient        2    7[COMMON] int 
  2426 ;;  sign            1    6[COMMON] unsigned char 
  2427 ;;  counter         1    5[COMMON] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  2    0[COMMON] int 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2, status,0
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2437 ;;      Params:         4       0       0       0       0
  2438 ;;      Locals:         4       0       0       0       0
  2439 ;;      Temps:          1       0       0       0       0
  2440 ;;      Totals:         9       0       0       0       0
  2441 ;;Total ram usage:        9 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; This function calls:
  2444 ;;		Nothing
  2445 ;; This function is called by:
  2446 ;;		_get_temp
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           
  2451                           ;psect for function ___awdiv
  2452  064D                     ___awdiv:	
  2453  064D                     l1267:	
  2454                           ;incstack = 0
  2455                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2456                           
  2457  064D  01F6               	clrf	___awdiv@sign
  2458  064E                     l1269:	
  2459  064E  1FF1               	btfss	___awdiv@divisor+1,7
  2460  064F  2E51               	goto	u641
  2461  0650  2E52               	goto	u640
  2462  0651                     u641:	
  2463  0651  2E59               	goto	l1275
  2464  0652                     u640:	
  2465  0652                     l1271:	
  2466  0652  09F0               	comf	___awdiv@divisor,f
  2467  0653  09F1               	comf	___awdiv@divisor+1,f
  2468  0654  0AF0               	incf	___awdiv@divisor,f
  2469  0655  1903               	skipnz
  2470  0656  0AF1               	incf	___awdiv@divisor+1,f
  2471  0657                     l1273:	
  2472  0657  01F6               	clrf	___awdiv@sign
  2473  0658  0AF6               	incf	___awdiv@sign,f
  2474  0659                     l1275:	
  2475  0659  1FF3               	btfss	___awdiv@dividend+1,7
  2476  065A  2E5C               	goto	u651
  2477  065B  2E5D               	goto	u650
  2478  065C                     u651:	
  2479  065C  2E66               	goto	l1281
  2480  065D                     u650:	
  2481  065D                     l1277:	
  2482  065D  09F2               	comf	___awdiv@dividend,f
  2483  065E  09F3               	comf	___awdiv@dividend+1,f
  2484  065F  0AF2               	incf	___awdiv@dividend,f
  2485  0660  1903               	skipnz
  2486  0661  0AF3               	incf	___awdiv@dividend+1,f
  2487  0662                     l1279:	
  2488  0662  3001               	movlw	1
  2489  0663  00F4               	movwf	??___awdiv
  2490  0664  0874               	movf	??___awdiv,w
  2491  0665  06F6               	xorwf	___awdiv@sign,f
  2492  0666                     l1281:	
  2493  0666  01F7               	clrf	___awdiv@quotient
  2494  0667  01F8               	clrf	___awdiv@quotient+1
  2495  0668                     l1283:	
  2496  0668  0870               	movf	___awdiv@divisor,w
  2497  0669  0471               	iorwf	___awdiv@divisor+1,w
  2498  066A  1903               	btfsc	3,2
  2499  066B  2E6D               	goto	u661
  2500  066C  2E6E               	goto	u660
  2501  066D                     u661:	
  2502  066D  2EA5               	goto	l1303
  2503  066E                     u660:	
  2504  066E                     l1285:	
  2505  066E  01F5               	clrf	___awdiv@counter
  2506  066F  0AF5               	incf	___awdiv@counter,f
  2507  0670  2E7C               	goto	l1291
  2508  0671                     l1287:	
  2509  0671  3001               	movlw	1
  2510  0672                     u675:	
  2511  0672  1003               	clrc
  2512  0673  0DF0               	rlf	___awdiv@divisor,f
  2513  0674  0DF1               	rlf	___awdiv@divisor+1,f
  2514  0675  3EFF               	addlw	-1
  2515  0676  1D03               	skipz
  2516  0677  2E72               	goto	u675
  2517  0678                     l1289:	
  2518  0678  3001               	movlw	1
  2519  0679  00F4               	movwf	??___awdiv
  2520  067A  0874               	movf	??___awdiv,w
  2521  067B  07F5               	addwf	___awdiv@counter,f
  2522  067C                     l1291:	
  2523  067C  1FF1               	btfss	___awdiv@divisor+1,7
  2524  067D  2E7F               	goto	u681
  2525  067E  2E80               	goto	u680
  2526  067F                     u681:	
  2527  067F  2E71               	goto	l1287
  2528  0680                     u680:	
  2529  0680                     l1293:	
  2530  0680  3001               	movlw	1
  2531  0681                     u695:	
  2532  0681  1003               	clrc
  2533  0682  0DF7               	rlf	___awdiv@quotient,f
  2534  0683  0DF8               	rlf	___awdiv@quotient+1,f
  2535  0684  3EFF               	addlw	-1
  2536  0685  1D03               	skipz
  2537  0686  2E81               	goto	u695
  2538  0687  0871               	movf	___awdiv@divisor+1,w
  2539  0688  0273               	subwf	___awdiv@dividend+1,w
  2540  0689  1D03               	skipz
  2541  068A  2E8D               	goto	u705
  2542  068B  0870               	movf	___awdiv@divisor,w
  2543  068C  0272               	subwf	___awdiv@dividend,w
  2544  068D                     u705:	
  2545  068D  1C03               	skipc
  2546  068E  2E90               	goto	u701
  2547  068F  2E91               	goto	u700
  2548  0690                     u701:	
  2549  0690  2E98               	goto	l1299
  2550  0691                     u700:	
  2551  0691                     l1295:	
  2552  0691  0870               	movf	___awdiv@divisor,w
  2553  0692  02F2               	subwf	___awdiv@dividend,f
  2554  0693  0871               	movf	___awdiv@divisor+1,w
  2555  0694  1C03               	skipc
  2556  0695  03F3               	decf	___awdiv@dividend+1,f
  2557  0696  02F3               	subwf	___awdiv@dividend+1,f
  2558  0697                     l1297:	
  2559  0697  1477               	bsf	___awdiv@quotient,0
  2560  0698                     l1299:	
  2561  0698  3001               	movlw	1
  2562  0699                     u715:	
  2563  0699  1003               	clrc
  2564  069A  0CF1               	rrf	___awdiv@divisor+1,f
  2565  069B  0CF0               	rrf	___awdiv@divisor,f
  2566  069C  3EFF               	addlw	-1
  2567  069D  1D03               	skipz
  2568  069E  2E99               	goto	u715
  2569  069F                     l1301:	
  2570  069F  3001               	movlw	1
  2571  06A0  02F5               	subwf	___awdiv@counter,f
  2572  06A1  1D03               	btfss	3,2
  2573  06A2  2EA4               	goto	u721
  2574  06A3  2EA5               	goto	u720
  2575  06A4                     u721:	
  2576  06A4  2E80               	goto	l1293
  2577  06A5                     u720:	
  2578  06A5                     l1303:	
  2579  06A5  0876               	movf	___awdiv@sign,w
  2580  06A6  1903               	btfsc	3,2
  2581  06A7  2EA9               	goto	u731
  2582  06A8  2EAA               	goto	u730
  2583  06A9                     u731:	
  2584  06A9  2EAF               	goto	l1307
  2585  06AA                     u730:	
  2586  06AA                     l1305:	
  2587  06AA  09F7               	comf	___awdiv@quotient,f
  2588  06AB  09F8               	comf	___awdiv@quotient+1,f
  2589  06AC  0AF7               	incf	___awdiv@quotient,f
  2590  06AD  1903               	skipnz
  2591  06AE  0AF8               	incf	___awdiv@quotient+1,f
  2592  06AF                     l1307:	
  2593  06AF  0878               	movf	___awdiv@quotient+1,w
  2594  06B0  00F1               	movwf	?___awdiv+1
  2595  06B1  0877               	movf	___awdiv@quotient,w
  2596  06B2  00F0               	movwf	?___awdiv
  2597  06B3                     l396:	
  2598  06B3  0008               	return
  2599  06B4                     __end_of___awdiv:	
  2600  007E                     btemp	set	126	;btemp
  2601  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    8
    Data        30
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    delay2@t	PTR int  size(1) Largest target is 4
		 -> t430us(BANK0[4]), t70us(BANK0[4]), t503us(BANK0[4]), t63us(BANK0[4]), 


Critical Paths under _main in COMMON

    _lcd_init->_writecmd
    _get_temp->___lwdiv
    _write_byte->_delay2
    _reset->_delay2
    _read_byte->_delay2
    _display_temp->_writechar
    _display_temp->_writecmd
    _writecmd->_delay
    _writechar->_delay
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    _main->_get_temp

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4339
                           _get_temp
                               _init
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     296
                           _writecmd
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             6     6      0    4043
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                       _display_temp
                          _read_byte
                              _reset
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     392
                                              5 COMMON     5     5      0
                             _delay2
 ---------------------------------------------------------------------------------
 (2) _reset                                                1     1      0     303
                                              5 COMMON     1     1      0
                             _delay2
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     349
                                              5 COMMON     3     3      0
                             _delay2
 ---------------------------------------------------------------------------------
 (3) _delay2                                               5     5      0     278
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _display_temp                                         0     0      0     866
                              _delay
                          _writechar
                           _writecmd
 ---------------------------------------------------------------------------------
 (2) _writecmd                                             1     1      0     296
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _writechar                                            1     1      0     296
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                5     3      2     274
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _get_temp
     ___awdiv
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _display_temp
       _delay
       _writechar
         _delay
       _writecmd
         _delay
     _read_byte
       _delay2
     _reset
       _delay2
     _write_byte
       _delay2
   _init
   _lcd_init
     _writecmd
       _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      4      2F       5       58.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3D      12        0.0%
ABS                  0      0      3D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 08 17:04:13 2019

                      pc 0002                       l71 0423                       l80 0450  
                     l65 03D5                       l74 0438                       l68 03E8  
                     l77 0442                       _TX 0047                       _TZ 0048  
           ___awdiv@sign 0076                       _wd 003E                       fsr 0004  
                    l114 0482                      l131 04F2                      l123 0529  
                    l117 048E                      l134 05F3                      l142 04BC  
                    l138 0492                      l154 03EE                      l149 07E0  
                    l409 064C                      l515 05A7                      l525 0563  
                    l396 06B3                      _RA2 002A                      _RA3 002B  
                    _RA4 002C                      _RC0 0038                      _RA5 002D  
                    u600 04E3                      u601 04E2                      u610 04F1  
                    u611 04F0                      u700 0691                      u620 04AD  
                    u701 0690                      u621 04AC                      u550 0450  
                    u630 04BC                      u551 044F                      u631 04BB  
                    u720 06A5                      u640 0652                      u560 0488  
                    u721 06A4                      u705 068D                      u641 0651  
                    u561 0487                      u730 06AA                      u650 065D  
                    u810 063E                      u570 048E                      u731 06A9  
                    u715 0699                      u651 065C                      u811 063D  
                    u555 044C                      u571 048D                      u660 066E  
                    u820 0643                      u740 05F9                      u900 0530  
                    u580 050D                      u661 066D                      u821 0642  
                    u805 0632                      u741 05F8                      u901 052F  
                    u581 050C                      u750 0604                      u830 056C  
                    u590 0529                      u751 0603                      u831 056B  
                    u591 0528                      u680 0680                      u760 060F  
                    u920 0542                      u681 067F                      u761 060E  
                    u921 0541                      u850 057E                      u930 054C  
                    u675 0672                      u851 057D                      u931 054B  
                    u915 0534                      u780 0621                      u781 0620  
                    u845 0570                      u790 062B                      u870 058F  
                    u950 055F                      u695 0681                      u791 062A  
                    u775 0613                      u871 058E                      u951 055E  
                    u935 0548                      u865 057F                      u945 0553  
                    u890 05A3                      u795 0627                      u891 05A2  
                    u875 058B                      u885 0597                      u965 06FA  
                    u990 074E                      _THV 0049                      u991 074D  
                    u975 0705            ?_display_temp 0070                      u985 0712  
                    _TLV 004A                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   l1031 03D2                     l1023 03CB                     l1025 03CF  
                   l1123 0439                     l1131 042B                     l1211 04CB  
                   l1203 04C2                     l1027 03D0                     l1301 069F  
                   l1125 043C                     l1141 0416                     l1133 042C  
                   l1221 04D0                     l1213 04CC                     l1205 04C4  
                   l1029 03D1                     l1303 06A5                     l1311 05F4  
                   l1143 0417                     l1135 0435                     l1127 0425  
                   l1151 047E                     l1231 04D7                     l1223 04D3  
                   l1215 04CD                     l1207 04C7                     l1305 06AA  
                   l1321 0604                     l1313 05F5                     l1145 0420  
                   l1137 0410                     l1129 0429                     l1153 0488  
                   l1241 04EA                     l1233 04D8                     l1225 04D4  
                   l1217 04CE                     l1209 04CA                     l1161 04F8  
                   l1401 06B7                     l1307 06AF                     l1331 061D  
                   l1323 0609                     l1315 05F9                     l1139 0414  
                   l1147 0470                     l1243 04EC                     l1235 04DE  
                   l1227 04D5                     l1219 04CF                     l1251 048F  
                   l1171 0505                     l1163 04FD                     l1155 04F4  
                   l1411 06DE                     l1403 06C8                     l1333 0621  
                   l1325 060F                     l1341 063E                     l1317 05FE  
                   l1149 0477                     l1245 04F1                     l1237 04E3  
                   l1229 04D6                     l1261 04B0                     l1253 0498  
                   l1181 0510                     l1173 0506                     l1165 0500  
                   l1421 0748                     l1413 06E8                     l1405 06CD  
                   l1271 0652                     l1343 0643                     l1335 062B  
                   l1327 0612                     l1319 0600                     l1351 0566  
                   l1239 04E4                     l1263 04B1                     l1255 049E  
                   l1191 0522                     l1183 0516                     l1175 0507  
                   l1167 0503                     l1431 0762                     l1423 074A  
                   l1415 06F2                     l1407 06D2                     l1281 0666  
                   l1273 0657                     l1345 0648                     l1337 0631  
                   l1329 0619                     l1361 057E                     l1353 056C  
                   l1249 05A8                     l1257 04A7                     l1265 04B7  
                   l1193 0524                     l1185 0519                     l1177 0508  
                   l1169 0504                     l1441 078D                     l1433 0766  
                   l1425 074E                     l1417 06F5                     l1409 06D8  
                   l1291 067C                     l1283 0668                     l1275 0659  
                   l1267 064D                     l1339 0638                     l1363 058F  
                   l1355 056F                     l1371 05A3                     l1195 04BD  
                   l1259 04AD                     l1187 051A                     l1179 050D  
                   l1443 07AD                     l1435 076E                     l1427 0756  
                   l1419 070F                     l1293 0680                     l1285 066E  
                   l1277 065D                     l1269 064E                     l1365 0595  
                   l1357 0576                     l1349 0564                     l1381 053A  
                   l1197 04BE                     l1189 051B                     l1445 07CD  
                   l1437 0772                     l1429 075A                     l1295 0691  
                   l1287 0671                     l1279 0662                     l1367 0596  
                   l1359 057A                     l1391 0559                     l1383 053E  
                   l1375 052A                     l1439 077A                     l1297 0697  
                   l1289 0678                     l1369 059D                     l1385 0542  
                   l1377 0530                     l1393 055F                     l1473 03E9  
                   l1299 0698                     l1387 054C                     l1379 0533  
                   l1475 03F3                     l1389 0552                     l1397 03D6  
                   l1399 06B4                     u1000 075A                     u1001 0759  
                   u1010 0766                     u1011 0765                     u1020 0772  
                   u1021 0771                     _pt10 0044                     _main 03E9  
                   _init 03CB                     _tens 0046                     btemp 007E  
          write_byte@val 0078                     start 0000                    ?_main 0070  
         ??_display_temp 0076                    ?_init 0070          __end_of___awdiv 06B4  
          __CFG_WDTE$OFF 0000          __end_of___awmod 064D          ___awdiv@divisor 0070  
        __end_of___lwdiv 05A8          __end_of___lwmod 0564          ___awdiv@counter 0075  
                  _PORTD 0008                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088            __CFG_PWRTE$ON 0000                    _t70us 0032  
                  _t63us 002E                    _pt100 0043                    _delay 0439  
                  _tUKus 002A                    _table 0020                    _reset 048F  
         write_byte@temp 0077           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07E1  
           __end_of_main 03FC             __end_of_init 03D6                   ??_main 007E  
                 ??_init 0070                   ?_delay 0070                   _ADCON1 009F  
                 ?_reset 0070         ___awdiv@dividend 0072                   _TRISC0 0438  
                 _t430us 0036                   _t503us 003A         __end_of_lcd_init 03E9  
       __end_of_get_temp 07E1                   _pt1000 0042                ??___awdiv 0074  
              ??___awmod 0074                   _delay2 046F                ??___lwdiv 007A  
              ??___lwmod 0074                   delay@i 0073                   delay@t 0070  
       ___awdiv@quotient 0077          ___awmod@divisor 0070          ___awmod@counter 0075  
       __end_of_writecmd 0439  __end_of__initialization 07FC     __end_of_display_temp 05F4  
         __pcstackCOMMON 0070             __pidataBANK0 0451            __end_of_delay 0451  
          __end_of_reset 04BD                  ??_delay 0072                  ??_reset 0075  
             __pbssBANK0 003E       __size_of_read_byte 0036               __pmaintext 03E9  
                ?_delay2 0070                ?_lcd_init 0070                ?_get_temp 0070  
             __stringtab 0003       __size_of_writechar 0015               _intEntries 0045  
                ___awdiv 064D                  ___awmod 05F4                  _pt10000 0041  
        __size_of_delay2 0020                  ___lwdiv 0564                  ___lwmod 052A  
                __ptext1 03D6                  __ptext2 03CB                  __ptext3 06B4  
                __ptext4 04F3                  __ptext5 048F                  __ptext6 04BD  
                __ptext7 046F                  __ptext8 05A8                  __ptext9 0424  
              ?_writecmd 0070                  delay2@t 0074                  delay2@x 0071  
                delay2@y 0072                  delay2@z 0073         ___awmod@dividend 0072  
      __end_of_read_byte 04F3               ??_lcd_init 0076               ??_get_temp 004B  
  __size_of_display_temp 004C     end_of_initialization 07FC               ??_writecmd 0075  
           _display_temp 05A8        __end_of_writechar 0424           __end_of_delay2 048F  
             _write_byte 04F3      start_initialization 07E1            reset@presence 0075  
             init_fetch0 03FC                 ??_delay2 0070              __pdataBANK0 0020  
             read_byte@i 0077               read_byte@j 0040                ___latbits 0002  
          __pcstackBANK0 004B        __size_of_lcd_init 0013        __size_of_get_temp 012D  
        setCursorPos@ln1 000F          setCursorPos@ln2 000D          setCursorPos@ln3 000B  
        setCursorPos@ln4 0009         ___lwdiv@dividend 0078                 ?___awdiv 0070  
               ?___awmod 0070                 ?___lwdiv 0076                 ?___lwmod 0070  
            ?_write_byte 0070                __pstrings 0003        __size_of_writecmd 0015  
       ___lwdiv@quotient 007B           __size_of_delay 0018                _read_byte 04BD  
         __size_of_reset 002E              __stringbase 0008              write_byte@i 0079  
              _writechar 040F               ?_read_byte 0070  __end_ofsetCursorPos@ln1 0011  
__end_ofsetCursorPos@ln2 000F  __end_ofsetCursorPos@ln3 000D  __end_ofsetCursorPos@ln4 000B  
    __size_of_write_byte 0037         __size_of___awdiv 0067         __size_of___awmod 0059  
       __size_of___lwdiv 0044         __size_of___lwmod 003A       __end_of__stringtab 0009  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007D                 __ptext10 040F  
               __ptext11 0439                 __ptext12 052A                 __ptext13 0564  
               __ptext14 05F4                 __ptext15 064D               ?_writechar 0070  
               _lcd_init 03D6                 _get_temp 06B4            __size_of_main 0013  
          __size_of_init 000B               writechar@x 0075                 _writecmd 0424  
         read_byte@value 0076                 init_ram0 0400              ??_read_byte 0075  
       ___lwmod@dividend 0072                stringcode 0003                writecmd@x 0075  
           ??_write_byte 0075          ___lwmod@divisor 0070          ___lwmod@counter 0075  
               stringdir 0003                 stringtab 0003              ??_writechar 0075  
     __end_of_write_byte 052A  
