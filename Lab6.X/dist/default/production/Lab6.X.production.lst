

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Nov 11 17:38:09 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.05
    32                           ; Generated 20/12/2018 GMT
    33                           ; 
    34                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185                           
   186                           	psect	idataBANK0
   187  0493                     __pidataBANK0:	
   188                           
   189                           ;initializer for _table
   190  0493  34C0               	retlw	192
   191  0494  34F9               	retlw	249
   192  0495  34A4               	retlw	164
   193  0496  34B0               	retlw	176
   194  0497  3499               	retlw	153
   195  0498  3492               	retlw	146
   196  0499  3482               	retlw	130
   197  049A  34F8               	retlw	248
   198  049B  3480               	retlw	128
   199  049C  3490               	retlw	144
   200                           
   201                           ;initializer for _tUKus
   202  049D  3401               	retlw	1
   203  049E  3400               	retlw	0
   204  049F  3446               	retlw	70
   205  04A0  3400               	retlw	0
   206                           
   207                           ;initializer for _t63us
   208  04A1  3402               	retlw	2
   209  04A2  3400               	retlw	0
   210  04A3  3407               	retlw	7
   211  04A4  3400               	retlw	0
   212                           
   213                           ;initializer for _t70us
   214  04A5  3402               	retlw	2
   215  04A6  3400               	retlw	0
   216  04A7  3408               	retlw	8
   217  04A8  3400               	retlw	0
   218                           
   219                           ;initializer for _t430us
   220  04A9  3402               	retlw	2
   221  04AA  3400               	retlw	0
   222  04AB  343C               	retlw	60
   223  04AC  3400               	retlw	0
   224                           
   225                           ;initializer for _t503us
   226  04AD  3402               	retlw	2
   227  04AE  3400               	retlw	0
   228  04AF  3446               	retlw	70
   229  04B0  3400               	retlw	0
   230                           
   231                           	psect	strings
   232  0003                     __pstrings:	
   233  0003                     stringtab:	
   234  0003                     __stringtab:	
   235  0003                     stringcode:	
   236                           ;	String table - string pointers are 1 byte each
   237                           
   238  0003                     stringdir:	
   239  0003  3000               	movlw	high stringdir
   240  0004  008A               	movwf	10
   241  0005  0804               	movf	4,w
   242  0006  0A84               	incf	4,f
   243  0007  0782               	addwf	2,f
   244  0008                     __stringbase:	
   245  0008  3400               	retlw	0
   246  0009                     __end_of__stringtab:	
   247  0009                     setCursorPos@ln4:	
   248  0009  34D8               	retlw	216
   249  000A  3400               	retlw	0
   250  000B                     __end_ofsetCursorPos@ln4:	
   251  000B                     setCursorPos@ln3:	
   252  000B  34C8               	retlw	200
   253  000C  3400               	retlw	0
   254  000D                     __end_ofsetCursorPos@ln3:	
   255  000D                     setCursorPos@ln2:	
   256  000D  34D0               	retlw	208
   257  000E  3400               	retlw	0
   258  000F                     __end_ofsetCursorPos@ln2:	
   259  000F                     setCursorPos@ln1:	
   260  000F  34C0               	retlw	192
   261  0010  3400               	retlw	0
   262  0011                     __end_ofsetCursorPos@ln1:	
   263  0008                     _PORTD	set	8
   264  0038                     _RC0	set	56
   265  002B                     _RA3	set	43
   266  002C                     _RA4	set	44
   267  002D                     _RA5	set	45
   268  002A                     _RA2	set	42
   269  0087                     _TRISC	set	135
   270  0088                     _TRISD	set	136
   271  0085                     _TRISA	set	133
   272  009F                     _ADCON1	set	159
   273  0438                     _TRISC0	set	1080
   274                           
   275                           ; #config settings
   276  0000                     
   277                           	psect	cinit
   278  07E3                     start_initialization:	
   279  07E3                     __initialization:	
   280                           
   281                           ; Initialize objects allocated to BANK0
   282  07E3  1383               	bcf	3,7	;select IRP bank0
   283  07E4  303E               	movlw	low (__pdataBANK0+30)
   284  07E5  00FD               	movwf	btemp+-1
   285  07E6  3004               	movlw	high __pidataBANK0
   286  07E7  00FE               	movwf	btemp
   287  07E8  3093               	movlw	low __pidataBANK0
   288  07E9  00FF               	movwf	btemp+1
   289  07EA  3020               	movlw	low __pdataBANK0
   290  07EB  0084               	movwf	4
   291  07EC  120A  118A  2411   	fcall	init_ram0
   292                           
   293                           ; Clear objects allocated to BANK0
   294  07EF  01BE               	clrf	__pbssBANK0& (0+127)
   295  07F0  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   296  07F1  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   297  07F2  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   298  07F3  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   299  07F4  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   300  07F5  01C4               	clrf	(__pbssBANK0+6)& (0+127)
   301  07F6  01C5               	clrf	(__pbssBANK0+7)& (0+127)
   302  07F7  01C6               	clrf	(__pbssBANK0+8)& (0+127)
   303  07F8  01C7               	clrf	(__pbssBANK0+9)& (0+127)
   304  07F9  01C8               	clrf	(__pbssBANK0+10)& (0+127)
   305  07FA  01C9               	clrf	(__pbssBANK0+11)& (0+127)
   306  07FB  01CA               	clrf	(__pbssBANK0+12)& (0+127)
   307  07FC                     end_of_initialization:	
   308                           ;End of C runtime variable initialization code
   309                           
   310  07FC                     __end_of__initialization:	
   311  07FC  0183               	clrf	3
   312  07FD  120A  118A  2C75   	ljmp	_main	;jump to C main() function
   313                           
   314                           	psect	bssBANK0
   315  003E                     __pbssBANK0:	
   316  003E                     _wd:	
   317  003E                     	ds	2
   318  0040                     read_byte@j:	
   319  0040                     	ds	1
   320  0041                     _pt10000:	
   321  0041                     	ds	1
   322  0042                     _pt1000:	
   323  0042                     	ds	1
   324  0043                     _pt100:	
   325  0043                     	ds	1
   326  0044                     _pt10:	
   327  0044                     	ds	1
   328  0045                     _intEntries:	
   329  0045                     	ds	1
   330  0046                     _tens:	
   331  0046                     	ds	1
   332  0047                     _TX:	
   333  0047                     	ds	1
   334  0048                     _TZ:	
   335  0048                     	ds	1
   336  0049                     _THV:	
   337  0049                     	ds	1
   338  004A                     _TLV:	
   339  004A                     	ds	1
   340                           
   341                           	psect	dataBANK0
   342  0020                     __pdataBANK0:	
   343  0020                     _table:	
   344  0020                     	ds	10
   345  002A                     _tUKus:	
   346  002A                     	ds	4
   347  002E                     _t63us:	
   348  002E                     	ds	4
   349  0032                     _t70us:	
   350  0032                     	ds	4
   351  0036                     _t430us:	
   352  0036                     	ds	4
   353  003A                     _t503us:	
   354  003A                     	ds	4
   355                           
   356                           	psect	inittext
   357  040D                     init_fetch0:	
   358                           ;	Called with low address in FSR and high address in W
   359                           
   360  040D  087E               	movf	126,w
   361  040E  008A               	movwf	10
   362  040F  087F               	movf	127,w
   363  0410  0082               	movwf	2
   364  0411                     init_ram0:	
   365                           ;Called with:
   366                           ;	high address of idata address in btemp 
   367                           ;	low address of idata address in btemp+1 
   368                           ;	low address of data in FSR
   369                           ;	high address + 1 of data in btemp-1
   370                           
   371  0411  240D  120A  118A   	fcall	init_fetch0
   372  0414  0080               	movwf	0
   373  0415  0A84               	incf	4,f
   374  0416  0804               	movf	4,w
   375  0417  067D               	xorwf	125,w
   376  0418  1903               	btfsc	3,2
   377  0419  3400               	retlw	0
   378  041A  0AFF               	incf	127,f
   379  041B  1903               	btfsc	3,2
   380  041C  0AFE               	incf	126,f
   381  041D  2C11               	goto	init_ram0
   382                           
   383                           	psect	cstackCOMMON
   384  0070                     __pcstackCOMMON:	
   385  0070                     ?_writecmd:	
   386  0070                     ?_delay:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_init:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ??_init:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ?_lcd_init:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_writechar:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_delay2:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ??_delay2:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_write_byte:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_read_byte:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_display_temp:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_reset:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_main:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_get_temp:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?___awdiv:	
   426                           ; 2 bytes @ 0x0
   427                           
   428  0070                     ?___awmod:	
   429                           ; 2 bytes @ 0x0
   430                           
   431  0070                     ?___lwmod:	
   432                           ; 2 bytes @ 0x0
   433                           
   434  0070                     delay@t:	
   435                           ; 2 bytes @ 0x0
   436                           
   437  0070                     ___awdiv@divisor:	
   438                           ; 2 bytes @ 0x0
   439                           
   440  0070                     ___awmod@divisor:	
   441                           ; 2 bytes @ 0x0
   442                           
   443  0070                     ___lwmod@divisor:	
   444                           ; 2 bytes @ 0x0
   445                           
   446                           
   447                           ; 2 bytes @ 0x0
   448  0070                     	ds	1
   449  0071                     delay2@x:	
   450                           
   451                           ; 1 bytes @ 0x1
   452  0071                     	ds	1
   453  0072                     ??_delay:	
   454  0072                     delay2@y:	
   455                           ; 1 bytes @ 0x2
   456                           
   457  0072                     ___awdiv@dividend:	
   458                           ; 1 bytes @ 0x2
   459                           
   460  0072                     ___awmod@dividend:	
   461                           ; 2 bytes @ 0x2
   462                           
   463  0072                     ___lwmod@dividend:	
   464                           ; 2 bytes @ 0x2
   465                           
   466                           
   467                           ; 2 bytes @ 0x2
   468  0072                     	ds	1
   469  0073                     delay2@z:	
   470  0073                     delay@i:	
   471                           ; 1 bytes @ 0x3
   472                           
   473                           
   474                           ; 2 bytes @ 0x3
   475  0073                     	ds	1
   476  0074                     ??___awdiv:	
   477  0074                     ??___awmod:	
   478                           ; 1 bytes @ 0x4
   479                           
   480  0074                     ??___lwmod:	
   481                           ; 1 bytes @ 0x4
   482                           
   483  0074                     delay2@t:	
   484                           ; 1 bytes @ 0x4
   485                           
   486                           
   487                           ; 1 bytes @ 0x4
   488  0074                     	ds	1
   489  0075                     ??_writecmd:	
   490  0075                     ??_writechar:	
   491                           ; 1 bytes @ 0x5
   492                           
   493  0075                     ??_write_byte:	
   494                           ; 1 bytes @ 0x5
   495                           
   496  0075                     ??_read_byte:	
   497                           ; 1 bytes @ 0x5
   498                           
   499  0075                     ??_reset:	
   500                           ; 1 bytes @ 0x5
   501                           
   502  0075                     writechar@x:	
   503                           ; 1 bytes @ 0x5
   504                           
   505  0075                     writecmd@x:	
   506                           ; 1 bytes @ 0x5
   507                           
   508  0075                     reset@presence:	
   509                           ; 1 bytes @ 0x5
   510                           
   511  0075                     ___awdiv@counter:	
   512                           ; 1 bytes @ 0x5
   513                           
   514  0075                     ___awmod@counter:	
   515                           ; 1 bytes @ 0x5
   516                           
   517  0075                     ___lwmod@counter:	
   518                           ; 1 bytes @ 0x5
   519                           
   520                           
   521                           ; 1 bytes @ 0x5
   522  0075                     	ds	1
   523  0076                     ??_lcd_init:	
   524  0076                     ?_writeInt:	
   525                           ; 1 bytes @ 0x6
   526                           
   527  0076                     ?___lwdiv:	
   528                           ; 1 bytes @ 0x6
   529                           
   530  0076                     read_byte@value:	
   531                           ; 2 bytes @ 0x6
   532                           
   533  0076                     ___awdiv@sign:	
   534                           ; 1 bytes @ 0x6
   535                           
   536  0076                     ___awmod@sign:	
   537                           ; 1 bytes @ 0x6
   538                           
   539  0076                     writeInt@x:	
   540                           ; 1 bytes @ 0x6
   541                           
   542  0076                     ___lwdiv@divisor:	
   543                           ; 2 bytes @ 0x6
   544                           
   545                           
   546                           ; 2 bytes @ 0x6
   547  0076                     	ds	1
   548  0077                     write_byte@temp:	
   549  0077                     read_byte@i:	
   550                           ; 1 bytes @ 0x7
   551                           
   552  0077                     ___awdiv@quotient:	
   553                           ; 1 bytes @ 0x7
   554                           
   555                           
   556                           ; 2 bytes @ 0x7
   557  0077                     	ds	1
   558  0078                     ??_writeInt:	
   559  0078                     write_byte@val:	
   560                           ; 1 bytes @ 0x8
   561                           
   562  0078                     ___lwdiv@dividend:	
   563                           ; 1 bytes @ 0x8
   564                           
   565                           
   566                           ; 2 bytes @ 0x8
   567  0078                     	ds	1
   568  0079                     write_byte@i:	
   569                           
   570                           ; 1 bytes @ 0x9
   571  0079                     	ds	1
   572  007A                     ??_get_temp:	
   573  007A                     ??___lwdiv:	
   574                           ; 1 bytes @ 0xA
   575                           
   576                           
   577                           ; 1 bytes @ 0xA
   578  007A                     	ds	1
   579  007B                     ___lwdiv@quotient:	
   580                           
   581                           ; 2 bytes @ 0xB
   582  007B                     	ds	2
   583  007D                     ___lwdiv@counter:	
   584                           
   585                           ; 1 bytes @ 0xD
   586  007D                     	ds	1
   587  007E                     ??_main:	
   588                           
   589                           	psect	cstackBANK0
   590  004B                     __pcstackBANK0:	
   591                           ; 1 bytes @ 0xE
   592                           
   593  004B                     ??_display_temp:	
   594                           
   595                           ; 1 bytes @ 0x0
   596  004B                     	ds	3
   597                           
   598                           	psect	maintext
   599  0475                     __pmaintext:	
   600 ;;
   601 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   602 ;;
   603 ;; *************** function _main *****************
   604 ;; Defined at:
   605 ;;		line 323 in file "newmain.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : B00/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0
   622 ;;      Totals:         0       0       0       0       0
   623 ;;Total ram usage:        0 bytes
   624 ;; Hardware stack levels required when called:    4
   625 ;; This function calls:
   626 ;;		_delay
   627 ;;		_display_temp
   628 ;;		_get_temp
   629 ;;		_init
   630 ;;		_lcd_init
   631 ;; This function is called by:
   632 ;;		Startup code after reset
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _main
   638  0475                     _main:	
   639                           
   640                           ;newmain.c: 324:     init();
   641                           
   642                           ;incstack = 0
   643                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   644  0475  120A  118A  23F1  120A  118A  	fcall	_init
   645                           
   646                           ;newmain.c: 325:     lcd_init();
   647  047A  120A  118A  23FC  120A  118A  	fcall	_lcd_init
   648  047F                     l1530:	
   649                           
   650                           ;newmain.c: 327:         get_temp();
   651  047F  120A  118A  2650  120A  118A  	fcall	_get_temp
   652                           
   653                           ;newmain.c: 328:         display_temp();
   654  0484  120A  118A  26B0  120A  118A  	fcall	_display_temp
   655                           
   656                           ;newmain.c: 330:         delay(10000);
   657  0489  3010               	movlw	16
   658  048A  00F0               	movwf	delay@t
   659  048B  3027               	movlw	39
   660  048C  00F1               	movwf	delay@t+1
   661  048D  120A  118A  2444  120A  118A  	fcall	_delay
   662  0492  2C7F               	goto	l1530
   663  0493                     __end_of_main:	
   664                           
   665                           	psect	text1
   666  03FC                     __ptext1:	
   667 ;; *************** function _lcd_init *****************
   668 ;; Defined at:
   669 ;;		line 67 in file "newmain.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;		None
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, status,2, status,0, pclath, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   683 ;;      Params:         0       0       0       0       0
   684 ;;      Locals:         0       0       0       0       0
   685 ;;      Temps:          0       0       0       0       0
   686 ;;      Totals:         0       0       0       0       0
   687 ;;Total ram usage:        0 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; Hardware stack levels required when called:    2
   690 ;; This function calls:
   691 ;;		_writecmd
   692 ;; This function is called by:
   693 ;;		_main
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           
   698                           ;psect for function _lcd_init
   699  03FC                     _lcd_init:	
   700                           
   701                           ;newmain.c: 68:     writecmd(0x0F);
   702                           
   703                           ;incstack = 0
   704                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   705  03FC  300F               	movlw	15
   706  03FD  120A  118A  2431  120A  118A  	fcall	_writecmd
   707                           
   708                           ;newmain.c: 69:     writecmd(0x38);
   709  0402  3038               	movlw	56
   710  0403  120A  118A  2431  120A  118A  	fcall	_writecmd
   711                           
   712                           ;newmain.c: 70:     writecmd(0x01);
   713  0408  3001               	movlw	1
   714  0409  120A  118A  2431   	fcall	_writecmd
   715  040C  0008               	return
   716  040D                     __end_of_lcd_init:	
   717                           
   718                           	psect	text2
   719  03F1                     __ptext2:	
   720 ;; *************** function _init *****************
   721 ;; Defined at:
   722 ;;		line 56 in file "newmain.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0
   739 ;;      Totals:         0       0       0       0       0
   740 ;;Total ram usage:        0 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _init
   751  03F1                     _init:	
   752                           
   753                           ;newmain.c: 57:     ADCON1 = 0X07;
   754                           
   755                           ;incstack = 0
   756                           ; Regs used in _init: [wreg+status,2]
   757  03F1  3007               	movlw	7
   758  03F2  1683               	bsf	3,5	;RP0=1, select bank1
   759  03F3  1303               	bcf	3,6	;RP1=0, select bank1
   760  03F4  009F               	movwf	31	;volatile
   761                           
   762                           ;newmain.c: 58:     TRISA = 0X00;
   763  03F5  0185               	clrf	5	;volatile
   764                           
   765                           ;newmain.c: 59:     TRISD = 0X00;
   766  03F6  0188               	clrf	8	;volatile
   767                           
   768                           ;newmain.c: 60:     TRISC = 0x00;
   769  03F7  0187               	clrf	7	;volatile
   770                           
   771                           ;newmain.c: 61:     RA2 = 1;
   772  03F8  1283               	bcf	3,5	;RP0=0, select bank0
   773  03F9  1303               	bcf	3,6	;RP1=0, select bank0
   774  03FA  1505               	bsf	5,2	;volatile
   775  03FB  0008               	return
   776  03FC                     __end_of_init:	
   777                           
   778                           	psect	text3
   779  0650                     __ptext3:	
   780 ;; *************** function _get_temp *****************
   781 ;; Defined at:
   782 ;;		line 294 in file "newmain.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;		None
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  i               2    0        int 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  2  151[None  ] int 
   789 ;; Registers used:
   790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   796 ;;      Params:         0       0       0       0       0
   797 ;;      Locals:         0       0       0       0       0
   798 ;;      Temps:          4       0       0       0       0
   799 ;;      Totals:         4       0       0       0       0
   800 ;;Total ram usage:        4 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; Hardware stack levels required when called:    2
   803 ;; This function calls:
   804 ;;		_delay
   805 ;;		_read_byte
   806 ;;		_reset
   807 ;;		_write_byte
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           
   814                           ;psect for function _get_temp
   815  0650                     _get_temp:	
   816                           
   817                           ;newmain.c: 299:     int i;;newmain.c: 300:     TRISC0 = 1;
   818                           
   819                           ;incstack = 0
   820                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   821  0650  1683               	bsf	3,5	;RP0=1, select bank1
   822  0651  1303               	bcf	3,6	;RP1=0, select bank1
   823  0652  1407               	bsf	7,0	;volatile
   824                           
   825                           ;newmain.c: 301:     reset();
   826  0653  120A  118A  24B1  120A  118A  	fcall	_reset
   827                           
   828                           ;newmain.c: 302:     write_byte(0XCC);
   829  0658  30CC               	movlw	204
   830  0659  120A  118A  253D  120A  118A  	fcall	_write_byte
   831                           
   832                           ;newmain.c: 303:     write_byte(0X44);
   833  065E  3044               	movlw	68
   834  065F  120A  118A  253D  120A  118A  	fcall	_write_byte
   835                           
   836                           ;newmain.c: 308:     delay(20000);
   837  0664  3020               	movlw	32
   838  0665  00F0               	movwf	delay@t
   839  0666  304E               	movlw	78
   840  0667  00F1               	movwf	delay@t+1
   841  0668  120A  118A  2444  120A  118A  	fcall	_delay
   842                           
   843                           ;newmain.c: 310:     reset();
   844  066D  120A  118A  24B1  120A  118A  	fcall	_reset
   845                           
   846                           ;newmain.c: 311:     write_byte(0XCC);
   847  0672  30CC               	movlw	204
   848  0673  120A  118A  253D  120A  118A  	fcall	_write_byte
   849                           
   850                           ;newmain.c: 312:     write_byte(0XBE);
   851  0678  30BE               	movlw	190
   852  0679  120A  118A  253D  120A  118A  	fcall	_write_byte
   853                           
   854                           ;newmain.c: 313:     TLV = read_byte();
   855  067E  120A  118A  24DA  120A  118A  	fcall	_read_byte
   856  0683  00FA               	movwf	??_get_temp
   857  0684  087A               	movf	??_get_temp,w
   858  0685  1283               	bcf	3,5	;RP0=0, select bank0
   859  0686  1303               	bcf	3,6	;RP1=0, select bank0
   860  0687  00CA               	movwf	_TLV
   861                           
   862                           ;newmain.c: 314:     THV = read_byte();
   863  0688  120A  118A  24DA  120A  118A  	fcall	_read_byte
   864  068D  00FA               	movwf	??_get_temp
   865  068E  087A               	movf	??_get_temp,w
   866  068F  1283               	bcf	3,5	;RP0=0, select bank0
   867  0690  1303               	bcf	3,6	;RP1=0, select bank0
   868  0691  00C9               	movwf	_THV
   869                           
   870                           ;newmain.c: 315:     TRISC0 = 1;
   871  0692  1683               	bsf	3,5	;RP0=1, select bank1
   872  0693  1303               	bcf	3,6	;RP1=0, select bank1
   873  0694  1407               	bsf	7,0	;volatile
   874                           
   875                           ;newmain.c: 316:     TZ = (TLV >> 4) | ((THV << 4)&0X3f);
   876  0695  1283               	bcf	3,5	;RP0=0, select bank0
   877  0696  1303               	bcf	3,6	;RP1=0, select bank0
   878  0697  0849               	movf	_THV,w
   879  0698  00FA               	movwf	??_get_temp
   880  0699  3004               	movlw	4
   881  069A                     u1015:	
   882  069A  1003               	clrc
   883  069B  0DFA               	rlf	??_get_temp,f
   884  069C  3EFF               	addlw	-1
   885  069D  1D03               	skipz
   886  069E  2E9A               	goto	u1015
   887  069F  303F               	movlw	63
   888  06A0  057A               	andwf	??_get_temp,w
   889  06A1  00FB               	movwf	??_get_temp+1
   890  06A2  084A               	movf	_TLV,w
   891  06A3  00FC               	movwf	??_get_temp+2
   892  06A4  3004               	movlw	4
   893  06A5                     u1025:	
   894  06A5  1003               	clrc
   895  06A6  0CFC               	rrf	??_get_temp+2,f
   896  06A7  3EFF               	addlw	-1
   897  06A8  1D03               	skipz
   898  06A9  2EA5               	goto	u1025
   899  06AA  087C               	movf	??_get_temp+2,w
   900  06AB  047B               	iorwf	??_get_temp+1,w
   901  06AC  00FD               	movwf	??_get_temp+3
   902  06AD  087D               	movf	??_get_temp+3,w
   903  06AE  00C8               	movwf	_TZ
   904  06AF  0008               	return
   905  06B0                     __end_of_get_temp:	
   906                           
   907                           	psect	text4
   908  053D                     __ptext4:	
   909 ;; *************** function _write_byte *****************
   910 ;; Defined at:
   911 ;;		line 161 in file "newmain.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  val             1    wreg     unsigned char 
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  val             1    8[COMMON] unsigned char 
   916 ;;  i               1    9[COMMON] unsigned char 
   917 ;;  temp            1    7[COMMON] unsigned char 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   927 ;;      Params:         0       0       0       0       0
   928 ;;      Locals:         3       0       0       0       0
   929 ;;      Temps:          2       0       0       0       0
   930 ;;      Totals:         5       0       0       0       0
   931 ;;Total ram usage:        5 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; Hardware stack levels required when called:    1
   934 ;; This function calls:
   935 ;;		_delay2
   936 ;; This function is called by:
   937 ;;		_get_temp
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           
   942                           ;psect for function _write_byte
   943  053D                     _write_byte:	
   944                           
   945                           ;incstack = 0
   946                           ; Regs used in _write_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   947                           ;write_byte@val stored from wreg
   948  053D  00F8               	movwf	write_byte@val
   949                           
   950                           ;newmain.c: 162:     unsigned char i;;newmain.c: 163:     unsigned char temp;;newmain.c:
      +                           166:     for (i = 8; i > 0; i--) {
   951  053E  3008               	movlw	8
   952  053F  00F5               	movwf	??_write_byte
   953  0540  0875               	movf	??_write_byte,w
   954  0541  00F9               	movwf	write_byte@i
   955  0542                     l1194:	
   956                           
   957                           ;newmain.c: 167:         temp = val & 0x01;
   958  0542  0878               	movf	write_byte@val,w
   959  0543  3901               	andlw	1
   960  0544  00F5               	movwf	??_write_byte
   961  0545  0875               	movf	??_write_byte,w
   962  0546  00F7               	movwf	write_byte@temp
   963                           
   964                           ;newmain.c: 168:         RC0 = 0; TRISC0 = 0;
   965  0547  1283               	bcf	3,5	;RP0=0, select bank0
   966  0548  1303               	bcf	3,6	;RP1=0, select bank0
   967  0549  1007               	bcf	7,0	;volatile
   968  054A  1683               	bsf	3,5	;RP0=1, select bank1
   969  054B  1303               	bcf	3,6	;RP1=0, select bank1
   970  054C  1007               	bcf	7,0	;volatile
   971                           
   972                           ;newmain.c: 169:         __nop();
   973  054D  0000               	nop
   974                           
   975                           ;newmain.c: 170:         __nop();
   976  054E  0000               	nop
   977                           
   978                           ;newmain.c: 171:         __nop();
   979  054F  0000               	nop
   980                           
   981                           ;newmain.c: 172:         __nop();
   982  0550  0000               	nop
   983                           
   984                           ;newmain.c: 173:         __nop();
   985  0551  0000               	nop
   986                           
   987                           ;newmain.c: 175:         if (temp == 1) {
   988  0552  0377               	decf	write_byte@temp,w
   989  0553  1D03               	btfss	3,2
   990  0554  2D58               	goto	l1214
   991                           
   992                           ;newmain.c: 176:             TRISC0 = 1;
   993  0555  1683               	bsf	3,5	;RP0=1, select bank1
   994  0556  1303               	bcf	3,6	;RP1=0, select bank1
   995  0557  1407               	bsf	7,0	;volatile
   996  0558                     l1214:	
   997                           
   998                           ;newmain.c: 178:         delay2(t63us);
   999  0558  302E               	movlw	(low (_t63us| 0))& (0+255)
  1000  0559  120A  118A  2459  120A  118A  	fcall	_delay2
  1001                           
  1002                           ;newmain.c: 179:         TRISC0 = 1;
  1003  055E  1683               	bsf	3,5	;RP0=1, select bank1
  1004  055F  1303               	bcf	3,6	;RP1=0, select bank1
  1005  0560  1407               	bsf	7,0	;volatile
  1006                           
  1007                           ;newmain.c: 180:         __nop();
  1008  0561  0000               	nop
  1009                           
  1010                           ;newmain.c: 181:         __nop();
  1011  0562  0000               	nop
  1012                           
  1013                           ;newmain.c: 182:         val = val >> 1;
  1014  0563  0878               	movf	write_byte@val,w
  1015  0564  00F5               	movwf	??_write_byte
  1016  0565  1003               	clrc
  1017  0566  0C75               	rrf	??_write_byte,w
  1018  0567  00F6               	movwf	??_write_byte+1
  1019  0568  0876               	movf	??_write_byte+1,w
  1020  0569  00F8               	movwf	write_byte@val
  1021                           
  1022                           ;newmain.c: 183:     }
  1023  056A  3001               	movlw	1
  1024  056B  02F9               	subwf	write_byte@i,f
  1025  056C  0879               	movf	write_byte@i,w
  1026  056D  1903               	btfsc	3,2
  1027  056E  0008               	return
  1028  056F  2D42               	goto	l1194
  1029  0570                     __end_of_write_byte:	
  1030                           
  1031                           	psect	text5
  1032  04B1                     __ptext5:	
  1033 ;; *************** function _reset *****************
  1034 ;; Defined at:
  1035 ;;		line 278 in file "newmain.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  presence        1    5[COMMON] unsigned char 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       0       0       0       0
  1050 ;;      Locals:         1       0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0
  1052 ;;      Totals:         1       0       0       0       0
  1053 ;;Total ram usage:        1 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    1
  1056 ;; This function calls:
  1057 ;;		_delay2
  1058 ;; This function is called by:
  1059 ;;		_get_temp
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           
  1064                           ;psect for function _reset
  1065  04B1                     _reset:	
  1066                           
  1067                           ;newmain.c: 279:     char presence = 1;
  1068                           
  1069                           ;incstack = 0
  1070                           ; Regs used in _reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1071  04B1  01F5               	clrf	reset@presence
  1072  04B2  0AF5               	incf	reset@presence,f
  1073  04B3                     l1296:	
  1074                           ;newmain.c: 280:     while (presence) {
  1075                           
  1076                           
  1077                           ;newmain.c: 280:     while (presence) {
  1078  04B3  0875               	movf	reset@presence,w
  1079  04B4  1903               	btfsc	3,2
  1080  04B5  0008               	return
  1081                           
  1082                           ;newmain.c: 281:         RC0 = 0; TRISC0 = 0;
  1083  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1084  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  1085  04B8  1007               	bcf	7,0	;volatile
  1086  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  1087  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  1088  04BB  1007               	bcf	7,0	;volatile
  1089                           
  1090                           ;newmain.c: 282:         delay2(t503us);
  1091  04BC  303A               	movlw	(low (_t503us| 0))& (0+255)
  1092  04BD  120A  118A  2459  120A  118A  	fcall	_delay2
  1093                           
  1094                           ;newmain.c: 283:         TRISC0 = 1;
  1095  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  1096  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  1097  04C4  1407               	bsf	7,0	;volatile
  1098                           
  1099                           ;newmain.c: 284:         delay2(t70us);
  1100  04C5  3032               	movlw	(low (_t70us| 0))& (0+255)
  1101  04C6  120A  118A  2459  120A  118A  	fcall	_delay2
  1102                           
  1103                           ;newmain.c: 285:         if (RC0 == 1) {
  1104  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  1105  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  1106  04CD  1C07               	btfss	7,0	;volatile
  1107  04CE  2CD2               	goto	l1292
  1108                           
  1109                           ;newmain.c: 286:             presence = 1;
  1110  04CF  01F5               	clrf	reset@presence
  1111  04D0  0AF5               	incf	reset@presence,f
  1112                           
  1113                           ;newmain.c: 287:         } else {
  1114  04D1  2CD3               	goto	l1294
  1115  04D2                     l1292:	
  1116                           
  1117                           ;newmain.c: 288:             presence = 0;
  1118  04D2  01F5               	clrf	reset@presence
  1119  04D3                     l1294:	
  1120                           
  1121                           ;newmain.c: 290:         delay2(t430us);
  1122  04D3  3036               	movlw	(low (_t430us| 0))& (0+255)
  1123  04D4  120A  118A  2459  120A  118A  	fcall	_delay2
  1124  04D9  2CB3               	goto	l1296
  1125  04DA                     __end_of_reset:	
  1126                           
  1127                           	psect	text6
  1128  04DA                     __ptext6:	
  1129 ;; *************** function _read_byte *****************
  1130 ;; Defined at:
  1131 ;;		line 186 in file "newmain.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  i               1    7[COMMON] unsigned char 
  1136 ;;  value           1    6[COMMON] unsigned char 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      unsigned char 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       0       0       0       0
  1147 ;;      Locals:         2       0       0       0       0
  1148 ;;      Temps:          1       0       0       0       0
  1149 ;;      Totals:         3       0       0       0       0
  1150 ;;Total ram usage:        3 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    1
  1153 ;; This function calls:
  1154 ;;		_delay2
  1155 ;; This function is called by:
  1156 ;;		_get_temp
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           
  1161                           ;psect for function _read_byte
  1162  04DA                     _read_byte:	
  1163                           
  1164                           ;newmain.c: 187:     unsigned char i;;newmain.c: 188:     unsigned char value = 0;
  1165                           
  1166                           ;incstack = 0
  1167                           ; Regs used in _read_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1168  04DA  01F6               	clrf	read_byte@value
  1169                           
  1170                           ;newmain.c: 189:     static char j;;newmain.c: 191:     for (i = 8; i > 0; i--) {
  1171  04DB  3008               	movlw	8
  1172  04DC  00F5               	movwf	??_read_byte
  1173  04DD  0875               	movf	??_read_byte,w
  1174  04DE  00F7               	movwf	read_byte@i
  1175  04DF                     l1236:	
  1176                           
  1177                           ;newmain.c: 192:         value >>= 1;
  1178  04DF  1003               	clrc
  1179  04E0  0CF6               	rrf	read_byte@value,f
  1180                           
  1181                           ;newmain.c: 193:         RC0 = 0; TRISC0 = 0;
  1182  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  1183  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  1184  04E3  1007               	bcf	7,0	;volatile
  1185  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  1186  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  1187  04E6  1007               	bcf	7,0	;volatile
  1188                           
  1189                           ;newmain.c: 194:         __nop();
  1190  04E7  0000               	nop
  1191                           
  1192                           ;newmain.c: 195:         __nop();
  1193  04E8  0000               	nop
  1194                           
  1195                           ;newmain.c: 196:         __nop();
  1196  04E9  0000               	nop
  1197                           
  1198                           ;newmain.c: 197:         __nop();
  1199  04EA  0000               	nop
  1200                           
  1201                           ;newmain.c: 198:         __nop();
  1202  04EB  0000               	nop
  1203                           
  1204                           ;newmain.c: 199:         __nop();
  1205  04EC  0000               	nop
  1206                           
  1207                           ;newmain.c: 200:         TRISC0 = 1;
  1208  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  1209  04EE  1303               	bcf	3,6	;RP1=0, select bank1
  1210  04EF  1407               	bsf	7,0	;volatile
  1211                           
  1212                           ;newmain.c: 201:         __nop();
  1213  04F0  0000               	nop
  1214                           
  1215                           ;newmain.c: 202:         __nop();
  1216  04F1  0000               	nop
  1217                           
  1218                           ;newmain.c: 203:         __nop();
  1219  04F2  0000               	nop
  1220                           
  1221                           ;newmain.c: 204:         __nop();
  1222  04F3  0000               	nop
  1223                           
  1224                           ;newmain.c: 205:         __nop();
  1225  04F4  0000               	nop
  1226                           
  1227                           ;newmain.c: 206:         j = RC0;
  1228  04F5  3000               	movlw	0
  1229  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  1230  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  1231  04F8  1807               	btfsc	7,0	;volatile
  1232  04F9  3001               	movlw	1
  1233  04FA  00C0               	movwf	read_byte@j
  1234                           
  1235                           ;newmain.c: 207:         if (j) value |= 0x80;
  1236  04FB  0840               	movf	read_byte@j,w
  1237  04FC  1D03               	btfss	3,2
  1238  04FD  17F6               	bsf	read_byte@value,7
  1239                           
  1240                           ;newmain.c: 208:         delay2(t63us);
  1241  04FE  302E               	movlw	(low (_t63us| 0))& (0+255)
  1242  04FF  120A  118A  2459  120A  118A  	fcall	_delay2
  1243                           
  1244                           ;newmain.c: 209:     }
  1245  0504  3001               	movlw	1
  1246  0505  02F7               	subwf	read_byte@i,f
  1247  0506  0877               	movf	read_byte@i,w
  1248  0507  1D03               	btfss	3,2
  1249  0508  2CDF               	goto	l1236
  1250                           
  1251                           ;newmain.c: 210:     return (value);
  1252  0509  0876               	movf	read_byte@value,w
  1253  050A  0008               	return
  1254  050B                     __end_of_read_byte:	
  1255                           
  1256                           	psect	text7
  1257  0459                     __ptext7:	
  1258 ;; *************** function _delay2 *****************
  1259 ;; Defined at:
  1260 ;;		line 148 in file "newmain.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  t               1    wreg     PTR int 
  1263 ;;		 -> t430us(4), t70us(4), t503us(4), t63us(4), 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  t               1    4[COMMON] PTR int 
  1266 ;;		 -> t430us(4), t70us(4), t503us(4), t63us(4), 
  1267 ;;  z               1    3[COMMON] unsigned char 
  1268 ;;  y               1    2[COMMON] unsigned char 
  1269 ;;  x               1    1[COMMON] unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1279 ;;      Params:         0       0       0       0       0
  1280 ;;      Locals:         4       0       0       0       0
  1281 ;;      Temps:          1       0       0       0       0
  1282 ;;      Totals:         5       0       0       0       0
  1283 ;;Total ram usage:        5 bytes
  1284 ;; Hardware stack levels used:    1
  1285 ;; This function calls:
  1286 ;;		Nothing
  1287 ;; This function is called by:
  1288 ;;		_write_byte
  1289 ;;		_read_byte
  1290 ;;		_reset
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           
  1295                           ;psect for function _delay2
  1296  0459                     _delay2:	
  1297                           
  1298                           ;incstack = 0
  1299                           ; Regs used in _delay2: [wreg-fsr0h+status,2+status,0]
  1300                           ;delay2@t stored from wreg
  1301  0459  00F4               	movwf	delay2@t
  1302                           
  1303                           ;newmain.c: 149:     char x = t[0];
  1304  045A  0874               	movf	delay2@t,w
  1305  045B  0084               	movwf	4
  1306  045C  1383               	bcf	3,7	;select IRP bank0
  1307  045D  0800               	movf	0,w
  1308  045E  00F0               	movwf	??_delay2
  1309  045F  0870               	movf	??_delay2,w
  1310  0460  00F1               	movwf	delay2@x
  1311                           
  1312                           ;newmain.c: 150:     char y = t[1];
  1313  0461  0874               	movf	delay2@t,w
  1314  0462  3E02               	addlw	2
  1315  0463  0084               	movwf	4
  1316  0464  0800               	movf	0,w
  1317  0465  00F0               	movwf	??_delay2
  1318  0466  0870               	movf	??_delay2,w
  1319  0467  00F2               	movwf	delay2@y
  1320  0468                     l1172:	
  1321                           
  1322                           ;newmain.c: 154:         z = y;
  1323  0468  0872               	movf	delay2@y,w
  1324  0469  00F0               	movwf	??_delay2
  1325  046A  0870               	movf	??_delay2,w
  1326  046B  00F3               	movwf	delay2@z
  1327  046C                     l117:	
  1328                           ;newmain.c: 155:         do {
  1329                           
  1330                           
  1331                           ;newmain.c: 157:         } while (--z);
  1332  046C  3001               	movlw	1
  1333  046D  02F3               	subwf	delay2@z,f
  1334  046E  1D03               	btfss	3,2
  1335  046F  2C6C               	goto	l117
  1336                           
  1337                           ;newmain.c: 158:     } while (--x);
  1338  0470  3001               	movlw	1
  1339  0471  02F1               	subwf	delay2@x,f
  1340  0472  1903               	btfsc	3,2
  1341  0473  0008               	return
  1342  0474  2C68               	goto	l1172
  1343  0475                     __end_of_delay2:	
  1344                           
  1345                           	psect	text8
  1346  06B0                     __ptext8:	
  1347 ;; *************** function _display_temp *****************
  1348 ;; Defined at:
  1349 ;;		line 213 in file "newmain.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;		None
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, status,2, status,0, pclath, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1363 ;;      Params:         0       0       0       0       0
  1364 ;;      Locals:         0       0       0       0       0
  1365 ;;      Temps:          0       3       0       0       0
  1366 ;;      Totals:         0       3       0       0       0
  1367 ;;Total ram usage:        3 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:    3
  1370 ;; This function calls:
  1371 ;;		___awdiv
  1372 ;;		___awmod
  1373 ;;		___lwdiv
  1374 ;;		___lwmod
  1375 ;;		_delay
  1376 ;;		_writeInt
  1377 ;;		_writechar
  1378 ;;		_writecmd
  1379 ;; This function is called by:
  1380 ;;		_main
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           
  1385                           ;psect for function _display_temp
  1386  06B0                     _display_temp:	
  1387                           
  1388                           ;newmain.c: 214:     TX = TLV << 4;
  1389                           
  1390                           ;incstack = 0
  1391                           ; Regs used in _display_temp: [wreg+status,2+status,0+pclath+cstack]
  1392  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1393  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  1394  06B2  084A               	movf	_TLV,w
  1395  06B3  00CB               	movwf	??_display_temp
  1396  06B4  3003               	movlw	3
  1397  06B5                     u965:	
  1398  06B5  1003               	clrc
  1399  06B6  0DCB               	rlf	??_display_temp,f
  1400  06B7  3EFF               	addlw	-1
  1401  06B8  1D03               	skipz
  1402  06B9  2EB5               	goto	u965
  1403  06BA  1003               	clrc
  1404  06BB  0D4B               	rlf	??_display_temp,w
  1405  06BC  00CC               	movwf	??_display_temp+1
  1406  06BD  084C               	movf	??_display_temp+1,w
  1407  06BE  00C7               	movwf	_TX
  1408                           
  1409                           ;newmain.c: 215:     intEntries = TZ % 10;
  1410  06BF  300A               	movlw	10
  1411  06C0  00F0               	movwf	___awmod@divisor
  1412  06C1  3000               	movlw	0
  1413  06C2  00F1               	movwf	___awmod@divisor+1
  1414  06C3  0848               	movf	_TZ,w
  1415  06C4  00CB               	movwf	??_display_temp
  1416  06C5  01CC               	clrf	??_display_temp+1
  1417  06C6  084B               	movf	??_display_temp,w
  1418  06C7  00F2               	movwf	___awmod@dividend
  1419  06C8  084C               	movf	??_display_temp+1,w
  1420  06C9  00F3               	movwf	___awmod@dividend+1
  1421  06CA  120A  118A  25AC  120A  118A  	fcall	___awmod
  1422  06CF  0870               	movf	?___awmod,w
  1423  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1424  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1425  06D2  00CD               	movwf	??_display_temp+2
  1426  06D3  084D               	movf	??_display_temp+2,w
  1427  06D4  00C5               	movwf	_intEntries
  1428                           
  1429                           ;newmain.c: 216:     tens = TZ / 10;
  1430  06D5  300A               	movlw	10
  1431  06D6  00F0               	movwf	___awdiv@divisor
  1432  06D7  3000               	movlw	0
  1433  06D8  00F1               	movwf	___awdiv@divisor+1
  1434  06D9  0848               	movf	_TZ,w
  1435  06DA  00CB               	movwf	??_display_temp
  1436  06DB  01CC               	clrf	??_display_temp+1
  1437  06DC  084B               	movf	??_display_temp,w
  1438  06DD  00F2               	movwf	___awdiv@dividend
  1439  06DE  084C               	movf	??_display_temp+1,w
  1440  06DF  00F3               	movwf	___awdiv@dividend+1
  1441  06E0  120A  118A  25F7  120A  118A  	fcall	___awdiv
  1442  06E5  0870               	movf	?___awdiv,w
  1443  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  1444  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  1445  06E8  00CD               	movwf	??_display_temp+2
  1446  06E9  084D               	movf	??_display_temp+2,w
  1447  06EA  00C6               	movwf	_tens
  1448                           
  1449                           ;newmain.c: 217:     wd = 0;
  1450  06EB  01BE               	clrf	_wd
  1451  06EC  01BF               	clrf	_wd+1
  1452                           
  1453                           ;newmain.c: 218:     if (TX & 0x80) {
  1454  06ED  1FC7               	btfss	_TX,7
  1455  06EE  2EF7               	goto	l1442
  1456                           
  1457                           ;newmain.c: 219:         wd = wd + 5000;
  1458  06EF  083E               	movf	_wd,w
  1459  06F0  3E88               	addlw	136
  1460  06F1  00BE               	movwf	_wd
  1461  06F2  083F               	movf	_wd+1,w
  1462  06F3  1803               	skipnc
  1463  06F4  3E01               	addlw	1
  1464  06F5  3E13               	addlw	19
  1465  06F6  00BF               	movwf	_wd+1
  1466  06F7                     l1442:	
  1467                           
  1468                           ;newmain.c: 221:     if (TX & 0x40) {
  1469  06F7  1F47               	btfss	_TX,6
  1470  06F8  2F01               	goto	l1446
  1471                           
  1472                           ;newmain.c: 222:         wd = wd + 2500;
  1473  06F9  083E               	movf	_wd,w
  1474  06FA  3EC4               	addlw	196
  1475  06FB  00BE               	movwf	_wd
  1476  06FC  083F               	movf	_wd+1,w
  1477  06FD  1803               	skipnc
  1478  06FE  3E01               	addlw	1
  1479  06FF  3E09               	addlw	9
  1480  0700  00BF               	movwf	_wd+1
  1481  0701                     l1446:	
  1482                           
  1483                           ;newmain.c: 224:     if (TX & 0x20) {
  1484  0701  1EC7               	btfss	_TX,5
  1485  0702  2F0B               	goto	l1450
  1486                           
  1487                           ;newmain.c: 225:         wd = wd + 1250;
  1488  0703  083E               	movf	_wd,w
  1489  0704  3EE2               	addlw	226
  1490  0705  00BE               	movwf	_wd
  1491  0706  083F               	movf	_wd+1,w
  1492  0707  1803               	skipnc
  1493  0708  3E01               	addlw	1
  1494  0709  3E04               	addlw	4
  1495  070A  00BF               	movwf	_wd+1
  1496  070B                     l1450:	
  1497                           
  1498                           ;newmain.c: 227:     if (TX & 0x10) {
  1499  070B  1E47               	btfss	_TX,4
  1500  070C  2F15               	goto	l1454
  1501                           
  1502                           ;newmain.c: 228:         wd = wd + 625;
  1503  070D  083E               	movf	_wd,w
  1504  070E  3E71               	addlw	113
  1505  070F  00BE               	movwf	_wd
  1506  0710  083F               	movf	_wd+1,w
  1507  0711  1803               	skipnc
  1508  0712  3E01               	addlw	1
  1509  0713  3E02               	addlw	2
  1510  0714  00BF               	movwf	_wd+1
  1511  0715                     l1454:	
  1512                           
  1513                           ;newmain.c: 230:     pt10 = wd / 1000;
  1514  0715  30E8               	movlw	232
  1515  0716  00F6               	movwf	___lwdiv@divisor
  1516  0717  3003               	movlw	3
  1517  0718  00F7               	movwf	___lwdiv@divisor+1
  1518  0719  083F               	movf	_wd+1,w
  1519  071A  00F9               	movwf	___lwdiv@dividend+1
  1520  071B  083E               	movf	_wd,w
  1521  071C  00F8               	movwf	___lwdiv@dividend
  1522  071D  120A  118A  2570  120A  118A  	fcall	___lwdiv
  1523  0722  0876               	movf	?___lwdiv,w
  1524  0723  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0724  1303               	bcf	3,6	;RP1=0, select bank0
  1526  0725  00CB               	movwf	??_display_temp
  1527  0726  084B               	movf	??_display_temp,w
  1528  0727  00C4               	movwf	_pt10
  1529                           
  1530                           ;newmain.c: 231:     pt100 = (wd % 1000) / 100;
  1531  0728  3064               	movlw	100
  1532  0729  00F6               	movwf	___lwdiv@divisor
  1533  072A  3000               	movlw	0
  1534  072B  00F7               	movwf	___lwdiv@divisor+1
  1535  072C  083F               	movf	_wd+1,w
  1536  072D  00F3               	movwf	___lwmod@dividend+1
  1537  072E  083E               	movf	_wd,w
  1538  072F  00F2               	movwf	___lwmod@dividend
  1539  0730  30E8               	movlw	232
  1540  0731  00F0               	movwf	___lwmod@divisor
  1541  0732  3003               	movlw	3
  1542  0733  00F1               	movwf	___lwmod@divisor+1
  1543  0734  120A  118A  250B  120A  118A  	fcall	___lwmod
  1544  0739  0871               	movf	?___lwmod+1,w
  1545  073A  00F9               	movwf	___lwdiv@dividend+1
  1546  073B  0870               	movf	?___lwmod,w
  1547  073C  00F8               	movwf	___lwdiv@dividend
  1548  073D  120A  118A  2570  120A  118A  	fcall	___lwdiv
  1549  0742  0876               	movf	?___lwdiv,w
  1550  0743  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0744  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0745  00CB               	movwf	??_display_temp
  1553  0746  084B               	movf	??_display_temp,w
  1554  0747  00C3               	movwf	_pt100
  1555                           
  1556                           ;newmain.c: 232:     pt1000 = (wd % 100) / 10;
  1557  0748  300A               	movlw	10
  1558  0749  00F6               	movwf	___lwdiv@divisor
  1559  074A  3000               	movlw	0
  1560  074B  00F7               	movwf	___lwdiv@divisor+1
  1561  074C  083F               	movf	_wd+1,w
  1562  074D  00F3               	movwf	___lwmod@dividend+1
  1563  074E  083E               	movf	_wd,w
  1564  074F  00F2               	movwf	___lwmod@dividend
  1565  0750  3064               	movlw	100
  1566  0751  00F0               	movwf	___lwmod@divisor
  1567  0752  3000               	movlw	0
  1568  0753  00F1               	movwf	___lwmod@divisor+1
  1569  0754  120A  118A  250B  120A  118A  	fcall	___lwmod
  1570  0759  0871               	movf	?___lwmod+1,w
  1571  075A  00F9               	movwf	___lwdiv@dividend+1
  1572  075B  0870               	movf	?___lwmod,w
  1573  075C  00F8               	movwf	___lwdiv@dividend
  1574  075D  120A  118A  2570  120A  118A  	fcall	___lwdiv
  1575  0762  0876               	movf	?___lwdiv,w
  1576  0763  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0764  1303               	bcf	3,6	;RP1=0, select bank0
  1578  0765  00CB               	movwf	??_display_temp
  1579  0766  084B               	movf	??_display_temp,w
  1580  0767  00C2               	movwf	_pt1000
  1581                           
  1582                           ;newmain.c: 233:     pt10000 = wd % 10;
  1583  0768  300A               	movlw	10
  1584  0769  00F0               	movwf	___lwmod@divisor
  1585  076A  3000               	movlw	0
  1586  076B  00F1               	movwf	___lwmod@divisor+1
  1587  076C  083F               	movf	_wd+1,w
  1588  076D  00F3               	movwf	___lwmod@dividend+1
  1589  076E  083E               	movf	_wd,w
  1590  076F  00F2               	movwf	___lwmod@dividend
  1591  0770  120A  118A  250B  120A  118A  	fcall	___lwmod
  1592  0775  0870               	movf	?___lwmod,w
  1593  0776  1283               	bcf	3,5	;RP0=0, select bank0
  1594  0777  1303               	bcf	3,6	;RP1=0, select bank0
  1595  0778  00CB               	movwf	??_display_temp
  1596  0779  084B               	movf	??_display_temp,w
  1597  077A  00C1               	movwf	_pt10000
  1598                           
  1599                           ;newmain.c: 242:     writecmd(0x01);
  1600  077B  3001               	movlw	1
  1601  077C  120A  118A  2431  120A  118A  	fcall	_writecmd
  1602                           
  1603                           ;newmain.c: 243:     writeInt(tens);
  1604  0781  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0782  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0783  0846               	movf	_tens,w
  1607  0784  00CB               	movwf	??_display_temp
  1608  0785  01CC               	clrf	??_display_temp+1
  1609  0786  084B               	movf	??_display_temp,w
  1610  0787  00F6               	movwf	writeInt@x
  1611  0788  084C               	movf	??_display_temp+1,w
  1612  0789  00F7               	movwf	writeInt@x+1
  1613  078A  120A  118A  23EB  120A  118A  	fcall	_writeInt
  1614                           
  1615                           ;newmain.c: 244:     writeInt(intEntries);
  1616  078F  1283               	bcf	3,5	;RP0=0, select bank0
  1617  0790  1303               	bcf	3,6	;RP1=0, select bank0
  1618  0791  0845               	movf	_intEntries,w
  1619  0792  00CB               	movwf	??_display_temp
  1620  0793  01CC               	clrf	??_display_temp+1
  1621  0794  084B               	movf	??_display_temp,w
  1622  0795  00F6               	movwf	writeInt@x
  1623  0796  084C               	movf	??_display_temp+1,w
  1624  0797  00F7               	movwf	writeInt@x+1
  1625  0798  120A  118A  23EB  120A  118A  	fcall	_writeInt
  1626                           
  1627                           ;newmain.c: 245:     writechar('.');
  1628  079D  302E               	movlw	46
  1629  079E  120A  118A  241E  120A  118A  	fcall	_writechar
  1630                           
  1631                           ;newmain.c: 246:     writeInt(pt10);
  1632  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  1633  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  1634  07A5  0844               	movf	_pt10,w
  1635  07A6  00CB               	movwf	??_display_temp
  1636  07A7  01CC               	clrf	??_display_temp+1
  1637  07A8  084B               	movf	??_display_temp,w
  1638  07A9  00F6               	movwf	writeInt@x
  1639  07AA  084C               	movf	??_display_temp+1,w
  1640  07AB  00F7               	movwf	writeInt@x+1
  1641  07AC  120A  118A  23EB  120A  118A  	fcall	_writeInt
  1642                           
  1643                           ;newmain.c: 247:     writeInt(pt100);
  1644  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1645  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1646  07B3  0843               	movf	_pt100,w
  1647  07B4  00CB               	movwf	??_display_temp
  1648  07B5  01CC               	clrf	??_display_temp+1
  1649  07B6  084B               	movf	??_display_temp,w
  1650  07B7  00F6               	movwf	writeInt@x
  1651  07B8  084C               	movf	??_display_temp+1,w
  1652  07B9  00F7               	movwf	writeInt@x+1
  1653  07BA  120A  118A  23EB  120A  118A  	fcall	_writeInt
  1654                           
  1655                           ;newmain.c: 248:     writeInt(pt1000);
  1656  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  1657  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  1658  07C1  0842               	movf	_pt1000,w
  1659  07C2  00CB               	movwf	??_display_temp
  1660  07C3  01CC               	clrf	??_display_temp+1
  1661  07C4  084B               	movf	??_display_temp,w
  1662  07C5  00F6               	movwf	writeInt@x
  1663  07C6  084C               	movf	??_display_temp+1,w
  1664  07C7  00F7               	movwf	writeInt@x+1
  1665  07C8  120A  118A  23EB  120A  118A  	fcall	_writeInt
  1666                           
  1667                           ;newmain.c: 249:     writeInt(pt10000);
  1668  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1669  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1670  07CF  0841               	movf	_pt10000,w
  1671  07D0  00CB               	movwf	??_display_temp
  1672  07D1  01CC               	clrf	??_display_temp+1
  1673  07D2  084B               	movf	??_display_temp,w
  1674  07D3  00F6               	movwf	writeInt@x
  1675  07D4  084C               	movf	??_display_temp+1,w
  1676  07D5  00F7               	movwf	writeInt@x+1
  1677  07D6  120A  118A  23EB  120A  118A  	fcall	_writeInt
  1678                           
  1679                           ;newmain.c: 250:     delay(10000);
  1680  07DB  3010               	movlw	16
  1681  07DC  00F0               	movwf	delay@t
  1682  07DD  3027               	movlw	39
  1683  07DE  00F1               	movwf	delay@t+1
  1684  07DF  120A  118A  2444   	fcall	_delay
  1685  07E2  0008               	return
  1686  07E3                     __end_of_display_temp:	
  1687                           
  1688                           	psect	text9
  1689  0431                     __ptext9:	
  1690 ;; *************** function _writecmd *****************
  1691 ;; Defined at:
  1692 ;;		line 92 in file "newmain.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  x               1    wreg     unsigned char 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  x               1    5[COMMON] unsigned char 
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg, status,2, status,0, pclath, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1706 ;;      Params:         0       0       0       0       0
  1707 ;;      Locals:         1       0       0       0       0
  1708 ;;      Temps:          0       0       0       0       0
  1709 ;;      Totals:         1       0       0       0       0
  1710 ;;Total ram usage:        1 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    1
  1713 ;; This function calls:
  1714 ;;		_delay
  1715 ;; This function is called by:
  1716 ;;		_lcd_init
  1717 ;;		_display_temp
  1718 ;;		_setCursorPos
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           
  1723                           ;psect for function _writecmd
  1724  0431                     _writecmd:	
  1725                           
  1726                           ;incstack = 0
  1727                           ; Regs used in _writecmd: [wreg+status,2+status,0+pclath+cstack]
  1728                           ;writecmd@x stored from wreg
  1729  0431  00F5               	movwf	writecmd@x
  1730                           
  1731                           ;newmain.c: 93:     RA5 = 0;
  1732  0432  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0433  1303               	bcf	3,6	;RP1=0, select bank0
  1734  0434  1285               	bcf	5,5	;volatile
  1735                           
  1736                           ;newmain.c: 94:     RA4 = 0;
  1737  0435  1205               	bcf	5,4	;volatile
  1738                           
  1739                           ;newmain.c: 95:     PORTD = x;
  1740  0436  0875               	movf	writecmd@x,w
  1741  0437  0088               	movwf	8	;volatile
  1742                           
  1743                           ;newmain.c: 96:     RA3 = 0;
  1744  0438  1185               	bcf	5,3	;volatile
  1745                           
  1746                           ;newmain.c: 97:     delay(60);
  1747  0439  303C               	movlw	60
  1748  043A  00F0               	movwf	delay@t
  1749  043B  3000               	movlw	0
  1750  043C  00F1               	movwf	delay@t+1
  1751  043D  120A  118A  2444   	fcall	_delay
  1752                           
  1753                           ;newmain.c: 98:     RA3 = 1;
  1754  0440  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0441  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0442  1585               	bsf	5,3	;volatile
  1757  0443  0008               	return
  1758  0444                     __end_of_writecmd:	
  1759                           
  1760                           	psect	text10
  1761  03EB                     __ptext10:	
  1762 ;; *************** function _writeInt *****************
  1763 ;; Defined at:
  1764 ;;		line 86 in file "newmain.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  x               2    6[COMMON] int 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0, pclath, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1778 ;;      Params:         2       0       0       0       0
  1779 ;;      Locals:         0       0       0       0       0
  1780 ;;      Temps:          0       0       0       0       0
  1781 ;;      Totals:         2       0       0       0       0
  1782 ;;Total ram usage:        2 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    2
  1785 ;; This function calls:
  1786 ;;		_writechar
  1787 ;; This function is called by:
  1788 ;;		_display_temp
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           
  1793                           ;psect for function _writeInt
  1794  03EB                     _writeInt:	
  1795                           
  1796                           ;newmain.c: 87:     writechar(x + 48);
  1797                           
  1798                           ;incstack = 0
  1799                           ; Regs used in _writeInt: [wreg+status,2+status,0+pclath+cstack]
  1800  03EB  0876               	movf	writeInt@x,w
  1801  03EC  3E30               	addlw	48
  1802  03ED  120A  118A  241E   	fcall	_writechar
  1803  03F0  0008               	return
  1804  03F1                     __end_of_writeInt:	
  1805                           
  1806                           	psect	text11
  1807  041E                     __ptext11:	
  1808 ;; *************** function _writechar *****************
  1809 ;; Defined at:
  1810 ;;		line 77 in file "newmain.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  x               1    wreg     unsigned char 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  x               1    5[COMMON] unsigned char 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, status,2, status,0, pclath, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1824 ;;      Params:         0       0       0       0       0
  1825 ;;      Locals:         1       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0
  1827 ;;      Totals:         1       0       0       0       0
  1828 ;;Total ram usage:        1 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    1
  1831 ;; This function calls:
  1832 ;;		_delay
  1833 ;; This function is called by:
  1834 ;;		_writeInt
  1835 ;;		_display_temp
  1836 ;;		_writeString
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           
  1841                           ;psect for function _writechar
  1842  041E                     _writechar:	
  1843                           
  1844                           ;incstack = 0
  1845                           ; Regs used in _writechar: [wreg+status,2+status,0+pclath+cstack]
  1846                           ;writechar@x stored from wreg
  1847  041E  00F5               	movwf	writechar@x
  1848                           
  1849                           ;newmain.c: 78:     RA5 = 1;
  1850  041F  1283               	bcf	3,5	;RP0=0, select bank0
  1851  0420  1303               	bcf	3,6	;RP1=0, select bank0
  1852  0421  1685               	bsf	5,5	;volatile
  1853                           
  1854                           ;newmain.c: 79:     RA4 = 0;
  1855  0422  1205               	bcf	5,4	;volatile
  1856                           
  1857                           ;newmain.c: 80:     PORTD = x;
  1858  0423  0875               	movf	writechar@x,w
  1859  0424  0088               	movwf	8	;volatile
  1860                           
  1861                           ;newmain.c: 81:     RA3 = 0;
  1862  0425  1185               	bcf	5,3	;volatile
  1863                           
  1864                           ;newmain.c: 82:     delay(60);
  1865  0426  303C               	movlw	60
  1866  0427  00F0               	movwf	delay@t
  1867  0428  3000               	movlw	0
  1868  0429  00F1               	movwf	delay@t+1
  1869  042A  120A  118A  2444   	fcall	_delay
  1870                           
  1871                           ;newmain.c: 83:     RA3 = 1;
  1872  042D  1283               	bcf	3,5	;RP0=0, select bank0
  1873  042E  1303               	bcf	3,6	;RP1=0, select bank0
  1874  042F  1585               	bsf	5,3	;volatile
  1875  0430  0008               	return
  1876  0431                     __end_of_writechar:	
  1877                           
  1878                           	psect	text12
  1879  0444                     __ptext12:	
  1880 ;; *************** function _delay *****************
  1881 ;; Defined at:
  1882 ;;		line 103 in file "newmain.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  t               2    0[COMMON] int 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  i               2    3[COMMON] int 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1896 ;;      Params:         2       0       0       0       0
  1897 ;;      Locals:         2       0       0       0       0
  1898 ;;      Temps:          1       0       0       0       0
  1899 ;;      Totals:         5       0       0       0       0
  1900 ;;Total ram usage:        5 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_writechar
  1906 ;;		_writecmd
  1907 ;;		_display_temp
  1908 ;;		_get_temp
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function _delay
  1915  0444                     _delay:	
  1916                           
  1917                           ;newmain.c: 104:     int i;;newmain.c: 105:     for (i = 0; i < t; i++);
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in _delay: [wreg+status,2]
  1921  0444  01F3               	clrf	delay@i
  1922  0445  01F4               	clrf	delay@i+1
  1923  0446                     l80:	
  1924  0446  0874               	movf	delay@i+1,w
  1925  0447  3A80               	xorlw	128
  1926  0448  00F2               	movwf	??_delay
  1927  0449  0871               	movf	delay@t+1,w
  1928  044A  3A80               	xorlw	128
  1929  044B  0272               	subwf	??_delay,w
  1930  044C  1D03               	skipz
  1931  044D  2C50               	goto	u555
  1932  044E  0870               	movf	delay@t,w
  1933  044F  0273               	subwf	delay@i,w
  1934  0450                     u555:	
  1935  0450  1803               	btfsc	3,0
  1936  0451  0008               	return
  1937  0452  3001               	movlw	1
  1938  0453  07F3               	addwf	delay@i,f
  1939  0454  1803               	skipnc
  1940  0455  0AF4               	incf	delay@i+1,f
  1941  0456  3000               	movlw	0
  1942  0457  07F4               	addwf	delay@i+1,f
  1943  0458  2C46               	goto	l80
  1944  0459                     __end_of_delay:	
  1945                           
  1946                           	psect	text13
  1947  050B                     __ptext13:	
  1948 ;; *************** function ___lwmod *****************
  1949 ;; Defined at:
  1950 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  divisor         2    0[COMMON] unsigned int 
  1953 ;;  dividend        2    2[COMMON] unsigned int 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  counter         1    5[COMMON] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  2    0[COMMON] unsigned int 
  1958 ;; Registers used:
  1959 ;;		wreg, status,2, status,0
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1965 ;;      Params:         4       0       0       0       0
  1966 ;;      Locals:         1       0       0       0       0
  1967 ;;      Temps:          1       0       0       0       0
  1968 ;;      Totals:         6       0       0       0       0
  1969 ;;Total ram usage:        6 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_display_temp
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           
  1979                           ;psect for function ___lwmod
  1980  050B                     ___lwmod:	
  1981                           
  1982                           ;incstack = 0
  1983                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1984  050B  0870               	movf	___lwmod@divisor,w
  1985  050C  0471               	iorwf	___lwmod@divisor+1,w
  1986  050D  1903               	btfsc	3,2
  1987  050E  2D38               	goto	l1424
  1988  050F  01F5               	clrf	___lwmod@counter
  1989  0510  0AF5               	incf	___lwmod@counter,f
  1990  0511                     l1414:	
  1991  0511  1BF1               	btfsc	___lwmod@divisor+1,7
  1992  0512  2D1F               	goto	l1416
  1993  0513  3001               	movlw	1
  1994  0514                     u915:	
  1995  0514  1003               	clrc
  1996  0515  0DF0               	rlf	___lwmod@divisor,f
  1997  0516  0DF1               	rlf	___lwmod@divisor+1,f
  1998  0517  3EFF               	addlw	-1
  1999  0518  1D03               	skipz
  2000  0519  2D14               	goto	u915
  2001  051A  3001               	movlw	1
  2002  051B  00F4               	movwf	??___lwmod
  2003  051C  0874               	movf	??___lwmod,w
  2004  051D  07F5               	addwf	___lwmod@counter,f
  2005  051E  2D11               	goto	l1414
  2006  051F                     l1416:	
  2007  051F  0871               	movf	___lwmod@divisor+1,w
  2008  0520  0273               	subwf	___lwmod@dividend+1,w
  2009  0521  1D03               	skipz
  2010  0522  2D25               	goto	u935
  2011  0523  0870               	movf	___lwmod@divisor,w
  2012  0524  0272               	subwf	___lwmod@dividend,w
  2013  0525                     u935:	
  2014  0525  1C03               	skipc
  2015  0526  2D2D               	goto	l1420
  2016  0527  0870               	movf	___lwmod@divisor,w
  2017  0528  02F2               	subwf	___lwmod@dividend,f
  2018  0529  0871               	movf	___lwmod@divisor+1,w
  2019  052A  1C03               	skipc
  2020  052B  03F3               	decf	___lwmod@dividend+1,f
  2021  052C  02F3               	subwf	___lwmod@dividend+1,f
  2022  052D                     l1420:	
  2023  052D  3001               	movlw	1
  2024  052E                     u945:	
  2025  052E  1003               	clrc
  2026  052F  0CF1               	rrf	___lwmod@divisor+1,f
  2027  0530  0CF0               	rrf	___lwmod@divisor,f
  2028  0531  3EFF               	addlw	-1
  2029  0532  1D03               	skipz
  2030  0533  2D2E               	goto	u945
  2031  0534  3001               	movlw	1
  2032  0535  02F5               	subwf	___lwmod@counter,f
  2033  0536  1D03               	btfss	3,2
  2034  0537  2D1F               	goto	l1416
  2035  0538                     l1424:	
  2036  0538  0873               	movf	___lwmod@dividend+1,w
  2037  0539  00F1               	movwf	?___lwmod+1
  2038  053A  0872               	movf	___lwmod@dividend,w
  2039  053B  00F0               	movwf	?___lwmod
  2040  053C  0008               	return
  2041  053D                     __end_of___lwmod:	
  2042                           
  2043                           	psect	text14
  2044  0570                     __ptext14:	
  2045 ;; *************** function ___lwdiv *****************
  2046 ;; Defined at:
  2047 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  divisor         2    6[COMMON] unsigned int 
  2050 ;;  dividend        2    8[COMMON] unsigned int 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  quotient        2   11[COMMON] unsigned int 
  2053 ;;  counter         1   13[COMMON] unsigned char 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  2    6[COMMON] unsigned int 
  2056 ;; Registers used:
  2057 ;;		wreg, status,2, status,0
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2063 ;;      Params:         4       0       0       0       0
  2064 ;;      Locals:         3       0       0       0       0
  2065 ;;      Temps:          1       0       0       0       0
  2066 ;;      Totals:         8       0       0       0       0
  2067 ;;Total ram usage:        8 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_display_temp
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           
  2077                           ;psect for function ___lwdiv
  2078  0570                     ___lwdiv:	
  2079                           
  2080                           ;incstack = 0
  2081                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2082  0570  01FB               	clrf	___lwdiv@quotient
  2083  0571  01FC               	clrf	___lwdiv@quotient+1
  2084  0572  0876               	movf	___lwdiv@divisor,w
  2085  0573  0477               	iorwf	___lwdiv@divisor+1,w
  2086  0574  1903               	btfsc	3,2
  2087  0575  2DA7               	goto	l1402
  2088  0576  01FD               	clrf	___lwdiv@counter
  2089  0577  0AFD               	incf	___lwdiv@counter,f
  2090  0578                     l1390:	
  2091  0578  1BF7               	btfsc	___lwdiv@divisor+1,7
  2092  0579  2D86               	goto	l1392
  2093  057A  3001               	movlw	1
  2094  057B                     u845:	
  2095  057B  1003               	clrc
  2096  057C  0DF6               	rlf	___lwdiv@divisor,f
  2097  057D  0DF7               	rlf	___lwdiv@divisor+1,f
  2098  057E  3EFF               	addlw	-1
  2099  057F  1D03               	skipz
  2100  0580  2D7B               	goto	u845
  2101  0581  3001               	movlw	1
  2102  0582  00FA               	movwf	??___lwdiv
  2103  0583  087A               	movf	??___lwdiv,w
  2104  0584  07FD               	addwf	___lwdiv@counter,f
  2105  0585  2D78               	goto	l1390
  2106  0586                     l1392:	
  2107  0586  3001               	movlw	1
  2108  0587                     u865:	
  2109  0587  1003               	clrc
  2110  0588  0DFB               	rlf	___lwdiv@quotient,f
  2111  0589  0DFC               	rlf	___lwdiv@quotient+1,f
  2112  058A  3EFF               	addlw	-1
  2113  058B  1D03               	skipz
  2114  058C  2D87               	goto	u865
  2115  058D  0877               	movf	___lwdiv@divisor+1,w
  2116  058E  0279               	subwf	___lwdiv@dividend+1,w
  2117  058F  1D03               	skipz
  2118  0590  2D93               	goto	u875
  2119  0591  0876               	movf	___lwdiv@divisor,w
  2120  0592  0278               	subwf	___lwdiv@dividend,w
  2121  0593                     u875:	
  2122  0593  1C03               	skipc
  2123  0594  2D9C               	goto	l1398
  2124  0595  0876               	movf	___lwdiv@divisor,w
  2125  0596  02F8               	subwf	___lwdiv@dividend,f
  2126  0597  0877               	movf	___lwdiv@divisor+1,w
  2127  0598  1C03               	skipc
  2128  0599  03F9               	decf	___lwdiv@dividend+1,f
  2129  059A  02F9               	subwf	___lwdiv@dividend+1,f
  2130  059B  147B               	bsf	___lwdiv@quotient,0
  2131  059C                     l1398:	
  2132  059C  3001               	movlw	1
  2133  059D                     u885:	
  2134  059D  1003               	clrc
  2135  059E  0CF7               	rrf	___lwdiv@divisor+1,f
  2136  059F  0CF6               	rrf	___lwdiv@divisor,f
  2137  05A0  3EFF               	addlw	-1
  2138  05A1  1D03               	skipz
  2139  05A2  2D9D               	goto	u885
  2140  05A3  3001               	movlw	1
  2141  05A4  02FD               	subwf	___lwdiv@counter,f
  2142  05A5  1D03               	btfss	3,2
  2143  05A6  2D86               	goto	l1392
  2144  05A7                     l1402:	
  2145  05A7  087C               	movf	___lwdiv@quotient+1,w
  2146  05A8  00F7               	movwf	?___lwdiv+1
  2147  05A9  087B               	movf	___lwdiv@quotient,w
  2148  05AA  00F6               	movwf	?___lwdiv
  2149  05AB  0008               	return
  2150  05AC                     __end_of___lwdiv:	
  2151                           
  2152                           	psect	text15
  2153  05AC                     __ptext15:	
  2154 ;; *************** function ___awmod *****************
  2155 ;; Defined at:
  2156 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  divisor         2    0[COMMON] int 
  2159 ;;  dividend        2    2[COMMON] int 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  sign            1    6[COMMON] unsigned char 
  2162 ;;  counter         1    5[COMMON] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  2    0[COMMON] int 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2172 ;;      Params:         4       0       0       0       0
  2173 ;;      Locals:         2       0       0       0       0
  2174 ;;      Temps:          1       0       0       0       0
  2175 ;;      Totals:         7       0       0       0       0
  2176 ;;Total ram usage:        7 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_display_temp
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           
  2186                           ;psect for function ___awmod
  2187  05AC                     ___awmod:	
  2188                           
  2189                           ;incstack = 0
  2190                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2191  05AC  01F6               	clrf	___awmod@sign
  2192  05AD  1FF3               	btfss	___awmod@dividend+1,7
  2193  05AE  2DB6               	goto	l1350
  2194  05AF  09F2               	comf	___awmod@dividend,f
  2195  05B0  09F3               	comf	___awmod@dividend+1,f
  2196  05B1  0AF2               	incf	___awmod@dividend,f
  2197  05B2  1903               	skipnz
  2198  05B3  0AF3               	incf	___awmod@dividend+1,f
  2199  05B4  01F6               	clrf	___awmod@sign
  2200  05B5  0AF6               	incf	___awmod@sign,f
  2201  05B6                     l1350:	
  2202  05B6  1FF1               	btfss	___awmod@divisor+1,7
  2203  05B7  2DBD               	goto	l1354
  2204  05B8  09F0               	comf	___awmod@divisor,f
  2205  05B9  09F1               	comf	___awmod@divisor+1,f
  2206  05BA  0AF0               	incf	___awmod@divisor,f
  2207  05BB  1903               	skipnz
  2208  05BC  0AF1               	incf	___awmod@divisor+1,f
  2209  05BD                     l1354:	
  2210  05BD  0870               	movf	___awmod@divisor,w
  2211  05BE  0471               	iorwf	___awmod@divisor+1,w
  2212  05BF  1903               	btfsc	3,2
  2213  05C0  2DEA               	goto	l1372
  2214  05C1  01F5               	clrf	___awmod@counter
  2215  05C2  0AF5               	incf	___awmod@counter,f
  2216  05C3                     l1362:	
  2217  05C3  1BF1               	btfsc	___awmod@divisor+1,7
  2218  05C4  2DD1               	goto	l1364
  2219  05C5  3001               	movlw	1
  2220  05C6                     u775:	
  2221  05C6  1003               	clrc
  2222  05C7  0DF0               	rlf	___awmod@divisor,f
  2223  05C8  0DF1               	rlf	___awmod@divisor+1,f
  2224  05C9  3EFF               	addlw	-1
  2225  05CA  1D03               	skipz
  2226  05CB  2DC6               	goto	u775
  2227  05CC  3001               	movlw	1
  2228  05CD  00F4               	movwf	??___awmod
  2229  05CE  0874               	movf	??___awmod,w
  2230  05CF  07F5               	addwf	___awmod@counter,f
  2231  05D0  2DC3               	goto	l1362
  2232  05D1                     l1364:	
  2233  05D1  0871               	movf	___awmod@divisor+1,w
  2234  05D2  0273               	subwf	___awmod@dividend+1,w
  2235  05D3  1D03               	skipz
  2236  05D4  2DD7               	goto	u795
  2237  05D5  0870               	movf	___awmod@divisor,w
  2238  05D6  0272               	subwf	___awmod@dividend,w
  2239  05D7                     u795:	
  2240  05D7  1C03               	skipc
  2241  05D8  2DDF               	goto	l1368
  2242  05D9  0870               	movf	___awmod@divisor,w
  2243  05DA  02F2               	subwf	___awmod@dividend,f
  2244  05DB  0871               	movf	___awmod@divisor+1,w
  2245  05DC  1C03               	skipc
  2246  05DD  03F3               	decf	___awmod@dividend+1,f
  2247  05DE  02F3               	subwf	___awmod@dividend+1,f
  2248  05DF                     l1368:	
  2249  05DF  3001               	movlw	1
  2250  05E0                     u805:	
  2251  05E0  1003               	clrc
  2252  05E1  0CF1               	rrf	___awmod@divisor+1,f
  2253  05E2  0CF0               	rrf	___awmod@divisor,f
  2254  05E3  3EFF               	addlw	-1
  2255  05E4  1D03               	skipz
  2256  05E5  2DE0               	goto	u805
  2257  05E6  3001               	movlw	1
  2258  05E7  02F5               	subwf	___awmod@counter,f
  2259  05E8  1D03               	btfss	3,2
  2260  05E9  2DD1               	goto	l1364
  2261  05EA                     l1372:	
  2262  05EA  0876               	movf	___awmod@sign,w
  2263  05EB  1903               	btfsc	3,2
  2264  05EC  2DF2               	goto	l1376
  2265  05ED  09F2               	comf	___awmod@dividend,f
  2266  05EE  09F3               	comf	___awmod@dividend+1,f
  2267  05EF  0AF2               	incf	___awmod@dividend,f
  2268  05F0  1903               	skipnz
  2269  05F1  0AF3               	incf	___awmod@dividend+1,f
  2270  05F2                     l1376:	
  2271  05F2  0873               	movf	___awmod@dividend+1,w
  2272  05F3  00F1               	movwf	?___awmod+1
  2273  05F4  0872               	movf	___awmod@dividend,w
  2274  05F5  00F0               	movwf	?___awmod
  2275  05F6  0008               	return
  2276  05F7                     __end_of___awmod:	
  2277                           
  2278                           	psect	text16
  2279  05F7                     __ptext16:	
  2280 ;; *************** function ___awdiv *****************
  2281 ;; Defined at:
  2282 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  divisor         2    0[COMMON] int 
  2285 ;;  dividend        2    2[COMMON] int 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  quotient        2    7[COMMON] int 
  2288 ;;  sign            1    6[COMMON] unsigned char 
  2289 ;;  counter         1    5[COMMON] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  2    0[COMMON] int 
  2292 ;; Registers used:
  2293 ;;		wreg, status,2, status,0
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2299 ;;      Params:         4       0       0       0       0
  2300 ;;      Locals:         4       0       0       0       0
  2301 ;;      Temps:          1       0       0       0       0
  2302 ;;      Totals:         9       0       0       0       0
  2303 ;;Total ram usage:        9 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_display_temp
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           
  2313                           ;psect for function ___awdiv
  2314  05F7                     ___awdiv:	
  2315                           
  2316                           ;incstack = 0
  2317                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2318  05F7  01F6               	clrf	___awdiv@sign
  2319  05F8  1FF1               	btfss	___awdiv@divisor+1,7
  2320  05F9  2E01               	goto	l1306
  2321  05FA  09F0               	comf	___awdiv@divisor,f
  2322  05FB  09F1               	comf	___awdiv@divisor+1,f
  2323  05FC  0AF0               	incf	___awdiv@divisor,f
  2324  05FD  1903               	skipnz
  2325  05FE  0AF1               	incf	___awdiv@divisor+1,f
  2326  05FF  01F6               	clrf	___awdiv@sign
  2327  0600  0AF6               	incf	___awdiv@sign,f
  2328  0601                     l1306:	
  2329  0601  1FF3               	btfss	___awdiv@dividend+1,7
  2330  0602  2E0C               	goto	l1312
  2331  0603  09F2               	comf	___awdiv@dividend,f
  2332  0604  09F3               	comf	___awdiv@dividend+1,f
  2333  0605  0AF2               	incf	___awdiv@dividend,f
  2334  0606  1903               	skipnz
  2335  0607  0AF3               	incf	___awdiv@dividend+1,f
  2336  0608  3001               	movlw	1
  2337  0609  00F4               	movwf	??___awdiv
  2338  060A  0874               	movf	??___awdiv,w
  2339  060B  06F6               	xorwf	___awdiv@sign,f
  2340  060C                     l1312:	
  2341  060C  01F7               	clrf	___awdiv@quotient
  2342  060D  01F8               	clrf	___awdiv@quotient+1
  2343  060E  0870               	movf	___awdiv@divisor,w
  2344  060F  0471               	iorwf	___awdiv@divisor+1,w
  2345  0610  1903               	btfsc	3,2
  2346  0611  2E43               	goto	l1334
  2347  0612  01F5               	clrf	___awdiv@counter
  2348  0613  0AF5               	incf	___awdiv@counter,f
  2349  0614                     l1322:	
  2350  0614  1BF1               	btfsc	___awdiv@divisor+1,7
  2351  0615  2E22               	goto	l1324
  2352  0616  3001               	movlw	1
  2353  0617                     u675:	
  2354  0617  1003               	clrc
  2355  0618  0DF0               	rlf	___awdiv@divisor,f
  2356  0619  0DF1               	rlf	___awdiv@divisor+1,f
  2357  061A  3EFF               	addlw	-1
  2358  061B  1D03               	skipz
  2359  061C  2E17               	goto	u675
  2360  061D  3001               	movlw	1
  2361  061E  00F4               	movwf	??___awdiv
  2362  061F  0874               	movf	??___awdiv,w
  2363  0620  07F5               	addwf	___awdiv@counter,f
  2364  0621  2E14               	goto	l1322
  2365  0622                     l1324:	
  2366  0622  3001               	movlw	1
  2367  0623                     u695:	
  2368  0623  1003               	clrc
  2369  0624  0DF7               	rlf	___awdiv@quotient,f
  2370  0625  0DF8               	rlf	___awdiv@quotient+1,f
  2371  0626  3EFF               	addlw	-1
  2372  0627  1D03               	skipz
  2373  0628  2E23               	goto	u695
  2374  0629  0871               	movf	___awdiv@divisor+1,w
  2375  062A  0273               	subwf	___awdiv@dividend+1,w
  2376  062B  1D03               	skipz
  2377  062C  2E2F               	goto	u705
  2378  062D  0870               	movf	___awdiv@divisor,w
  2379  062E  0272               	subwf	___awdiv@dividend,w
  2380  062F                     u705:	
  2381  062F  1C03               	skipc
  2382  0630  2E38               	goto	l1330
  2383  0631  0870               	movf	___awdiv@divisor,w
  2384  0632  02F2               	subwf	___awdiv@dividend,f
  2385  0633  0871               	movf	___awdiv@divisor+1,w
  2386  0634  1C03               	skipc
  2387  0635  03F3               	decf	___awdiv@dividend+1,f
  2388  0636  02F3               	subwf	___awdiv@dividend+1,f
  2389  0637  1477               	bsf	___awdiv@quotient,0
  2390  0638                     l1330:	
  2391  0638  3001               	movlw	1
  2392  0639                     u715:	
  2393  0639  1003               	clrc
  2394  063A  0CF1               	rrf	___awdiv@divisor+1,f
  2395  063B  0CF0               	rrf	___awdiv@divisor,f
  2396  063C  3EFF               	addlw	-1
  2397  063D  1D03               	skipz
  2398  063E  2E39               	goto	u715
  2399  063F  3001               	movlw	1
  2400  0640  02F5               	subwf	___awdiv@counter,f
  2401  0641  1D03               	btfss	3,2
  2402  0642  2E22               	goto	l1324
  2403  0643                     l1334:	
  2404  0643  0876               	movf	___awdiv@sign,w
  2405  0644  1903               	btfsc	3,2
  2406  0645  2E4B               	goto	l1338
  2407  0646  09F7               	comf	___awdiv@quotient,f
  2408  0647  09F8               	comf	___awdiv@quotient+1,f
  2409  0648  0AF7               	incf	___awdiv@quotient,f
  2410  0649  1903               	skipnz
  2411  064A  0AF8               	incf	___awdiv@quotient+1,f
  2412  064B                     l1338:	
  2413  064B  0878               	movf	___awdiv@quotient+1,w
  2414  064C  00F1               	movwf	?___awdiv+1
  2415  064D  0877               	movf	___awdiv@quotient,w
  2416  064E  00F0               	movwf	?___awdiv
  2417  064F  0008               	return
  2418  0650                     __end_of___awdiv:	
  2419  007E                     btemp	set	126	;btemp
  2420  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    8
    Data        30
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    delay2@t	PTR int  size(1) Largest target is 4
		 -> t430us(BANK0[4]), t70us(BANK0[4]), t503us(BANK0[4]), t63us(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_get_temp
    _lcd_init->_writecmd
    _get_temp->_write_byte
    _write_byte->_delay2
    _reset->_delay2
    _read_byte->_delay2
    _display_temp->___lwdiv
    _writecmd->_delay
    _writeInt->_writechar
    _writechar->_delay
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    _main->_display_temp

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6725
                              _delay
                       _display_temp
                           _get_temp
                               _init
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     448
                           _writecmd
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             6     6      0    1470
                                             10 COMMON     4     4      0
                              _delay
                          _read_byte
                              _reset
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     392
                                              5 COMMON     5     5      0
                             _delay2
 ---------------------------------------------------------------------------------
 (2) _reset                                                1     1      0     303
                                              5 COMMON     1     1      0
                             _delay2
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     349
                                              5 COMMON     3     3      0
                             _delay2
 ---------------------------------------------------------------------------------
 (3) _delay2                                               5     5      0     278
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _display_temp                                         3     3      0    4381
                                              0 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                              _delay
                           _writeInt
                          _writechar
                           _writecmd
 ---------------------------------------------------------------------------------
 (2) _writecmd                                             1     1      0     448
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _writeInt                                             2     0      2     926
                                              6 COMMON     2     0      2
                          _writechar
 ---------------------------------------------------------------------------------
 (2) _writechar                                            1     1      0     448
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                5     3      2     426
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _display_temp
     ___awdiv
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _delay
     _writeInt
       _writechar
         _delay
     _writechar
       _delay
     _writecmd
       _delay
   _get_temp
     _delay
     _read_byte
       _delay2
     _reset
       _delay2
     _write_byte
       _delay2
   _init
   _lcd_init
     _writecmd
       _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3C      12        0.0%
ABS                  0      0      3C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Nov 11 17:38:09 2019

                      pc 0002                       l80 0446                       _TX 0047  
                     _TZ 0048             ___awdiv@sign 0076                       _wd 003E  
                     fsr 0004                      l117 046C                      _RA2 002A  
                    _RA3 002B                      _RA4 002C                      _RC0 0038  
                    _RA5 002D                      u705 062F                      u715 0639  
                    u555 0450                      u805 05E0                      u675 0617  
                    u915 0514                      u845 057B                      u695 0623  
                    u775 05C6                      u935 0525                      u865 0587  
                    u945 052E                      u795 05D7                      u875 0593  
                    u885 059D                      u965 06B5                      _THV 0049  
          ?_display_temp 0070                      _TLV 004A                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     l1214 0558                     l1312 060C  
                   l1330 0638                     l1322 0614                     l1306 0601  
                   l1402 05A7                     l1324 0622                     l1420 052D  
                   l1172 0468                     l1236 04DF                     l1334 0643  
                   l1350 05B6                     l1414 0511                     l1416 051F  
                   l1424 0538                     l1338 064B                     l1362 05C3  
                   l1354 05BD                     l1450 070B                     l1442 06F7  
                   l1194 0542                     l1530 047F                     l1364 05D1  
                   l1372 05EA                     l1292 04D2                     l1390 0578  
                   l1454 0715                     l1446 0701                     l1294 04D3  
                   l1376 05F2                     l1368 05DF                     l1392 0586  
                   l1296 04B3                     l1398 059C                     u1015 069A  
                   u1025 06A5                     _pt10 0044                     _main 0475  
                   _init 03F1                     _tens 0046                     btemp 007E  
          write_byte@val 0078                     start 0000                    ?_main 0070  
         ??_display_temp 004B                    ?_init 0070          __end_of___awdiv 0650  
          __CFG_WDTE$OFF 0000          __end_of___awmod 05F7          ___awdiv@divisor 0070  
        __end_of___lwdiv 05AC          __end_of___lwmod 053D          ___awdiv@counter 0075  
                  _PORTD 0008                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088            __CFG_PWRTE$ON 0000                    _t70us 0032  
                  _t63us 002E                    _pt100 0043                    _delay 0444  
                  _tUKus 002A                    _table 0020                    _reset 04B1  
         write_byte@temp 0077           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07E3  
           __end_of_main 0493             __end_of_init 03FC                   ??_main 007E  
                 ??_init 0070                   ?_delay 0070                   _ADCON1 009F  
                 ?_reset 0070         ___awdiv@dividend 0072                   _TRISC0 0438  
                 _t430us 0036                   _t503us 003A         __end_of_lcd_init 040D  
       __end_of_get_temp 06B0                   _pt1000 0042                ??___awdiv 0074  
              ??___awmod 0074                   _delay2 0459                ??___lwdiv 007A  
              ??___lwmod 0074                   delay@i 0073                   delay@t 0070  
       ___awdiv@quotient 0077          ___awmod@divisor 0070          ___awmod@counter 0075  
       __end_of_writeInt 03F1         __end_of_writecmd 0444  __end_of__initialization 07FC  
   __end_of_display_temp 07E3           __pcstackCOMMON 0070             __pidataBANK0 0493  
          __end_of_delay 0459            __end_of_reset 04DA                  ??_delay 0072  
                ??_reset 0075               __pbssBANK0 003E       __size_of_read_byte 0031  
             __pmaintext 0475                  ?_delay2 0070                ?_lcd_init 0070  
              ?_get_temp 0070               __stringtab 0003       __size_of_writechar 0013  
             _intEntries 0045                  ___awdiv 05F7                  ___awmod 05AC  
                _pt10000 0041          __size_of_delay2 001C                  ___lwdiv 0570  
                ___lwmod 050B                  __ptext1 03FC                  __ptext2 03F1  
                __ptext3 0650                  __ptext4 053D                  __ptext5 04B1  
                __ptext6 04DA                  __ptext7 0459                  __ptext8 06B0  
                __ptext9 0431                ?_writeInt 0076                ?_writecmd 0070  
                delay2@t 0074                  delay2@x 0071                  delay2@y 0072  
                delay2@z 0073         ___awmod@dividend 0072        __end_of_read_byte 050B  
             ??_lcd_init 0076               ??_get_temp 007A    __size_of_display_temp 0133  
   end_of_initialization 07FC               ??_writeInt 0078               ??_writecmd 0075  
           _display_temp 06B0        __end_of_writechar 0431           __end_of_delay2 0475  
             _write_byte 053D      start_initialization 07E3            reset@presence 0075  
             init_fetch0 040D                 ??_delay2 0070              __pdataBANK0 0020  
             read_byte@i 0077               read_byte@j 0040                ___latbits 0002  
          __pcstackBANK0 004B        __size_of_lcd_init 0011        __size_of_get_temp 0060  
        setCursorPos@ln1 000F          setCursorPos@ln2 000D          setCursorPos@ln3 000B  
        setCursorPos@ln4 0009         ___lwdiv@dividend 0078                 ?___awdiv 0070  
               ?___awmod 0070                 ?___lwdiv 0076                 ?___lwmod 0070  
            ?_write_byte 0070                __pstrings 0003        __size_of_writeInt 0006  
      __size_of_writecmd 0013         ___lwdiv@quotient 007B           __size_of_delay 0015  
              _read_byte 04DA           __size_of_reset 0029              __stringbase 0008  
            write_byte@i 0079                _writechar 041E               ?_read_byte 0070  
__end_ofsetCursorPos@ln1 0011  __end_ofsetCursorPos@ln2 000F  __end_ofsetCursorPos@ln3 000D  
__end_ofsetCursorPos@ln4 000B      __size_of_write_byte 0033         __size_of___awdiv 0059  
       __size_of___awmod 004B         __size_of___lwdiv 003C         __size_of___lwmod 0032  
     __end_of__stringtab 0009          ___lwdiv@divisor 0076          ___lwdiv@counter 007D  
               __ptext10 03EB                 __ptext11 041E                 __ptext12 0444  
               __ptext13 050B                 __ptext14 0570                 __ptext15 05AC  
               __ptext16 05F7               ?_writechar 0070                 _lcd_init 03FC  
               _get_temp 0650            __size_of_main 001E            __size_of_init 000B  
             writechar@x 0075                 _writeInt 03EB                 _writecmd 0431  
         read_byte@value 0076                 init_ram0 0411              ??_read_byte 0075  
       ___lwmod@dividend 0072                stringcode 0003                writeInt@x 0076  
              writecmd@x 0075             ??_write_byte 0075          ___lwmod@divisor 0070  
        ___lwmod@counter 0075                 stringdir 0003                 stringtab 0003  
            ??_writechar 0075       __end_of_write_byte 0570  
