

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Nov 17 20:32:53 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169                           
   170                           	psect	strings
   171  0003                     __pstrings:	
   172  0003                     stringtab:	
   173  0003                     __stringtab:	
   174  0003                     stringcode:	
   175                           ;	String table - string pointers are 1 byte each
   176                           
   177  0003                     stringdir:	
   178  0003  3000               	movlw	high stringdir
   179  0004  008A               	movwf	10
   180  0005  0804               	movf	4,w
   181  0006  0A84               	incf	4,f
   182  0007  0782               	addwf	2,f
   183  0008                     __stringbase:	
   184  0008  3400               	retlw	0
   185  0009                     __end_of__stringtab:	
   186  0009                     buzzer_alarm@PAUSE:	
   187  0009  3488               	retlw	136
   188  000A  3413               	retlw	19
   189  000B                     __end_ofbuzzer_alarm@PAUSE:	
   190  000B                     buzzer_alarm@REPEAT:	
   191  000B  3405               	retlw	5
   192  000C  3400               	retlw	0
   193  000D                     __end_ofbuzzer_alarm@REPEAT:	
   194  000D                     buzzer_alarm@BUZZER_TIME:	
   195  000D  34D4               	retlw	212
   196  000E  3430               	retlw	48
   197  000F                     __end_ofbuzzer_alarm@BUZZER_TIME:	
   198  0030                     _RB0	set	48
   199  0049                     _RE1	set	73
   200  0430                     _TRISB0	set	1072
   201  0449                     _TRISE1	set	1097
   202                           
   203                           ; #config settings
   204  0000                     
   205                           	psect	cinit
   206  07FB                     start_initialization:	
   207  07FB                     __initialization:	
   208                           
   209                           ; Clear objects allocated to COMMON
   210  07FB  01FB               	clrf	__pbssCOMMON& (0+127)
   211  07FC                     end_of_initialization:	
   212                           ;End of C runtime variable initialization code
   213                           
   214  07FC                     __end_of__initialization:	
   215  07FC  0183               	clrf	3
   216  07FD  120A  118A  2F8B   	ljmp	_main	;jump to C main() function
   217                           
   218                           	psect	bssCOMMON
   219  007B                     __pbssCOMMON:	
   220  007B                     _ALARM:	
   221  007B                     	ds	1
   222                           
   223                           	psect	cstackCOMMON
   224  0070                     __pcstackCOMMON:	
   225  0070                     ?_buzzer_init:	
   226  0070                     ??_buzzer_init:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ?_buzzer_sound:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ?_buzzer_alarm:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_getButtonInput:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ??_getButtonInput:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_main:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     buzzer_sound@bT:	
   245                           ; 1 bytes @ 0x0
   246                           
   247                           
   248                           ; 2 bytes @ 0x0
   249  0070                     	ds	2
   250  0072                     buzzer_sound@pT:	
   251                           
   252                           ; 2 bytes @ 0x2
   253  0072                     	ds	2
   254  0074                     ??_buzzer_sound:	
   255                           
   256                           ; 1 bytes @ 0x4
   257  0074                     	ds	1
   258  0075                     buzzer_sound@i:	
   259                           
   260                           ; 2 bytes @ 0x5
   261  0075                     	ds	2
   262  0077                     buzzer_sound@i_32:	
   263                           
   264                           ; 2 bytes @ 0x7
   265  0077                     	ds	2
   266  0079                     ??_buzzer_alarm:	
   267  0079                     buzzer_alarm@i:	
   268                           ; 1 bytes @ 0x9
   269                           
   270                           
   271                           ; 2 bytes @ 0x9
   272  0079                     	ds	2
   273  007B                     ??_main:	
   274                           
   275                           	psect	maintext
   276  078B                     __pmaintext:	
   277                           ; 1 bytes @ 0xB
   278 ;;
   279 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   280 ;;
   281 ;; *************** function _main *****************
   282 ;; Defined at:
   283 ;;		line 67 in file "buzzer_driver.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   292 ;; Tracked objects:
   293 ;;		On entry : B00/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   297 ;;      Params:         0       0       0       0       0
   298 ;;      Locals:         0       0       0       0       0
   299 ;;      Temps:          0       0       0       0       0
   300 ;;      Totals:         0       0       0       0       0
   301 ;;Total ram usage:        0 bytes
   302 ;; Hardware stack levels required when called:    2
   303 ;; This function calls:
   304 ;;		_buzzer_alarm
   305 ;;		_buzzer_init
   306 ;;		_getButtonInput
   307 ;; This function is called by:
   308 ;;		Startup code after reset
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           
   313                           ;psect for function _main
   314  078B                     _main:	
   315  078B                     l697:	
   316                           ;incstack = 0
   317                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   318                           
   319  078B  120A  118A  2776  120A  118A  	fcall	_buzzer_init
   320  0790                     l43:	
   321  0790  120A  118A  2780  120A  118A  	fcall	_getButtonInput
   322  0795                     l699:	
   323  0795  087B               	movf	_ALARM,w
   324  0796  1903               	btfsc	3,2
   325  0797  2F99               	goto	u91
   326  0798  2F9A               	goto	u90
   327  0799                     u91:	
   328  0799  2F90               	goto	l43
   329  079A                     u90:	
   330  079A                     l701:	
   331  079A  120A  118A  27A3  120A  118A  	fcall	_buzzer_alarm
   332  079F  2F90               	goto	l43
   333  07A0  120A  118A  2800   	ljmp	start
   334  07A3                     __end_of_main:	
   335                           
   336                           	psect	text1
   337  0780                     __ptext1:	
   338 ;; *************** function _getButtonInput *****************
   339 ;; Defined at:
   340 ;;		line 54 in file "buzzer_driver.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		status,2
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   354 ;;      Params:         0       0       0       0       0
   355 ;;      Locals:         0       0       0       0       0
   356 ;;      Temps:          0       0       0       0       0
   357 ;;      Totals:         0       0       0       0       0
   358 ;;Total ram usage:        0 bytes
   359 ;; Hardware stack levels used:    1
   360 ;; This function calls:
   361 ;;		Nothing
   362 ;; This function is called by:
   363 ;;		_main
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367                           
   368                           ;psect for function _getButtonInput
   369  0780                     _getButtonInput:	
   370  0780                     l663:	
   371                           ;incstack = 0
   372                           ; Regs used in _getButtonInput: [status,2]
   373                           
   374                           
   375                           ;buzzer_driver.c: 55:     while (1) {
   376  0780  1283               	bcf	3,5	;RP0=0, select bank0
   377  0781  1303               	bcf	3,6	;RP1=0, select bank0
   378  0782  1C06               	btfss	6,0	;volatile
   379  0783  2F85               	goto	u41
   380  0784  2F86               	goto	u40
   381  0785                     u41:	
   382  0785  2F89               	goto	l667
   383  0786                     u40:	
   384  0786                     l665:	
   385                           
   386                           ;buzzer_driver.c: 58:         if (ALARM) buzzer_alarm();
   387  0786  01FB               	clrf	_ALARM
   388  0787  0AFB               	incf	_ALARM,f
   389                           
   390                           ;buzzer_driver.c: 59: 
   391  0788  2F8A               	goto	l38
   392  0789                     l667:	
   393                           
   394                           ;buzzer_driver.c: 60:     }
   395  0789  01FB               	clrf	_ALARM
   396  078A                     l38:	
   397  078A  0008               	return
   398  078B                     __end_of_getButtonInput:	
   399                           
   400                           	psect	text2
   401  0776                     __ptext2:	
   402 ;; *************** function _buzzer_init *****************
   403 ;; Defined at:
   404 ;;		line 26 in file "buzzer_driver.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		None
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   418 ;;      Params:         0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0
   421 ;;      Totals:         0       0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           
   432                           ;psect for function _buzzer_init
   433  0776                     _buzzer_init:	
   434  0776                     l649:	
   435                           ;incstack = 0
   436                           ; Regs used in _buzzer_init: []
   437                           
   438                           
   439                           ;buzzer_driver.c: 27:     for (int i = 0; i < pT; ++i);
   440  0776  1683               	bsf	3,5	;RP0=1, select bank1
   441  0777  1303               	bcf	3,6	;RP1=0, select bank1
   442  0778  1089               	bcf	9,1	;volatile
   443                           
   444                           ;buzzer_driver.c: 28: }
   445  0779  1283               	bcf	3,5	;RP0=0, select bank0
   446  077A  1303               	bcf	3,6	;RP1=0, select bank0
   447  077B  1089               	bcf	9,1	;volatile
   448                           
   449                           ;buzzer_driver.c: 31:     const int BUZZER_TIME = 12500;
   450  077C  1683               	bsf	3,5	;RP0=1, select bank1
   451  077D  1303               	bcf	3,6	;RP1=0, select bank1
   452  077E  1406               	bsf	6,0	;volatile
   453  077F                     l13:	
   454  077F  0008               	return
   455  0780                     __end_of_buzzer_init:	
   456                           
   457                           	psect	text3
   458  07A3                     __ptext3:	
   459 ;; *************** function _buzzer_alarm *****************
   460 ;; Defined at:
   461 ;;		line 44 in file "buzzer_driver.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  i               2    9[COMMON] int 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   475 ;;      Params:         0       0       0       0       0
   476 ;;      Locals:         2       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0
   478 ;;      Totals:         2       0       0       0       0
   479 ;;Total ram usage:        2 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; Hardware stack levels required when called:    1
   482 ;; This function calls:
   483 ;;		_buzzer_sound
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           
   490                           ;psect for function _buzzer_alarm
   491  07A3                     _buzzer_alarm:	
   492  07A3                     l685:	
   493                           ;incstack = 0
   494                           ; Regs used in _buzzer_alarm: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   495                           
   496                           
   497                           ;buzzer_driver.c: 45:     } else {;buzzer_driver.c: 46:         ALARM = 0;;buzzer_driver
      +                          .c: 47:     };buzzer_driver.c: 49: 
   498  07A3  01F9               	clrf	buzzer_alarm@i
   499  07A4  01FA               	clrf	buzzer_alarm@i+1
   500  07A5                     l691:	
   501                           
   502                           ;buzzer_driver.c: 50: 
   503  07A5  30D4               	movlw	212
   504  07A6  00F0               	movwf	buzzer_sound@bT
   505  07A7  3030               	movlw	48
   506  07A8  00F1               	movwf	buzzer_sound@bT+1
   507  07A9  3088               	movlw	136
   508  07AA  00F2               	movwf	buzzer_sound@pT
   509  07AB  3013               	movlw	19
   510  07AC  00F3               	movwf	buzzer_sound@pT+1
   511  07AD  120A  118A  27C6  120A  118A  	fcall	_buzzer_sound
   512  07B2                     l693:	
   513                           
   514                           ;buzzer_driver.c: 51: 
   515  07B2  3001               	movlw	1
   516  07B3  07F9               	addwf	buzzer_alarm@i,f
   517  07B4  1803               	skipnc
   518  07B5  0AFA               	incf	buzzer_alarm@i+1,f
   519  07B6  3000               	movlw	0
   520  07B7  07FA               	addwf	buzzer_alarm@i+1,f
   521  07B8                     l695:	
   522  07B8  087A               	movf	buzzer_alarm@i+1,w
   523  07B9  3A80               	xorlw	128
   524  07BA  00FF               	movwf	btemp+1
   525  07BB  3080               	movlw	128
   526  07BC  027F               	subwf	btemp+1,w
   527  07BD  1D03               	skipz
   528  07BE  2FC1               	goto	u85
   529  07BF  3005               	movlw	5
   530  07C0  0279               	subwf	buzzer_alarm@i,w
   531  07C1                     u85:	
   532  07C1  1C03               	skipc
   533  07C2  2FC4               	goto	u81
   534  07C3  2FC5               	goto	u80
   535  07C4                     u81:	
   536  07C4  2FA5               	goto	l691
   537  07C5                     u80:	
   538  07C5                     l33:	
   539  07C5  0008               	return
   540  07C6                     __end_of_buzzer_alarm:	
   541                           
   542                           	psect	text4
   543  07C6                     __ptext4:	
   544 ;; *************** function _buzzer_sound *****************
   545 ;; Defined at:
   546 ;;		line 37 in file "buzzer_driver.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;  bT              2    0[COMMON] int 
   549 ;;  pT              2    2[COMMON] int 
   550 ;; Auto vars:     Size  Location     Type
   551 ;;  i               2    7[COMMON] int 
   552 ;;  i               2    5[COMMON] int 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, status,2
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   562 ;;      Params:         4       0       0       0       0
   563 ;;      Locals:         4       0       0       0       0
   564 ;;      Temps:          1       0       0       0       0
   565 ;;      Totals:         9       0       0       0       0
   566 ;;Total ram usage:        9 bytes
   567 ;; Hardware stack levels used:    1
   568 ;; This function calls:
   569 ;;		Nothing
   570 ;; This function is called by:
   571 ;;		_buzzer_alarm
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           
   576                           ;psect for function _buzzer_sound
   577  07C6                     _buzzer_sound:	
   578  07C6                     l675:	
   579                           ;incstack = 0
   580                           ; Regs used in _buzzer_sound: [wreg+status,2]
   581                           
   582                           
   583                           ;buzzer_driver.c: 38: }
   584  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   585  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   586  07C8  1489               	bsf	9,1	;volatile
   587  07C9                     l677:	
   588                           
   589                           ;buzzer_driver.c: 39: 
   590  07C9  01F5               	clrf	buzzer_sound@i
   591  07CA  01F6               	clrf	buzzer_sound@i+1
   592  07CB  2FD2               	goto	l16
   593  07CC                     l679:	
   594  07CC  3001               	movlw	1
   595  07CD  07F5               	addwf	buzzer_sound@i,f
   596  07CE  1803               	skipnc
   597  07CF  0AF6               	incf	buzzer_sound@i+1,f
   598  07D0  3000               	movlw	0
   599  07D1  07F6               	addwf	buzzer_sound@i+1,f
   600  07D2                     l16:	
   601  07D2  0876               	movf	buzzer_sound@i+1,w
   602  07D3  3A80               	xorlw	128
   603  07D4  00F4               	movwf	??_buzzer_sound
   604  07D5  0871               	movf	buzzer_sound@bT+1,w
   605  07D6  3A80               	xorlw	128
   606  07D7  0274               	subwf	??_buzzer_sound,w
   607  07D8  1D03               	skipz
   608  07D9  2FDC               	goto	u65
   609  07DA  0870               	movf	buzzer_sound@bT,w
   610  07DB  0275               	subwf	buzzer_sound@i,w
   611  07DC                     u65:	
   612  07DC  1C03               	skipc
   613  07DD  2FDF               	goto	u61
   614  07DE  2FE0               	goto	u60
   615  07DF                     u61:	
   616  07DF  2FCC               	goto	l679
   617  07E0                     u60:	
   618  07E0                     l18:	
   619                           
   620                           ;buzzer_driver.c: 40: void getButtonInput() {
   621  07E0  1283               	bcf	3,5	;RP0=0, select bank0
   622  07E1  1303               	bcf	3,6	;RP1=0, select bank0
   623  07E2  1089               	bcf	9,1	;volatile
   624  07E3                     l681:	
   625                           
   626                           ;buzzer_driver.c: 41:     if (RB0) {
   627  07E3  01F7               	clrf	buzzer_sound@i_32
   628  07E4  01F8               	clrf	buzzer_sound@i_32+1
   629  07E5  2FEC               	goto	l19
   630  07E6                     l683:	
   631  07E6  3001               	movlw	1
   632  07E7  07F7               	addwf	buzzer_sound@i_32,f
   633  07E8  1803               	skipnc
   634  07E9  0AF8               	incf	buzzer_sound@i_32+1,f
   635  07EA  3000               	movlw	0
   636  07EB  07F8               	addwf	buzzer_sound@i_32+1,f
   637  07EC                     l19:	
   638  07EC  0878               	movf	buzzer_sound@i_32+1,w
   639  07ED  3A80               	xorlw	128
   640  07EE  00F4               	movwf	??_buzzer_sound
   641  07EF  0873               	movf	buzzer_sound@pT+1,w
   642  07F0  3A80               	xorlw	128
   643  07F1  0274               	subwf	??_buzzer_sound,w
   644  07F2  1D03               	skipz
   645  07F3  2FF6               	goto	u75
   646  07F4  0872               	movf	buzzer_sound@pT,w
   647  07F5  0277               	subwf	buzzer_sound@i_32,w
   648  07F6                     u75:	
   649  07F6  1C03               	skipc
   650  07F7  2FF9               	goto	u71
   651  07F8  2FFA               	goto	u70
   652  07F9                     u71:	
   653  07F9  2FE6               	goto	l683
   654  07FA                     u70:	
   655  07FA                     l22:	
   656  07FA  0008               	return
   657  07FB                     __end_of_buzzer_sound:	
   658  007E                     btemp	set	126	;btemp
   659  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    6
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_buzzer_alarm
    _buzzer_alarm->_buzzer_sound

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     290
                       _buzzer_alarm
                        _buzzer_init
                     _getButtonInput
 ---------------------------------------------------------------------------------
 (1) _getButtonInput                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buzzer_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buzzer_alarm                                         2     2      0     290
                                              9 COMMON     2     2      0
                       _buzzer_sound
 ---------------------------------------------------------------------------------
 (2) _buzzer_sound                                         9     5      4     244
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buzzer_alarm
     _buzzer_sound
   _buzzer_init
   _getButtonInput

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Nov 17 20:32:53 2019

__end_ofbuzzer_alarm@BUZZER_TIME 000F                                pc 0002                               l13 077F  
                             l22 07FA                               l16 07D2                               l33 07C5  
                             l18 07E0                               l19 07EC                               l43 0790  
                             l38 078A                               u40 0786                               u41 0785  
                             u60 07E0                               u61 07DF                               u70 07FA  
                             u71 07F9                               u80 07C5                               u65 07DC  
                             u81 07C4                               u90 079A                               u75 07F6  
                             u91 0799                               u85 07C1                               fsr 0004  
                            l701 079A                              l663 0780                              l681 07E3  
                            l649 0776                              l665 0786                              l683 07E6  
                            l675 07C6                              l691 07A5                              l667 0789  
                            l677 07C9                              l693 07B2                              l685 07A3  
                            l679 07CC                              l695 07B8                              l697 078B  
                            l699 0795                              _RB0 0030                              _RE1 0049  
                   __CFG_FOSC$HS 0000                     __CFG_LVP$OFF 0000                             _main 078B  
                           btemp 007E                             start 0000                            ?_main 0070  
                          _ALARM 007B                    __CFG_WDTE$OFF 0000                    __CFG_PWRTE$ON 0000  
                 __CFG_BOREN$OFF 0000                            pclath 000A                            status 0003  
                          wtemp0 007E                     ?_buzzer_init 0070                  __initialization 07FB  
                   __end_of_main 07A3                    buzzer_alarm@i 0079                           ??_main 007B  
                  buzzer_sound@i 0075       __end_ofbuzzer_alarm@REPEAT 000D                           _TRISB0 0430  
                         _TRISE1 0449                buzzer_alarm@PAUSE 0009                    ?_buzzer_alarm 0070  
        __end_of__initialization 07FC                    ?_buzzer_sound 0070                   __pcstackCOMMON 0070  
      __end_ofbuzzer_alarm@PAUSE 000B                   ??_buzzer_alarm 0079          __size_of_getButtonInput 000B  
               buzzer_sound@i_32 0077                   ??_buzzer_sound 0074                   buzzer_sound@bT 0070  
                 buzzer_sound@pT 0072                       __pmaintext 078B             __size_of_buzzer_init 000A  
                     __stringtab 0003                          __ptext1 0780                          __ptext2 0776  
                        __ptext3 07A3                          __ptext4 07C6             end_of_initialization 07FC  
             buzzer_alarm@REPEAT 000B             __end_of_buzzer_alarm 07C6             __end_of_buzzer_sound 07FB  
                 _getButtonInput 0780              start_initialization 07FB           __end_of_getButtonInput 078B  
                    __pbssCOMMON 007B                        ___latbits 0002                  ?_getButtonInput 0070  
                  ??_buzzer_init 0070            __size_of_buzzer_alarm 0023            __size_of_buzzer_sound 0035  
                      __pstrings 0003                     _buzzer_alarm 07A3                     _buzzer_sound 07C6  
            __end_of_buzzer_init 0780                      __stringbase 0008          buzzer_alarm@BUZZER_TIME 000D  
             __end_of__stringtab 0009                    __size_of_main 0018                      _buzzer_init 0776  
               ??_getButtonInput 0070                        stringcode 0003                         stringdir 0003  
                       stringtab 0003  
